{"version":3,"file":"form-create.min.js","sources":["../../../node_modules/@vue/babel-helper-vue-jsx-merge-props/dist/helper.js","../../utils/src/index.js","../src/components/checkbox/index.jsx","../../core/src/components/formCreate.js","../../core/src/core/mergeJsxProps.js","../../core/src/factory/vData.js","../../core/src/factory/creator.js","../../core/src/core/util.js","../../core/src/factory/maker.js","../../core/src/factory/vNode.js","../../core/src/factory/parser.js","../../core/src/core/render.js","../../core/src/core/api.js","../../core/src/core/handle.js","../../core/src/components/fragment.jsx","../../core/src/core/index.js","../../core/src/factory/form.js","../src/core/modal.js","../../../node_modules/style-inject/dist/style-inject.es.js","../src/components/frame/index.jsx","../src/components/radio/index.jsx","../src/components/select/index.jsx","../src/components/tree/index.jsx","../src/components/upload/index.jsx","../src/components/group/index.jsx","../src/components/index.js","../src/parsers/checkbox/parser.js","../src/parsers/checkbox/index.js","../src/parsers/datePicker/parser.js","../src/parsers/datePicker/index.js","../src/parsers/frame/parser.js","../src/parsers/frame/index.js","../src/parsers/hidden/index.js","../src/parsers/input/parser.js","../src/parsers/input/index.js","../src/parsers/radio/parser.js","../src/parsers/radio/index.js","../src/parsers/select/parser.js","../src/parsers/select/index.js","../src/parsers/slider/parser.js","../src/parsers/slider/index.js","../src/parsers/switch/parser.js","../src/parsers/switch/index.js","../src/parsers/timePicker/parser.js","../src/parsers/timePicker/index.js","../src/parsers/tree/parser.js","../src/parsers/tree/index.js","../src/parsers/upload/parser.js","../src/parsers/upload/index.js","../src/parsers/index.js","../src/core/config.js","../src/core/nodes.js","../src/core/form.js","../src/makers/datePicker.js","../src/makers/frame.js","../src/makers/input.js","../src/makers/select.js","../src/makers/slider.js","../src/makers/timePicker.js","../src/makers/tree.js","../src/makers/upload.js","../src/makers/index.js","../src/core/index.js","../src/index.js"],"sourcesContent":["\"use strict\";function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var normalMerge=[\"attrs\",\"props\",\"domProps\"],toArrayMerge=[\"class\",\"style\",\"directives\"],functionalMerge=[\"on\",\"nativeOn\"],mergeJsxProps=function(a){return a.reduce(function(c,a){for(var b in a)if(!c[b])c[b]=a[b];else if(-1!==normalMerge.indexOf(b))c[b]=_extends({},c[b],a[b]);else if(-1!==toArrayMerge.indexOf(b)){var d=c[b]instanceof Array?c[b]:[c[b]],e=a[b]instanceof Array?a[b]:[a[b]];c[b]=d.concat(e)}else if(-1!==functionalMerge.indexOf(b)){for(var f in a[b])if(c[b][f]){var g=c[b][f]instanceof Array?c[b][f]:[c[b][f]],h=a[b][f]instanceof Array?a[b][f]:[a[b][f]];c[b][f]=g.concat(h)}else c[b][f]=a[b][f];}else if(\"hook\"==b)for(var i in a[b])c[b][i]=c[b][i]?mergeFn(c[b][i],a[b][i]):a[b][i];else c[b]=a[b];return c},{})},mergeFn=function(a,b){return function(){a&&a.apply(this,arguments),b&&b.apply(this,arguments)}};module.exports=mergeJsxProps;\n","import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n\nexport function isValidChildren(children) {\n    return Array.isArray(children) && children.length > 0;\n}\n\nexport const _toString = Object.prototype.toString;\n\nexport function isUndef(v) {\n    return v === undefined || v === null\n}\n\nexport function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n\nexport function extend(to, _from) {\n    for (var key in _from) {\n        $set(to, key, _from[key]);\n    }\n    return to\n}\n\nexport function debounce(fn, wait) {\n    var timeout = null;\n    return function (...arg) {\n        if (timeout !== null)\n            clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...arg), wait);\n    }\n}\n\nexport function isType(arg, type) {\n    return _toString.call(arg) === '[object ' + type + ']'\n}\n\nexport function isDate(arg) {\n    return isType(arg, 'Date');\n}\n\nexport function isPlainObject(arg) {\n    return isType(arg, 'Object');\n}\n\nexport function isFunction(arg) {\n    return isType(arg, 'Function');\n}\n\nexport function isString(arg) {\n    return isType(arg, 'String');\n}\n\nexport function isBool(arg) {\n    return isType(arg, 'Boolean');\n}\n\nexport function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n\nexport function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n)\n}\n\nexport function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ((isUndef(value) || value === '' ? [] : [value])\n        );\n}\n\nexport function isElement(arg) {\n    return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !isPlainObject(arg)\n}\n\nexport function deepExtend(origin, target = {}) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || isPlainObject(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                deepExtend(origin[key], clone);\n            } else {\n                $set(origin, key, clone);\n            }\n        }\n    }\n    return origin\n}\n\nexport function deepExtendArgs(origin, ...lst) {\n    lst.forEach(target => {\n        origin = deepExtend(origin, target);\n    });\n    return origin;\n}\n\nlet id = 0;\n\nexport function uniqueId() {\n    return ++id\n}\n\nexport function toDefSlot(slot, $h) {\n    return [slot && isFunction(slot) ? slot($h) : slot]\n}\n\n\nexport function timeStampToDate(timeStamp) {\n    if (isDate(timeStamp))\n        return timeStamp;\n    else {\n        let date = new Date(timeStamp);\n        return date.toString() === 'Invalid Date' ? timeStamp : date;\n    }\n}\n\nexport function preventDefault(e) {\n    e.preventDefault();\n}\n\nexport function dateFormat(fmt, date = new Date) {\n    let o = {\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n    for (let k in o)\n        if (new RegExp('(' + k + ')').test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1)\n                ? (o[k])\n                : (('00' + o[k]).substr(('' + o[k]).length)));\n    return fmt\n}\n\nexport function hasSlot(children, slotName) {\n    return children.length !== 0 && children.some(child => {\n        if (child.data) {\n            if ((!child.data.slot && slotName === 'default') || (child.data.slot === slotName))\n                return true;\n        } else if (slotName === 'default')\n            return true;\n        return false;\n    })\n}\n\nexport function errMsg(i) {\n\n    return '\\n\\x67\\x69\\x74\\x68\\x75\\x62\\x3a\\x68\\x74\\x74\\x70' +\n        '\\x73\\x3a\\x2f\\x2f\\x67\\x69\\x74\\x68\\x75\\x62\\x2e\\x63\\x6f' +\n        '\\x6d\\x2f\\x78\\x61\\x62\\x6f\\x79\\x2f\\x66\\x6f\\x72\\x6d\\x2d' +\n        '\\x63\\x72\\x65\\x61\\x74\\x65\\n\\x64\\x6f\\x63\\x75\\x6d\\x65' +\n        '\\x6e\\x74\\x3a\\x68\\x74\\x74\\x70\\x3a\\x2f\\x2f\\x77\\x77\\x77' +\n        '\\x2e\\x66\\x6f\\x72\\x6d\\x2d\\x63\\x72\\x65\\x61\\x74\\x65\\x2e' +\n        '\\x63\\x6f\\x6d' + (i || '');\n}\n","import {uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-checkbox';\n\nexport default {\n    name: NAME,\n    props: {\n        options: {\n            type: Array,\n            default: () => []\n        },\n        children: {\n            type: Array,\n            default: () => []\n        },\n        ctx: {\n            type: Object,\n            default: () => ({})\n        },\n        value: {\n            type: Array,\n            default: () => []\n        },\n        type: String\n    },\n    watch: {\n        value() {\n            this.update();\n        }\n    },\n    data() {\n        return {\n            trueValue: [],\n            unique: uniqueId()\n        }\n    },\n    methods: {\n        onInput(n) {\n            this.$emit('input', this.options.filter((opt) => n.indexOf(opt.label) !== -1).map((opt) => opt.value));\n        },\n        update() {\n            this.trueValue = this.value ? this.options.filter((opt) => this.value.indexOf(opt.value) !== -1)\n                .map((option) => option.label) : []\n        }\n    },\n    created() {\n        this.update();\n    },\n    render() {\n        return <ElCheckboxGroup {...this.ctx} v-model={this.trueValue}\n            on-input={this.onInput}>{this.options.map((opt, index) => {\n                const props = {...opt};\n                const Type = this.type === 'button' ? 'ElCheckboxButton' : 'ElCheckbox';\n                delete props.value;\n                return <Type {...{props}} key={NAME + Type + index + this.unique}/>\n            }).concat(this.chlidren)}</ElCheckboxGroup>\n    }\n}\n","import {deepExtend} from '@form-create/utils';\n\nexport const formCreateName = 'FormCreate';\n\nexport default function $FormCreate(FormCreate, components) {\n    return {\n        name: formCreateName,\n        componentName: formCreateName,\n        props: {\n            rule: {\n                type: Array,\n                required: true,\n                default: () => {\n                    return {};\n                }\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                },\n                required: false\n            },\n            value: Object\n        },\n        data: () => {\n            return {\n                formData: undefined,\n                buttonProps: undefined,\n                resetProps: undefined,\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n            };\n        },\n        components,\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _buttonProps(props) {\n                this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n            },\n            _resetProps(props) {\n                this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n            },\n            _refresh() {\n                ++this.unique;\n            }\n        },\n        watch: {\n            option: '_refresh',\n            rule(n) {\n                this.formCreate.handle.reloadRule(n);\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(rule, option);\n            this.formCreate.beforeCreate(this);\n        },\n        created() {\n            this.formCreate.created();\n            this.$f = this.formCreate.api();\n            this.$emit('input', this.$f);\n        },\n        mounted() {\n            const formCreate = this.formCreate;\n\n            formCreate.mounted();\n            this.$emit('input', this.$f);\n\n        },\n        beforeDestroy() {\n            this.formCreate.handle.reloadRule([]);\n            this.formCreate.handle.$render.clearCacheAll();\n        },\n    }\n}\n","const normalMerge = ['attrs', 'props', 'domProps'];\nconst toArrayMerge = ['class', 'style', 'directives'];\nconst functionalMerge = ['on', 'nativeOn'];\n\nconst mergeJsxProps = (objects, initial) =>\n    objects.reduce((a, b) => {\n        for (const key in b) {\n            if (a[key]) {\n                if (normalMerge.indexOf(key) !== -1) {\n                    a[key] = {...a[key], ...b[key]}\n                } else if (toArrayMerge.indexOf(key) !== -1) {\n                    const arrA = a[key] instanceof Array ? a[key] : [a[key]];\n                    const arrB = b[key] instanceof Array ? b[key] : [b[key]];\n                    a[key] = [...arrA, ...arrB]\n                } else if (functionalMerge.indexOf(key) !== -1) {\n                    for (const event in b[key]) {\n                        if (a[key][event]) {\n                            const arrA = a[key][event] instanceof Array ? a[key][event] : [a[key][event]];\n                            const arrB = b[key][event] instanceof Array ? b[key][event] : [b[key][event]];\n                            a[key][event] = [...arrA, ...arrB]\n                        } else {\n                            a[key][event] = b[key][event]\n                        }\n                    }\n                } else if (key === 'hook') {\n                    for (let hook in b[key]) {\n                        if (a[key][hook]) {\n                            a[key][hook] = mergeFn(a[key][hook], b[key][hook])\n                        } else {\n                            a[key][hook] = b[key][hook]\n                        }\n                    }\n                } else {\n                    a[key] = b[key]\n                }\n            } else {\n                a[key] = b[key]\n            }\n        }\n        return a\n    }, initial);\n\nconst mergeFn = (fn1, fn2) =>\n    function () {\n        fn1 && fn1.apply(this, arguments);\n        fn2 && fn2.apply(this, arguments);\n    };\n\nexport default mergeJsxProps\n","import {isPlainObject, isUndef, toString} from '@form-create/utils';\nimport mergeJsxProps from '../core/mergeJsxProps';\n\nfunction defVData() {\n    return {\n        // class: {},\n        // style: {},\n        // attrs: {},\n        props: {},\n        // domProps: {},\n        on: {},\n        // nativeOn: {},\n        // directives: [],\n        // scopedSlots: {},\n        // slot: undefined,\n        // key: undefined,\n        // ref: undefined\n    };\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    merge(props) {\n        mergeJsxProps([props], this._data);\n        return this;\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            this.merge({class: classList});\n        } else if (isPlainObject(classList)) {\n            this.merge(classList);\n        } else {\n            this.merge({class: {[toString(classList)]: !!status}});\n        }\n\n        return this;\n    }\n\n    init() {\n        this._data = defVData();\n        return this;\n    }\n\n    get() {\n        const data = Object.keys(this._data).reduce((initial, key) => {\n            const value = this._data[key];\n            if (value === undefined) return initial;\n            if (Array.isArray(value) && !value.length) return initial;\n            if (isPlainObject(value) && !Object.keys(value).length && key !== 'props') return initial;\n\n            initial[key] = value;\n            return initial;\n        }, {});\n        this.init();\n        return data;\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style', 'directives'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        this.merge({[key]: val});\n        return this;\n    };\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n        if (isPlainObject(obj)) {\n            this.merge({[key]: obj})\n        } else {\n            this.merge({[key]: {[toString(obj)]: val}})\n        }\n\n        return this;\n    };\n});\n\nexport const vdataField = objList.concat(keyList, 'class');\n","import {$set, extend, isFunction, isPlainObject} from '@form-create/utils';\nimport VData from './vData';\n\nfunction baseRule() {\n    return {\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        control: [],\n        emit: [],\n        template: undefined,\n        emitPrefix: undefined,\n        native: undefined,\n        info: undefined,\n    };\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props);\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type)) type(maker);\n        else maker.props(typeName, type);\n        return maker;\n    };\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n        extend(this._data, baseRule());\n        extend(this._data, {type, title, field, value});\n        if (isPlainObject(props)) this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this;\n    }\n\n    getRule() {\n        return this._data;\n    }\n\n    event(...args) {\n        this.on(...args);\n        return this;\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'value', 'name', 'title', 'native', 'info', 'hidden', 'visibility', 'inject', 'model'];\n\nkeyAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (value) {\n        $set(this._data, attr, value);\n        return this;\n    };\n});\n\nconst objAttrs = ['col'];\n\nobjAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this._data, attr, extend(this._data[attr], opt));\n        return this;\n    };\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit', 'control'];\n\narrAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this._data, attr, this._data[attr].concat(opt));\n        return this;\n    };\n});\n","import Creator from '../factory/creator';\nimport {isFunction, isString, isUndef, isValidChildren} from '@form-create/utils';\n\nexport function toJson(obj) {\n    return JSON.stringify(obj, function (key, val) {\n        if (val instanceof Creator) {\n            return val.getRule();\n        }\n\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== 'function') {\n            return val;\n        }\n        if (val.__inject)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n\n        return '' + val;\n    });\n}\n\n\nexport function parseJson(json) {\n    return JSON.parse(json, function (k, v) {\n        if (isUndef(v)) return v;\n        if (v.indexOf && v.indexOf('function') > -1) {\n            try {\n                return eval('(function(){return ' + v + ' })()')\n            } catch (e) {\n                console.error(`[form-create]解析失败:${v}`);\n                return undefined;\n            }\n        }\n        return v;\n    });\n}\n\nexport function enumerable(value) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false\n    }\n}\n\nexport function copyRule(rule) {\n    return copyRules([rule])[0];\n}\n\nexport function copyRules(rules) {\n    return rules.map(rule => {\n        if (isString(rule)) return rule;\n        let r;\n        if (isFunction(rule.getRule)) {\n            r = new Creator();\n            r._data = {...rule._data};\n            if (r._data.field && r._data.value === undefined)\n                r.value(null);\n            if (isValidChildren(r._data.children)) {\n                r._data.children = copyRules(r._data.children);\n            }\n        } else {\n            r = {...rule};\n            if (r.field && r.value === undefined) r.value = null;\n            if (isValidChildren(r.children))\n                r.children = copyRules(r.children);\n        }\n        return r;\n    })\n}\n","import Creator, {creatorFactory} from './creator';\nimport {parseJson, enumerable} from '../core/util';\nimport {extend, isPlainObject, isString, isValidChildren} from '@form-create/utils';\n\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    let maker = {};\n\n    extend(maker, {\n        create,\n        createTmp\n    });\n    maker.template = createTmp;\n    maker.parse = parse;\n\n    return maker;\n}\n\nfunction parse(rule, toMaker = false) {\n    if (isString(rule)) rule = parseJson(rule);\n\n    if (rule instanceof Creator) return toMaker ? rule : rule.getRule();\n    if (isPlainObject(rule)) {\n        const maker = ruleToMaker(rule);\n        return toMaker ? maker : maker.getRule();\n    } else if (!Array.isArray(rule)) return rule;\n    else {\n        const rules = rule.map(r => parse(r, toMaker));\n        Object.defineProperties(rules, {\n            find: enumerable(findField),\n            model: enumerable(model)\n        });\n\n        return rules;\n    }\n}\n\nfunction findField(field, origin) {\n    let children = [];\n    for (let i in this) {\n        const rule = this[i] instanceof Creator ? this[i]._data : this[i];\n        if (rule.field === field) return origin === true ? rule : this[i];\n        if (isValidChildren(rule.children)) children = children.concat(rule.children);\n    }\n    if (children.length > 0) return findField.call(children, field);\n}\n\nfunction model(formData) {\n    Object.keys(formData).forEach(field => {\n        const rule = this.find(field, true);\n        if (rule) rule.value = formData[field];\n    });\n}\n\nfunction ruleToMaker(rule) {\n    const maker = new Creator();\n    Object.keys(rule).forEach(key => {\n        maker._data[key] = rule[key];\n    });\n    return maker;\n}\n","import {isFunction, isString, toString} from '@form-create/utils';\n\nfunction parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data;\n}\n\nfunction getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || []);\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        if (vm)\n            this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node;\n    }\n\n    static use(nodes) {\n        Object.keys(nodes).forEach((k) => {\n            VNode.prototype[toString(k).toLocaleLowerCase()] = VNode.prototype[k] = function (data, VNodeFn) {\n                return this.make(nodes[k], data, VNodeFn);\n            };\n        });\n    }\n}\n\nVNode.use({fragment: 'fcFragment'});\n","import VData from './vData';\nimport {toString, uniqueId} from '@form-create/utils';\nimport VNode from './vNode';\n\nexport default class BaseParser {\n\n    constructor(handle, rule, id) {\n        this.rule = rule;\n        this.vData = new VData;\n        this.vNode = new VNode();\n        this.id = id;\n        this.watch = [];\n        this.originType = rule.type;\n        this.type = toString(rule.type).toLocaleLowerCase();\n        this.isDef = true;\n        this.el = undefined;\n\n        if (!rule.field) {\n            this.field = '_def_' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n        this.name = rule.name;\n\n        this.key = 'key_' + id;\n        this.refName = '__' + this.field + this.id;\n        this.formItemRefName = 'fi' + this.refName;\n        this.root = [];\n        this.ctrlRule = null;\n        this.modelEvent = 'input';\n\n        this.update(handle);\n        this.init();\n    }\n\n    update(handle) {\n        this.$handle = handle;\n        this.$render = handle.$render;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.vNode.setVm(this.vm);\n        this.deleted = false;\n    }\n\n    init() {\n    }\n\n    toFormValue(value) {\n        return value\n    }\n\n    toValue(formValue) {\n        return formValue;\n    }\n}\n","import {_vue as Vue} from './index';\nimport {debounce, errMsg, isFunction, isString, isUndef, isValidChildren} from '@form-create/utils';\nimport VNode from '../factory/vNode';\nimport VData, {vdataField} from '../factory/vData';\n\n\nconst $de = debounce((fn) => fn(), 1);\n\nexport default class Render {\n    constructor(handle) {\n        this.$handle = handle;\n        this.fc = handle.fc;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.$form = handle.$form;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.cache = {};\n        this.renderList = {};\n    }\n\n    clearCache(parser, clear = true) {\n        if (!this.cache[parser.id]) return;\n        if (this.cacheStatus(parser))\n            this.$handle.refresh();\n        const parent = this.cache[parser.id].parent;\n        this.cache[parser.id] = null;\n        if (parent && clear)\n            this.clearCache(parent, clear);\n    }\n\n    clearCacheAll() {\n        this.cache = {};\n    }\n\n    setCache(parser, vnode, parent) {\n        this.cache[parser.id] = {\n            vnode,\n            use: false,\n            parent\n        };\n    }\n\n    cacheStatus(parser) {\n        return this.cache[parser.id] && (this.cache[parser.id].use === true || this.cache[parser.id].parent);\n    }\n\n    getCache(parser) {\n        const cache = this.cache[parser.id];\n        cache.use = true;\n        return cache.vnode;\n    }\n\n    initOrgChildren() {\n        const parsers = this.$handle.parsers;\n        this.orgChildren = Object.keys(parsers).reduce((initial, id) => {\n            const children = parsers[id].rule.children;\n            initial[id] = isValidChildren(children) ? [...children] : [];\n\n            return initial;\n        }, {});\n    }\n\n    run() {\n        if (!this.vm.isShow)\n            return;\n\n        this.$form.beforeRender();\n\n        const vn = this.$handle.sortList.map((id) => {\n            let parser = this.$handle.parsers[id];\n            if (parser.type === 'hidden') return;\n            return this.renderParser(parser);\n        }).filter((val) => val !== undefined);\n\n        return this.$form.render(vn);\n    }\n\n    setGlobalConfig(parser) {\n        if (!this.options.global) return;\n        const global = this.options.global;\n\n        if (global['*']) {\n            this.toData(parser, global['*']);\n        }\n        if (global[parser.type]) {\n            this.toData(parser, global[parser.type]);\n        } else if (global[parser.originType]) {\n            this.toData(parser, global[parser.originType]);\n        }\n    }\n\n    renderTemplate(parser) {\n        const {id, rule, key} = parser;\n        if (isUndef(Vue.compile)) {\n            console.error('使用的 Vue 版本不支持 compile' + errMsg());\n            return [];\n        }\n\n        if (!this.renderList[id]) {\n            let vm = rule.vm;\n            if (isUndef(rule.vm))\n                vm = new Vue;\n            else if (isFunction(rule.vm))\n                vm = rule.vm(this.$handle.getInjectData(rule));\n\n            this.renderList[id] = {\n                vm,\n                template: Vue.compile(rule.template)\n            };\n\n        }\n\n        const {vm, template} = this.renderList[id];\n\n        setTemplateProps(vm, parser, this.$handle.fCreateApi);\n\n        vm.$off('input');\n        vm.$on('input', (value) => {\n            this.onInput(parser, value);\n        });\n\n        const vn = template.render.call(vm);\n\n        if (isUndef(vn.data)) vn.data = {};\n        vn.key = key;\n        return vn;\n    }\n\n    renderParser(parser, parent) {\n        if (!this.cache[parser.id] || parser.type === 'template') {\n\n            parser.vData.get();\n            this.setGlobalConfig(parser);\n\n            let {type, rule} = parser, form = this.$form, vn;\n\n            if (type === 'template' && rule.template) {\n                vn = this.renderTemplate(parser);\n\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            } else if (!this.$handle.isNoVal(parser)) {\n                const children = this.renderChildren(parser);\n                vn = parser.render ? parser.render(children) : this.defaultRender(parser, children);\n            } else {\n                vn = this.defaultRender(parser, this.renderChildren(parser));\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            }\n            if (rule.native !== true)\n                vn = form.container(vn, parser);\n            this.setCache(parser, vn, parent);\n            return vn;\n        }\n\n        return this.getCache(parser);\n    }\n\n    toData(parser, data) {\n        vdataField.forEach((key) => {\n            if (data[key] !== undefined)\n                parser.vData[key](data[key]);\n        });\n\n        return parser.vData;\n    }\n\n    parserToData(parser) {\n        return this.toData(parser, parser.rule);\n    }\n\n    inputVData(parser, custom) {\n        const {refName, key} = parser;\n\n        this.parserToData(parser);\n\n        let data = parser.vData\n            .ref(refName).key('fc_item' + key).props('formCreate', this.$handle.fCreateApi)\n            .on('fc.subForm', (subForm) => this.$handle.addSubForm(parser, subForm));\n\n        if (!custom)\n            data.on(this.$handle.modelEvent(parser), (value) => {\n                this.onInput(parser, value);\n            }).props('value', this.$handle.getFormData(parser));\n\n        this.$form.inputVData && this.$form.inputVData(parser, custom);\n\n        return data;\n    }\n\n    onInput(parser, value) {\n        this.$handle.onInput(parser, value);\n    }\n\n    renderChildren(parser) {\n        const {children} = parser.rule, orgChildren = this.orgChildren[parser.id];\n\n        if (!isValidChildren(children)) {\n            orgChildren.forEach(child => {\n                if (!isString(child) && child.__fc__) {\n                    this.$handle.removeField(child.__fc__);\n                }\n            });\n            this.orgChildren[parser.id] = [];\n            return [];\n        }\n\n        this.orgChildren[parser.id].forEach(child => {\n            if (children.indexOf(child) === -1 && !isString(child) && child.__fc__) {\n                this.$handle.removeField(child.__fc__);\n            }\n        });\n\n        return children.map(child => {\n            if (isString(child)) return child;\n            if (child.__fc__) {\n                return this.renderParser(child.__fc__, parser);\n            }\n            if (child.type)\n                $de(() => this.$handle.reloadRule());\n        });\n\n    }\n\n    defaultRender(parser, children) {\n        const vdata = this.inputVData(parser);\n        if (this.vNode[parser.type])\n            return this.vNode[parser.type](vdata, children);\n        if (this.vNode[parser.originType])\n            return this.vNode[parser.originType](vdata, children);\n        return this.vNode.make(parser.originType, vdata, children);\n    }\n}\n\nfunction setTemplateProps(vm, parser, fApi) {\n    if (!vm.$props)\n        return;\n    const {rule} = parser;\n    const keys = Object.keys(vm.$props);\n    keys.forEach(key => {\n        if (rule.props[key] !== undefined)\n            vm.$props[key] = rule.props[key];\n    });\n\n    if (keys.indexOf('value') !== -1) {\n        vm.$props.value = parser.rule.value;\n    }\n    vm.$props.formCreate = fApi;\n}\n","import {$set, deepExtend, errMsg, isFunction, isPlainObject} from '@form-create/utils';\nimport {toJson} from './util';\n\n\nexport default function Api(h) {\n\n    function tidyFields(fields, all = false) {\n        if (!fields)\n            fields = all ? Object.keys(h.fieldList) : h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    return {\n        formData() {\n            const parsers = h.fieldList;\n\n            return Object.keys(parsers).reduce((initial, id) => {\n                const parser = parsers[id];\n                initial[parser.field] = deepExtend({}, {value: parser.rule.value}).value;\n                return initial;\n            }, {});\n        },\n        getValue(field) {\n            const parser = h.fieldList[field];\n            if (!parser) return;\n            return deepExtend({}, {value: parser.rule.value}).value;\n        },\n        setValue(field, value) {\n            let formData = field;\n            if (!isPlainObject(field))\n                formData = {[field]: value};\n            Object.keys(formData).forEach(key => {\n                const parser = h.fieldList[key];\n                if (!parser) return;\n                parser.rule.value = formData[key];\n            });\n        },\n        changeValue(field, value) {\n            this.setValue(field, value);\n        },\n        changeField(field, value) {\n            this.setValue(field, value);\n        },\n        removeField(field) {\n            let parser = h.getParser(field);\n            if (!parser)\n                return;\n            let fields = parser.root.map(rule => rule.__field__), index = fields.indexOf(field);\n            if (index === -1)\n                return;\n            parser.root.splice(index, 1);\n            if (h.sortList.indexOf(parser.id) === -1)\n                this.reload();\n\n            return parser.rule.__origin__;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = h.sortList.length, rules = h.rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                    index = parser.rule.children.length;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                }\n            }\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = 0, rules = h.rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                }\n            }\n            rules.splice(index, 0, rule);\n        },\n        hidden(hidden, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'hidden', !!hidden);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.hidden;\n        },\n        visibility(visibility, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'visibility', !!visibility);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        visibilityStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.visibility;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.vm.$set(parser.rule.props, 'disabled', !!disabled);\n            });\n        },\n        model() {\n            return Object.keys(h.trueData).reduce((initial, key) => {\n                initial[key] = h.trueData[key].rule;\n                return initial;\n            }, {});\n        },\n        component() {\n            return Object.keys(h.customData).reduce((initial, key) => {\n                initial[key] = h.customData[key].rule;\n                return initial;\n            }, {});\n        },\n        bind() {\n            let bind = {}, properties = {};\n            Object.keys(h.fieldList).forEach((field) => {\n                const parser = h.fieldList[field];\n                properties[field] = {\n                    get() {\n                        return parser.rule.value;\n                    },\n                    set(value) {\n                        parser.rule.value = value;\n                    },\n                    enumerable: true,\n                    configurable: true\n                };\n            });\n            Object.defineProperties(bind, properties);\n            return bind;\n        },\n        submitBtnProps: (props = {}) => {\n            h.vm._buttonProps(props);\n        },\n        resetBtnProps: (props = {}) => {\n            h.vm._resetProps(props);\n        },\n        set: (node, field, value) => {\n            h.vm.$set(node, field, value);\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            deepExtend(h.options, options);\n            this.refresh(true);\n        },\n        onSubmit(fn) {\n            this.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            const parser = h.getParser(field);\n            if (parser) {\n                h.$render.clearCache(parser, true);\n                h.refresh();\n            }\n        },\n        refresh: (clear) => {\n            if (clear)\n                h.$render.clearCacheAll();\n            h.refresh();\n        },\n        hideForm: (isShow) => {\n            h.vm.isShow = !isShow;\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule: (id, rule, cover) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                cover ? Object.keys(rule).forEach(key => {\n                    parser.rule[key] = rule[key];\n                }) : deepExtend(parser.rule, rule);\n                return parser.rule.__origin__;\n            }\n        },\n        getRule: (id) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                return parser.rule;\n            }\n        },\n        updateRules(rules, cover) {\n            Object.keys(rules).forEach(id => {\n                this.updateRule(id, rules[id], cover);\n            })\n        },\n        updateValidate(id, validate, merge) {\n            const parser = h.getParser(id);\n            if (parser) {\n                parser.rule.validate = merge ? parser.rule.validate.concat(validate) : validate;\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                this.updateValidate(id, validates[id], merge);\n            })\n        },\n        method(id, name) {\n            const el = this.el(id);\n            if (!el || !el[name])\n                throw new Error('方法不存在' + errMsg());\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        toJson() {\n            return toJson(this.rule);\n        },\n        on(...args) {\n            h.vm.$on(...args);\n        },\n        once(...args) {\n            h.vm.$once(...args);\n        },\n        off(...args) {\n            h.vm.$off(...args);\n        },\n        trigger(id, event, ...args) {\n            const el = this.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const parser = h.getParser(id);\n            if (parser) return parser.el;\n        },\n        validate(callback) {\n            let state = false;\n            let subForm = {\n                ...{\n                    ___this: {\n                        validate(call) {\n                            h.$form.validate((valid) => {\n                                call && call(valid);\n                            });\n                        }\n                    }\n                }, ...h.subForm\n            };\n            let keys = Object.keys(subForm), len = keys.length, subLen;\n\n            const validFn = (valid, field) => {\n                if (valid) {\n                    if (subLen > 1) subLen--;\n                    else if (len > 1) len--;\n                    else callback(true);\n                } else {\n                    if (!state) {\n                        callback(false);\n                        state = true;\n                    }\n                    field && this.clearValidateState(field, false);\n                }\n            };\n\n            keys.forEach(field => {\n                let sub = subForm[field];\n                if (Array.isArray(sub)) {\n                    subLen = sub.length;\n                    sub.forEach(form => {\n                        form.validate((v) => validFn(v, field))\n                    })\n                } else if (sub) {\n                    subLen = 1;\n                    sub.validate(validFn)\n                }\n\n            });\n\n        },\n        validateField: (field, callback) => {\n            if (!h.fieldList[field])\n                return;\n            h.$form.validateField(field, callback);\n        },\n        resetFields(fields) {\n            let parsers = h.fieldList;\n            tidyFields(fields, true).forEach(field => {\n                let parser = parsers[field];\n                if (!parser) return;\n\n                if (parser.type === 'hidden') return;\n                h.$form.resetField(parser);\n                h.refreshControl(parser);\n                h.$render.clearCache(parser, true);\n            });\n        },\n        submit(successFn, failFn) {\n            this.validate((valid) => {\n                if (valid) {\n                    let formData = this.formData();\n                    if (isFunction(successFn))\n                        successFn(formData, this);\n                    else {\n                        h.options.onSubmit && h.options.onSubmit(formData, this);\n                        h.fc.$emit('on-submit', formData, this);\n                    }\n                } else {\n                    failFn && failFn(this)\n                }\n            });\n        },\n        clearValidateState(fields, clearSub = true) {\n            tidyFields(fields).forEach(field => {\n                if (clearSub) this.clearSubValidateState(field);\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.$form.clearValidateState(parser);\n            });\n        },\n        clearSubValidateState(fields) {\n            tidyFields(fields).forEach(field => {\n                const subForm = h.subForm[field];\n                if (subForm) {\n                    if (Array.isArray(subForm)) {\n                        subForm.forEach(form => {\n                            form.clearValidateState();\n                        })\n                    } else if (subForm) {\n                        subForm.clearValidateState();\n                    }\n                }\n            })\n        },\n        getSubForm(field) {\n            return h.subForm[field];\n        },\n        btn: {\n            loading: (loading = true) => {\n                h.vm._buttonProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._buttonProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._buttonProps({show: !!isShow});\n            }\n        },\n        resetBtn: {\n            loading: (loading = true) => {\n                h.vm._resetProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._resetProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._resetProps({show: !!isShow});\n            }\n        },\n        closeModal: (field) => {\n            const parser = h.fieldList[field];\n            parser && parser.closeModel && parser.closeModel();\n        }\n    };\n}\n","import {\n    $del,\n    $set, deepExtend,\n    errMsg,\n    extend,\n    isString,\n    isUndef,\n    isValidChildren,\n    isPlainObject,\n    toLine,\n    toString,\n    uniqueId,\n    isFunction\n} from '@form-create/utils';\nimport BaseParser from '../factory/parser';\nimport Render from './render';\nimport Api from './api';\nimport {copyRule, enumerable} from './util';\n\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport default class Handle {\n\n    constructor(fc) {\n        const {vm, rules, options} = fc;\n\n        this.watching = false;\n        this.vm = vm;\n        this.fc = fc;\n        this.options = options;\n\n        this.validate = {};\n        this.formData = {};\n        this.subForm = {};\n\n        this.fCreateApi = undefined;\n\n        this.__init(rules);\n        this.$form = new fc.drive.formRender(this);\n        this.$render = new Render(this);\n\n        this.loadRule(this.rules, false);\n\n        this.$render.initOrgChildren();\n\n        this.$form.init();\n    }\n\n    __init(rules) {\n        this.fieldList = {};\n        this.trueData = {};\n        this.parsers = {};\n        this.customData = {};\n        this.sortList = [];\n        this.rules = rules;\n        this.origin = [...this.rules];\n        this.changeStatus = false;\n    }\n\n    modelEvent(parser) {\n        const modelList = this.fc.modelEvents;\n        return modelList[parser.type] || modelList[parser.originType] || parser.rule.model || parser.modelEvent;\n    }\n\n    loadRule(rules, child) {\n        rules.map((_rule, index) => {\n            if (child && isString(_rule)) return;\n\n            if (!_rule.type)\n                return console.error('未定义生成规则的 type 字段' + errMsg());\n\n            let parser;\n\n            if (_rule.__fc__) {\n                parser = _rule.__fc__;\n\n                //规则在其他 form-create 中使用,自动浅拷贝\n                if (parser.vm !== this.vm && !parser.deleted) {\n                    _rule = copyRule(_rule);\n                    rules[index] = _rule;\n                    parser = this.createParser(this.parseRule(_rule));\n                } else {\n                    parser.update(this);\n                    let rule = parser.rule;\n                    this.parseOn(rule);\n                    this.parseProps(rule);\n                }\n            } else {\n                parser = this.createParser(this.parseRule(_rule));\n            }\n\n            let children = parser.rule.children, rule = parser.rule;\n            if (!this.notField(parser.field))\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            this.setParser(parser);\n\n            if (!_rule.__fc__) {\n                bindParser(_rule, parser);\n            }\n            if (isValidChildren(children)) {\n                this.loadRule(children, true);\n            }\n\n            if (!child) {\n                this.sortList.push(parser.id);\n            }\n\n            if (!this.isNoVal(parser))\n                Object.defineProperty(parser.rule, 'value', {\n                    get: () => {\n                        return parser.toValue(this.getFormData(parser));\n                    },\n                    set: (value) => {\n                        if (this.isChange(parser, value)) {\n                            this.$render.clearCache(parser, true);\n                            this.setFormData(parser, parser.toFormValue(value));\n                            this.valueChange(parser);\n                            this.refresh();\n                        }\n                    }\n                });\n\n            return parser;\n        }).filter(h => h).forEach(h => {\n            h.root = rules;\n        });\n    }\n\n    createParser(rule) {\n        const id = '' + uniqueId(), parsers = this.fc.parsers, type = toString(rule.type).toLocaleLowerCase();\n\n        const Parser = (parsers[type]) ? parsers[type] : BaseParser;\n\n        return new Parser(this, rule, id);\n    }\n\n    parseRule(_rule) {\n        const def = defRule(), rule = getRule(_rule);\n\n        Object.defineProperties(rule, {\n            __origin__: enumerable(_rule)\n        });\n\n        Object.keys(def).forEach(k => {\n            if (isUndef(rule[k])) $set(rule, k, def[k]);\n        });\n\n        if (rule.field && this.options.formData[rule.field] !== undefined)\n            rule.value = this.options.formData[rule.field];\n\n        rule.options = parseArray(rule.options);\n        this.parseOn(rule);\n        this.parseProps(rule);\n\n        return rule;\n    }\n\n    parseOn(rule) {\n        this.parseInjectEvent(rule, rule.on || {});\n        if (!this.watching) {\n            this.margeEmit(rule);\n        }\n    }\n\n    margeEmit(rule) {\n        const emitEvent = this.parseEmit(rule);\n        if (Object.keys(emitEvent).length > 0) extend(rule.on, emitEvent);\n    }\n\n    parseProps(rule) {\n        this.parseInjectEvent(rule, rule.props || {});\n    }\n\n    parseInjectEvent(rule, on) {\n        if (this.options.injectEvent || rule.inject)\n            Object.keys(on).forEach(k => {\n                if (isFunction(on[k]))\n                    on[k] = this.inject(rule, on[k])\n            });\n        return on;\n    }\n\n    getInjectData(self, inject) {\n        const {option, rule} = this.vm.$options.propsData;\n        return {\n            $f: this.fCreateApi,\n            rule,\n            self: self.__origin__,\n            option,\n            inject: inject || rule.inject || {}\n        };\n    }\n\n    inject(self, _fn, inject) {\n        if (_fn.__inject) {\n            if (this.watching)\n                return _fn;\n            _fn = _fn.__origin;\n        }\n\n        const h = this;\n\n        const fn = function (...args) {\n            args.unshift(h.getInjectData(self, inject));\n            return _fn(...args);\n        };\n        fn.__inject = true;\n        fn.__origin = _fn;\n        return fn;\n    }\n\n    parseEmit(rule) {\n        let event = {}, {emit, emitPrefix, field, name} = rule;\n\n        if (!Array.isArray(emit)) return event;\n        const emitKey = emitPrefix ? emitPrefix : (field || name);\n        if (!emitKey) return event;\n\n        emit.forEach(config => {\n            let inject, eventName = config;\n            if (isPlainObject(config)) {\n                eventName = config.name;\n                inject = config.inject;\n            }\n            if (!eventName) return;\n\n            const fieldKey = toLine(`${emitKey}-${eventName}`).replace('_', '-');\n\n            const fn = (...arg) => {\n                this.vm.$emit(fieldKey, ...arg);\n            };\n            fn.__emit = true;\n            event[eventName] = (this.options.injectEvent || config.inject !== undefined) ? this.inject(rule, fn, inject) : fn;\n        });\n\n        return event;\n    }\n\n    run() {\n        if (this.vm.unique > 0)\n            return this.$render.run();\n        else {\n            this.vm.unique = 1;\n            return [];\n        }\n    }\n\n    setParser(parser) {\n        let {id, field, name, rule} = parser;\n        if (this.parsers[id])\n            return;\n        this.parsers[id] = parser;\n\n        if (name)\n            $set(this.customData, name, parser);\n\n        if (this.isNoVal(parser)) return;\n        this.fieldList[field] = parser;\n        $set(this.formData, field, parser.toFormValue(rule.value));\n        $set(this.validate, field, rule.validate || []);\n        $set(this.trueData, field, parser);\n    }\n\n    addSubForm(parser, subForm) {\n        this.subForm[parser.field] = subForm;\n    }\n\n    notField(field) {\n        return this.fieldList[field] === undefined;\n    }\n\n    isChange(parser, value) {\n        return JSON.stringify(parser.rule.value) !== JSON.stringify(value);\n    }\n\n    valueChange(parser) {\n        this.validateControl(parser);\n    }\n\n    onInput(parser, value) {\n        let val;\n        if (!this.isNoVal(parser) && this.isChange(parser, val = parser.toValue(value))) {\n            this.$render.clearCache(parser);\n            this.setFormData(parser, value);\n            this.changeStatus = true;\n            this.valueChange(parser);\n            this.vm.$emit('change', parser.field, val);\n        }\n    }\n\n    getParser(id) {\n        if (this.fieldList[id])\n            return this.fieldList[id];\n        else if (this.customData[id])\n            return this.customData[id];\n        else if (this.parsers[id])\n            return this.parsers[id];\n    }\n\n    created() {\n        const vm = this.vm;\n\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'formData', this.formData);\n\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = Api(this);\n        this.fCreateApi.rule = this.rules;\n        this.fCreateApi.config = this.options;\n    }\n\n\n    addParserWitch(parser) {\n        const vm = this.vm;\n\n        Object.keys(parser.rule).forEach((key) => {\n            if (['field', 'type', 'value', 'vm', 'template', 'name', 'config', 'control'].indexOf(key) !== -1 || parser.rule[key] === undefined) return;\n            try {\n                parser.watch.push(vm.$watch(() => parser.rule[key], (n, o) => {\n                    if (o === undefined) return;\n                    this.watching = true;\n                    if (key === 'validate')\n                        this.validate[parser.field] = n;\n                    else if (key === 'props')\n                        this.parseProps(parser.rule);\n                    else if (key === 'on')\n                        this.parseOn(parser.rule);\n                    else if (key === 'emit')\n                        this.margeEmit(parser.rule);\n\n                    this.$render.clearCache(parser);\n                    this.watching = false;\n                }, {deep: key !== 'children', immediate: true}));\n            } catch (e) {\n                //\n            }\n        });\n    }\n\n    refreshControl(parser) {\n        if (!this.isNoVal(parser) && parser.rule.control) {\n            this.validateControl(parser);\n        }\n    }\n\n\n    validateControl(parser) {\n        const controls = getControl(parser), len = controls.length, ctrlRule = parser.ctrlRule;\n        if (!len) return;\n        for (let i = 0; i < len; i++) {\n            const control = controls[i], validate = control.handle || (val => val === control.value);\n            if (validate(parser.rule.value)) {\n                if (ctrlRule) {\n                    if (ctrlRule.children === control.rule)\n                        return;\n                    else\n                        removeControl(parser);\n                }\n                const rule = {\n                    type: 'fcFragment',\n                    native: true,\n                    children: control.rule\n                };\n                parser.root.splice(parser.root.indexOf(parser.rule.__origin__) + 1, 0, rule);\n                parser.ctrlRule = rule;\n                this.refresh();\n                return;\n            }\n        }\n        if (ctrlRule) {\n            removeControl(parser);\n            this.refresh();\n        }\n    }\n\n    mountedParser() {\n        const vm = this.vm;\n        Object.keys(this.parsers).forEach((id) => {\n            let parser = this.parsers[id];\n            if (parser.watch.length === 0) this.addParserWitch(parser);\n            this.refreshControl(parser);\n            parser.el = vm.$refs[parser.refName] || {};\n\n            if (parser.defaultValue === undefined)\n                parser.defaultValue = deepExtend({}, {value: parser.rule.value}).value;\n\n            parser.mounted && parser.mounted();\n        });\n    }\n\n    mounted() {\n        const mounted = this.options.mounted;\n\n        this.mountedParser();\n\n        mounted && mounted(this.fCreateApi);\n        this.fc.$emit('mounted', this.fCreateApi);\n    }\n\n    reload() {\n        const onReload = this.options.onReload;\n\n        this.mountedParser();\n\n        onReload && onReload(this.fCreateApi);\n        this.fc.$emit('on-reload', this.fCreateApi);\n    }\n\n    removeField(parser, value) {\n        const {id, field} = parser, index = this.sortList.indexOf(id);\n\n        delParser(parser, value);\n        $del(this.parsers, id);\n\n        if (index !== -1) {\n            this.sortList.splice(index, 1);\n        }\n\n        if (!this.fieldList[field]) {\n            $del(this.validate, field);\n            $del(this.formData, field);\n            $del(this.customData, field);\n            $del(this.fieldList, field);\n            $del(this.trueData, field);\n        }\n\n        if (this.subForm[parser.field])\n            $del(this.subForm, field);\n\n        return parser;\n    }\n\n    refresh() {\n        this.vm._refresh();\n    }\n\n    reloadRule(rules) {\n        const vm = this.vm;\n        if (!rules) return this.reloadRule(this.rules);\n        if (!this.origin.length) this.fCreateApi.refresh();\n        this.origin = [...rules];\n\n        const parsers = {...this.parsers};\n        const formData = this.fCreateApi.formData();\n        this.__init(rules);\n        this.loadRule(rules, false);\n        Object.keys(parsers).filter(id => this.parsers[id] === undefined)\n            .forEach(id => this.removeField(parsers[id], formData[parsers[id].field]));\n        this.$render.initOrgChildren();\n        this.formData = {...this.formData};\n        this.created();\n\n        vm.$f = this.fCreateApi;\n        this.$render.clearCacheAll();\n        this.refresh();\n\n        vm.$nextTick(() => {\n            this.reload();\n        });\n\n    }\n\n    setFormData(parser, value) {\n        $set(this.formData, parser.field, value);\n    }\n\n    getFormData(parser) {\n        return this.formData[parser.field];\n    }\n\n    fields() {\n        return Object.keys(this.formData);\n    }\n\n    isNoVal(parser) {\n        return !parser.isDef;\n    }\n\n}\n\nexport function delParser(parser, value) {\n    if (parser.ctrlRule)\n        removeControl(parser);\n    parser.watch.forEach((unWatch) => unWatch());\n    parser.watch = [];\n    parser.deleted = true;\n    parser.root = [];\n    Object.defineProperty(parser.rule, 'value', {\n        value\n    });\n}\n\nfunction parseArray(validate) {\n    return Array.isArray(validate) ? validate : [];\n}\n\nfunction getControl(parser) {\n    const control = parser.rule.control || [];\n    if (isPlainObject(control)) return [control];\n    else return control;\n}\n\nfunction removeControl(parser) {\n    const index = parser.root.indexOf(parser.ctrlRule);\n    if (index !== -1)\n        parser.root.splice(index, 1);\n    parser.ctrlRule = null;\n}\n\n\nfunction defRule() {\n    return {\n        validate: [],\n        col: {},\n        emit: [],\n        props: {},\n        on: {},\n        options: [],\n        title: undefined,\n        value: null,\n        field: '',\n        name: undefined,\n        className: undefined\n    };\n}\n\nfunction bindParser(rule, parser) {\n    Object.defineProperties(rule, {\n        __field__: enumerable(parser.field),\n        __fc__: enumerable(parser)\n    });\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        children: Array\n    },\n    render(h, ctx) {\n        return ctx.children\n    }\n}\n","import {\n    $set,\n    deepExtend,\n    extend,\n    isBool,\n    isElement,\n    toString,\n    isPlainObject\n} from '@form-create/utils';\nimport $FormCreate from '../components/formCreate';\nimport {formCreateName} from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from './handle';\nimport {creatorFactory} from '../factory/creator';\nimport BaseParser from '../factory/parser';\nimport {parseJson, copyRule, copyRules} from './util';\nimport fragment from '../components/fragment';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nexport default function createFormCreate(drive) {\n\n    const components = {}, parsers = {}, maker = makerFactory(), globalConfig = drive.getConfig(), data = {},\n        modelEvents = {};\n\n    function setParser(id, parser) {\n        id = toString(id);\n        parsers[id.toLocaleLowerCase()] = parser;\n        FormCreate.maker[id] = creatorFactory(id);\n    }\n\n    function setModel(id, model) {\n        modelEvents[id.toLocaleLowerCase()] = model;\n    }\n\n    function createParser() {\n        return class Parser extends BaseParser {\n        }\n    }\n\n    function component(id, component) {\n        id = toString(id);\n        const _id = id.toLocaleLowerCase();\n        if (_id === 'form-create' || _id === 'formcreate')\n            return get$FormCreate();\n        if (component === undefined)\n            return components[id];\n        else\n            components[id] = component;\n    }\n\n    function margeGlobal(config, _options) {\n        if (isBool(_options.submitBtn))\n            _options.submitBtn = {show: _options.submitBtn};\n\n        if (isBool(_options.resetBtn))\n            _options.resetBtn = {show: _options.resetBtn};\n\n        let options = deepExtend(config, _options);\n\n        $set(options, 'el', !options.el\n            ? window.document.body\n            : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n            ));\n\n        return options;\n    }\n\n    function get$FormCreate() {\n        return _vue.extend($FormCreate(FormCreate, components));\n    }\n\n\n    function bindAttr(formCreate) {\n        extend(formCreate, {\n            version: drive.version,\n            ui: drive.ui,\n            maker,\n            component,\n            setParser,\n            createParser,\n            data,\n            copyRule,\n            copyRules,\n            $form() {\n                return get$FormCreate();\n            },\n            parseJson(json) {\n                return parseJson(json);\n            }\n        });\n    }\n\n    function install(Vue, options) {\n        if (Vue._installedFormCreate === true) return;\n        Vue._installedFormCreate = true;\n\n        if (options && isPlainObject(options))\n            margeGlobal(globalConfig, options);\n\n        Vue.use(FormCreate);\n    }\n\n    function create(rules, option) {\n        const $vm = new _vue({\n            data() {\n                return {rule: rules, option: isElement(option) ? {el: option} : option};\n            },\n            render() {\n                return <form-create ref='fc' props={this.$data}/>\n            }\n        });\n        $vm.$mount();\n        return $vm;\n    }\n\n    class FormCreate {\n        constructor(rules, options = {}) {\n            this.fCreateApi = undefined;\n            this.drive = drive;\n            this.parsers = parsers;\n            this.modelEvents = modelEvents;\n            this.vm = undefined;\n            this.rules = Array.isArray(rules) ? rules : [];\n            this.options = margeGlobal(deepExtend({formData: {}}, globalConfig), options);\n        }\n\n        beforeCreate(vm) {\n            this.vm = vm;\n            this.handle = new Handle(this);\n        }\n\n        created() {\n            this.handle.created();\n        }\n\n        api() {\n            return this.handle.fCreateApi;\n        }\n\n        render() {\n            return this.handle.run();\n        }\n\n        mounted() {\n            this.handle.mounted();\n        }\n\n        $emit(eventName, ...params) {\n            if (this.$parent)\n                this.$parent.$emit(`fc:${eventName}`, ...params);\n\n            this.vm.$emit(eventName, ...params);\n        }\n\n        static create(rules, _opt = {}, parent) {\n\n            let $vm = create(rules, _opt);\n\n            const _this = $vm.$refs.fc.formCreate;\n            _this.parent = parent;\n            _this.options.el.appendChild($vm.$el);\n\n            return _this.handle.fCreateApi;\n        }\n\n        static install(Vue) {\n            const $formCreate = function (rules, opt = {}) {\n                return FormCreate.create(rules, opt, this);\n            };\n\n            bindAttr($formCreate);\n\n            Vue.prototype.$formCreate = $formCreate;\n\n            Vue.component(formCreateName, get$FormCreate());\n            Vue.component(fragment.name, _vue.extend(fragment));\n            _vue = Vue;\n        }\n\n        static init(rules, _opt = {}) {\n            let $vm = create(rules, _opt), formCreate = $vm.$refs.fc.formCreate;\n\n            return {\n                mount($el) {\n                    if ($el && isElement($el))\n                        formCreate.options.el = $el;\n                    formCreate.options.el.appendChild($vm.$el);\n                    return formCreate.handle.fCreateApi;\n                },\n                remove() {\n                    formCreate.options.el.removeChild($vm.$el);\n                },\n                destroy() {\n                    this.remove();\n                    $vm.$destroy();\n                },\n                $f: formCreate.handle.fCreateApi\n            };\n        }\n    }\n\n    bindAttr(FormCreate);\n\n\n    drive.components.forEach(component => {\n        FormCreate.component(component.name, component);\n    });\n\n    drive.parsers.forEach(({name, parser}) => {\n        FormCreate.setParser(name, parser);\n    });\n\n    Object.keys(drive.makers).forEach(name => {\n        FormCreate.maker[name] = drive.makers[name];\n    });\n\n    if (drive.modelEvents) {\n        Object.keys(drive.modelEvents).forEach((name) => setModel(name, drive.modelEvents[name]));\n    }\n\n    return {\n        FormCreate,\n        install\n    };\n}\n","import VData from './vData';\nimport VNode from './vNode';\nimport {deepExtendArgs, uniqueId} from '@form-create/utils';\n\n\nexport default class BaseForm {\n\n    constructor(handle) {\n        this.$handle = handle;\n        this.vm = handle.vm;\n        this.drive = this.$handle.fc.drive;\n        this.options = handle.options;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.unique = uniqueId();\n        this.refName = `cForm${this.unique}`;\n    }\n\n    getFormRef() {\n        return this.vm.$refs[this.refName];\n    }\n\n    init() {\n        this.$render = this.$handle.$render;\n    }\n\n    getGetCol(parser) {\n        let col = parser.rule.col || {}, mCol = {}, pCol = {}, global = this.options.global;\n\n        if (!global)\n            return col;\n\n        if (global['*']) {\n            mCol = global['*'].col || {};\n        }\n\n        if (global[parser.type]) {\n            pCol = global[parser.type].col || {};\n        } else if (global[parser.originType]) {\n            pCol = global[parser.originType].col || {};\n        }\n        col = deepExtendArgs({}, mCol, pCol, col);\n        return col;\n    }\n\n    beforeRender() {\n\n    }\n\n    render() {\n\n    }\n\n    inputVData() {\n    }\n}\n","import {VNode, Vue} from '@form-create/core';\nimport {isUndef} from '@form-create/utils';\n\nconst vNode = new VNode({});\nconst Modal = (options, cb) => {\n    if (isUndef(options.width)) options.width = '30%';\n    return {\n        name: 'fc-modal',\n        data() {\n            return {\n                visible: true,\n                ...options\n            }\n        },\n        render() {\n            vNode.setVm(this);\n            return vNode.modal({\n                props: this.$data,\n                on: {\n                    close: this.onClose,\n                    closed: this.onClosed,\n                }\n            }, [cb(vNode, this)])\n        },\n        methods: {\n            onClose() {\n                this.visible = false;\n            },\n            onClosed() {\n                this.$el.parentNode.removeChild(this.$el);\n            }\n        }\n    }\n};\n\nexport function mount(options, content) {\n    let $modal = Vue.extend(Modal(options, content)), $vm = new $modal().$mount();\n    window.document.body.appendChild($vm.$el);\n}\n\nexport function defaultOnHandle(src, title) {\n    mount({title}, (vNode) => {\n        return vNode.make('img', {\n            style: {width: '100%'},\n            attrs: {src}\n        })\n    });\n}\n\nexport default Modal;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import {defaultOnHandle, mount} from '../../core/modal';\nimport style from '../../style/index.css';\nimport {isUndef, toArray, uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-frame';\n\nexport default {\n    name: NAME,\n    props: {\n        type: {\n            type: String,\n            default: 'input'\n        },\n        field: {\n            type: String,\n            default: ''\n        },\n        helper: {\n            type: Boolean,\n            default: true\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        src: {\n            type: String,\n            required: true\n        },\n        icon: {\n            type: String,\n            default: 'el-icon-upload2'\n        },\n        width: {\n            type: String,\n            default: '500px'\n        },\n        height: {\n            type: String,\n            default: '370px'\n        },\n        maxLength: {\n            type: Number,\n            default: 0\n        },\n        okBtnText: {\n            type: String,\n            default: '确定'\n        },\n        closeBtnText: {\n            type: String,\n            default: '关闭'\n        },\n        modalTitle: {\n            type: String,\n            default: '预览'\n        },\n        handleIcon: {\n            type: [String, Boolean],\n            default: undefined\n        },\n        title: String,\n        allowRemove: {\n            type: Boolean,\n            default: true\n        },\n        onOpen: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onOk: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onCancel: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onLoad: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onBeforeRemove: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onRemove: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onHandle: {\n            type: Function,\n            default(src) {\n                defaultOnHandle(src, this.modalTitle)\n            }\n        },\n        modal: {\n            type: Object,\n            default: () => ({})\n        },\n        srcKey: {\n            type: [String, Number]\n        },\n        value: [Array, String, Number]\n\n    },\n    data() {\n        return {\n            modalVm: null,\n            fileList: toArray(this.value),\n            unique: uniqueId()\n        }\n    },\n    watch: {\n        value(n) {\n            this.fileList = toArray(n);\n        },\n        fileList(n) {\n            const val = this.maxLength === 1 ? (n[0] || '') : n;\n            this.$emit('input', val);\n            this.$emit('change', val);\n        },\n        src(n) {\n            this.modalVm && (this.modalVm.src = n);\n        }\n    },\n    methods: {\n        key(unique) {\n            return NAME + unique + this.unique;\n        },\n        closeModel() {\n            this.modalVm && this.modalVm.onClose();\n            this.modalVm = null;\n        },\n\n        showModel() {\n            if (this.disabled || false === this.onOpen()) return;\n\n            const {width, height, src, title, okBtnText, closeBtnText} = this.$props;\n\n            mount({width, title, src, ...this.modal}, (vNode, _vm) => {\n                this.modalVm = _vm;\n                return [vNode.make('iframe', {\n                    attrs: {\n                        src: _vm.src\n                    },\n                    style: {\n                        'height': height,\n                        'border': '0 none',\n                        'width': '100%'\n                    },\n                    on: {\n                        'load': (e) => {\n                            this.onLoad(e);\n\n                            try {\n                                if (this.helper === true) {\n                                    let iframe = e.path[0].contentWindow;\n\n                                    iframe['form_create_helper'] = {\n                                        close: (field) => {\n                                            this.valid(field);\n                                            _vm.onClose();\n                                        },\n                                        set: (field, value) => {\n                                            this.valid(field);\n                                            if (!this.disabled)\n                                                this.$emit('input', value);\n\n                                        },\n                                        get: (field) => {\n                                            this.valid(field);\n                                            return this.value;\n                                        }\n                                    };\n\n                                }\n                            } catch (e) {\n                                console.log(e);\n                            }\n                        }\n                    },\n                }), vNode.make('div', {slot: 'footer'}, [\n                    vNode.button({\n                        on: {\n                            click: () => {\n\n                                this.onCancel() !== false && _vm.onClose();\n                            }\n                        }\n                    }, [closeBtnText]),\n                    vNode.button({\n                        props: {type: 'primary'}, on: {\n                            click: () => {\n                                this.onOk() !== false && _vm.onClose();\n                            }\n                        }\n                    }, [okBtnText])\n                ])]\n            });\n        },\n\n        makeInput() {\n            const props = {\n                type: 'text',\n                value: (this.fileList.map(v => this.getSrc(v))).toString(),\n                readonly: true\n            };\n\n            return <ElInput props={props} key={this.key('input')}>\n                {this.fileList.length ? <i slot=\"suffix\" class=\"el-input__icon el-icon-circle-close\"\n                    on-click={() => this.fileList = []}/> : null}\n                <ElButton icon={this.icon} on={{'click': () => this.showModel()}} slot=\"append\"/>\n            </ElInput>\n        },\n\n        makeGroup(children) {\n            if (!this.maxLength || this.fileList.length < this.maxLength)\n                children.push(this.makeBtn());\n            return <div class={style['fc-upload']} key={this.key('group')}>{...children}</div>\n        },\n\n        makeItem(index, children) {\n            return <div class={style['fc-files']} key={this.key('file' + index)}>{...children}</div>;\n        },\n        valid(field) {\n            if (field !== this.field)\n                throw new Error('frame 无效的字段值');\n        },\n\n        makeIcons(val, index) {\n            if (this.handleIcon !== false || this.allowRemove === true) {\n                const icons = [];\n                if ((this.type !== 'file' && this.handleIcon !== false) || (this.type === 'file' && this.handleIcon))\n                    icons.push(this.makeHandleIcon(val, index));\n                if (this.allowRemove)\n                    icons.push(this.makeRemoveIcon(val, index));\n\n                return <div class={style['fc-upload-cover']} key={this.key('uc')}>{icons}</div>\n            }\n        },\n        makeHandleIcon(val, index) {\n            return <i\n                class={(this.handleIcon === true || this.handleIcon === undefined) ? 'el-icon-view' : this.handleIcon}\n                on-click={() => this.handleClick(val)} key={this.key('hi' + index)}/>\n        },\n\n        makeRemoveIcon(val, index) {\n            return <i class=\"el-icon-delete\" on-click={() => this.handleRemove(val)} key={this.key('ri' + index)}/>\n        },\n\n        makeFiles() {\n            return this.makeGroup(this.fileList.map((src, index) => {\n                return this.makeItem(index, [<i class=\"el-icon-tickets\"\n                    on-click={() => this.handleClick(src)}/>, this.makeIcons(src, index)])\n            }))\n        },\n        makeImages() {\n            return this.makeGroup(this.fileList.map((src, index) => {\n                return this.makeItem(index, [<img src={this.getSrc(src)}/>, this.makeIcons(src, index)])\n            }))\n        },\n        makeBtn() {\n            return <div class={style['fc-upload-btn']} on-click={() => this.showModel()} key={this.key('btn')}>\n                <i class={this.icon}/>\n            </div>\n        },\n        handleClick(src) {\n            if (this.disabled) return;\n            return this.onHandle(src);\n        },\n        handleRemove(src) {\n            if (this.disabled) return;\n            if (false !== this.onBeforeRemove(src)) {\n                this.fileList.splice(this.fileList.indexOf(src), 1);\n                this.onRemove(src);\n            }\n        },\n        getSrc(src) {\n            return isUndef(this.srcKey) ? src : src[this.srcKey];\n        }\n    },\n    render() {\n        const type = this.type;\n\n        if (type === 'input')\n            return this.makeInput();\n        else if (type === 'image')\n            return this.makeImages();\n        else\n            return this.makeFiles();\n    }\n}\n","import {uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-radio';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        options: {\n            type: Array,\n            default: () => ([])\n        },\n        type: String,\n        unique: {\n            default: () => uniqueId()\n        },\n    },\n    render(h, ctx) {\n        return <ElRadioGroup {...ctx.data}>{ctx.props.options.map((opt, index) => {\n            const props = {...opt};\n            const Type = ctx.props.type === 'button' ? 'ElRadioButton' : 'ElRadio';\n            delete props.value;\n            return <Type {...{props}} key={NAME + Type + index + ctx.unique}/>;\n        }).concat(ctx.chlidren)}</ElRadioGroup>\n    }\n}\n","import {toDefSlot, uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-select';\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        options: {\n            type: Array,\n            default: () => ([])\n        },\n        unique: {\n            default: () => uniqueId()\n        },\n    },\n    render(h, ctx) {\n        return <ElSelect {...ctx.data}>{ctx.props.options.map((props, index) => {\n\n            const slot = props.slot ? toDefSlot(props.slot, h) : [];\n\n            return <ElOption {...{props}}\n                key={NAME + index + ctx.props.unique}>{slot}</ElOption>\n        }).concat(ctx.chlidren)}</ElSelect>;\n    }\n}","import {toArray} from '@form-create/utils';\n\n\nexport default {\n    name: 'fc-elm-tree',\n    props: {\n        ctx: {\n            type: Object,\n            default: () => ({props: {}})\n        },\n        children: {\n            type: Array,\n            default: () => ([])\n        },\n        type: {\n            type: String,\n            default: 'checked'\n        },\n        value: {\n            type: [Array, String, Number],\n            default: () => ([])\n        }\n    },\n    watch: {\n        value() {\n            this.setValue();\n        }\n    },\n    methods: {\n        makeTree() {\n            return <ElTree ref=\"tree\" on-check-change={() => this.updateValue()}\n                on-node-click={() => this.updateValue()} {...this.ctx}>{this.children}</ElTree>;\n        },\n        onChange() {\n            this.updateValue()\n        },\n\n        updateValue() {\n            const type = (this.type).toLocaleLowerCase();\n            let value;\n\n            if (type === 'selected')\n                value = this.$refs.tree.getCurrentKey();\n            else\n                value = this.$refs.tree.getCheckedKeys();\n\n            this.$emit('input', value);\n        },\n        setValue() {\n            const type = (this.type).toLocaleLowerCase();\n\n            if (type === 'selected')\n                this.$refs.tree.setCurrentKey(this.value);\n            else\n                this.$refs.tree.setCheckedKeys(toArray(this.value));\n        }\n    },\n    render() {\n        return this.makeTree();\n    },\n    mounted() {\n        this.setValue();\n        this.updateValue();\n    }\n}","import {hasSlot, toArray, toString, uniqueId} from '@form-create/utils';\nimport {defaultOnHandle} from '../../core/modal';\nimport style from '../../style/index.css';\n\nfunction parseFile(file) {\n    return {\n        url: file,\n        name: getFileName(file)\n    };\n}\n\nfunction getFileName(file) {\n    return toString(file).split('/').pop()\n}\n\nconst NAME = 'fc-elm-upload';\n\nexport default {\n    name: NAME,\n\n    props: {\n        ctx: {\n            type: Object,\n            default: () => ({props: {}})\n        },\n        children: {\n            type: Array,\n            default: () => ([])\n        },\n        onHandle: {\n            type: Function,\n            default(file) {\n                defaultOnHandle(file.url, this.modalTitle)\n            }\n        },\n        uploadType: {\n            type: String,\n            default: 'file'\n        },\n        maxLength: {\n            type: Number,\n            default: 0\n        },\n        allowRemove: {\n            type: Boolean,\n            default: true\n        },\n        modalTitle: {\n            type: String,\n            default: '预览'\n        },\n        handleIcon: [String, Boolean],\n        value: [Array, String]\n    },\n    data() {\n        return {\n            uploadList: [],\n            unique: uniqueId()\n        }\n    },\n    created() {\n        if (this.ctx.props.showFileList === undefined)\n            this.ctx.props.showFileList = false;\n        this.ctx.props.fileList = toArray(this.value).map(parseFile);\n    },\n    watch: {\n        value(n) {\n            if (this.$refs.upload.uploadFiles.every(file => {\n                return !file.status || file.status === 'success';\n            })) {\n                this.$refs.upload.uploadFiles = toArray(n).map(parseFile);\n                this.uploadList = this.$refs.upload.uploadFiles;\n            }\n        },\n        maxLength(n, o) {\n            if (o === 1 || n === 1)\n                this.update();\n        }\n    },\n    methods: {\n        key(unique) {\n            return NAME + unique + this.unique;\n        },\n        isDisabled() {\n            return this.ctx.props.disabled === true;\n        },\n        onRemove(file) {\n            if (this.isDisabled()) return;\n            this.$refs.upload.handleRemove(file);\n        },\n        handleClick(file) {\n            if (this.isDisabled()) return;\n            this.onHandle(file);\n        },\n\n        makeDefaultBtn() {\n            return <div class={style['fc-upload-btn']}>\n                <i class=\"el-icon-upload2\"/>\n            </div>\n        },\n        makeItem(file, index) {\n            return this.uploadType === 'image'\n                ? <img src={file.url} key={this.key('img' + index)}/>\n                : <i class=\"el-icon-tickets\" key={this.key('i' + index)}/>\n        },\n        makeRemoveIcon(file, index) {\n            return <i class=\"el-icon-delete\" on-click={() => this.onRemove(file)} key={this.key('ri' + index)}/>;\n        },\n        makeHandleIcon(file, index) {\n            return <i\n                class={(this.handleIcon === true || this.handleIcon === undefined) ? 'el-icon-view' : this.handleIcon}\n                on-click={() => this.handleClick(file)} key={this.key('hi' + index)}/>;\n        },\n        makeProgress(file, index) {\n            return <ElProgress props={{percentage: file.percentage, type: 'circle', width: 52}} style=\"margin-top:2px;\"\n                key={this.key('pg' + index)}/>\n        },\n        makeIcons(file, index) {\n            const icons = [];\n            if (this.allowRemove || this.handleIcon !== false) {\n                if ((this.uploadType !== 'file' && this.handleIcon !== false) || (this.uploadType === 'file' && this.handleIcon))\n                    icons.push(this.makeHandleIcon(file, index));\n                if (this.allowRemove)\n                    icons.push(this.makeRemoveIcon(file, index));\n\n                return <div class={style['fc-upload-cover']}>{icons}</div>;\n            }\n        },\n        makeFiles() {\n            return this.uploadList.map((file, index) => <div key={this.key(index)}\n                class={style['fc-files']}>{(file.percentage !== undefined && file.status !== 'success') ? this.makeProgress(file, index) : [this.makeItem(file, index), this.makeIcons(file, index)]}</div>);\n        },\n        makeUpload() {\n            return <ElUpload ref=\"upload\"\n                style={{display: 'inline-block'}} {...this.ctx}\n                key={this.key('upload')}>{this.children}</ElUpload>;\n        },\n        initChildren() {\n            if (!hasSlot(this.children, 'default'))\n                this.children.push(this.makeDefaultBtn());\n        },\n        update() {\n            let files = this.$refs.upload.uploadFiles.map((file) => file.url).filter((url) => url !== undefined);\n            this.$emit('input', this.maxLength === 1 ? (files[0] || '') : files);\n        }\n    },\n    render() {\n        const isShow = (!this.maxLength || this.maxLength > this.uploadList.length);\n\n        if (this.$refs.upload) {\n            if (this.ctx.props.showFileList === undefined)\n                this.ctx.props.showFileList = this.$refs.upload.showFileList;\n            this.ctx.props.fileList = this.$refs.upload.fileList;\n        }\n\n        this.initChildren();\n\n        return (\n            <div class={{\n                [style['fc-upload']]: true,\n                [style['fc-hide-btn']]: !isShow\n            }}>{[this.ctx.props.showFileList ? [] : this.makeFiles(), this.makeUpload()]}</div>);\n    },\n    mounted() {\n        this.uploadList = this.$refs.upload.uploadFiles;\n        this.$watch(() => this.$refs.upload.uploadFiles, () => {\n            this.update();\n        }, {deep: true});\n    }\n}","import {copyRules} from '@form-create/core';\n\nconst NAME = 'fc-elm-group';\n\nexport default {\n    name: NAME,\n    props: {\n        rule: Object,\n        rules: Array,\n        max: {\n            type: Number,\n            default: 0\n        },\n        min: {\n            type: Number,\n            default: 0\n        },\n        value: {\n            type: Array,\n            default: () => []\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            config: {\n                submitBtn: false,\n                resetBtn: false\n            },\n            len: 0,\n            cacheRule: {},\n            group$f: {},\n            fieldRule: {}\n        }\n    },\n    computed: {\n        formRule() {\n            if (this.rule) return [this.rule];\n            else if (this.rules) return this.rules;\n            return [];\n        },\n        formData() {\n            return Object.keys(this.fieldRule).map(key => {\n                const keys = Object.keys(this.fieldRule[key]);\n                return this.rule ? keys[0] === undefined ? null : this.fieldRule[key][keys[0]].value : keys.reduce((initial, field) => {\n                    initial[field] = this.fieldRule[key][field].value;\n                    return initial;\n                }, {});\n            })\n        }\n    },\n    watch: {\n        disabled(n) {\n            const lst = this.group$f;\n            Object.keys(lst).forEach(k => {\n                lst[k].disabled(n);\n            })\n        },\n        formData(n) {\n            this.$emit('input', n);\n            this.$emit('change', n);\n        },\n        value(n) {\n            let keys = Object.keys(this.cacheRule), total = keys.length, len = total - n.length;\n            if (len < 0) {\n                for (let i = len; i < 0; i++) {\n                    this.addRule();\n                }\n                for (let i = 0; i < total; i++) {\n                    this.setValue(this.group$f[keys[i]], n[i]);\n                }\n            } else {\n                if (len > 0) {\n                    for (let i = 0; i < len; i++) {\n                        this.removeRule(keys[total - i - 1]);\n                    }\n                    this.subForm();\n                }\n\n                n.forEach((val, i) => {\n                    this.setValue(this.group$f[keys[i]], n[i]);\n                });\n            }\n        }\n    },\n    methods: {\n        setValue($f, value) {\n            if (this.rule) {\n                const fields = $f.fields();\n                if (!fields[0]) return;\n                $f.setValue(fields[0], value);\n            } else {\n                $f.setValue(value);\n            }\n        },\n        addRule(emit) {\n            const rule = this.copyRule();\n            this.$set(this.cacheRule, ++this.len, rule);\n            if (emit)\n                this.$emit('add', rule, Object.keys(this.cacheRule).length - 1);\n        },\n        add$f(i, key, $f) {\n            this.group$f[key] = $f;\n            this.setValue($f, this.value[i]);\n            this.syncData(key, $f);\n            this.subForm();\n            this.$emit('itemMounted', $f, Object.keys(this.cacheRule).indexOf(key));\n        },\n        subForm() {\n            this.$emit('fc.subForm', Object.keys(this.group$f).map(k => this.group$f[k]));\n        },\n        syncData(key, $f) {\n            this.$set(this.fieldRule, key, {});\n            $f.fields().forEach(field => {\n                this.fieldRule[key][field] = $f.getRule(field);\n            });\n        },\n        removeRule(key, emit) {\n            const index = Object.keys(this.cacheRule).indexOf(key);\n            this.$delete(this.cacheRule, key);\n            this.$delete(this.fieldRule, key);\n            this.$delete(this.group$f, key);\n            if (emit)\n                this.$emit('remove', index);\n        },\n        copyRule() {\n            return copyRules(this.formRule);\n        },\n        addIcon(key) {\n            return <i key={`a${key}`} class=\"el-icon-circle-plus-outline\"\n                style={`font-size:28px;cursor:${this.disabled ? 'not-allowed;color:#c9cdd4' : 'pointer'};`}\n                on-click={() => (!this.disabled) && this.addRule(true)}/>;\n        },\n        delIcon(key) {\n            return <i key={`d${key}`} class=\"el-icon-remove-outline\"\n                style={`font-size:28px;cursor:${this.disabled ? 'not-allowed;color:#c9cdd4' : 'pointer;color:#606266'};`}\n                on-click={() => {\n                    if (this.disabled) return;\n                    this.removeRule(key, true);\n                    this.subForm();\n                }}/>;\n        },\n        makeIcon(total, index, key) {\n            if (index === 0) {\n                return [(this.max !== 0 && total >= this.max) ? null : this.addIcon(key), (this.min === 0 || total > this.min) ? this.delIcon(key) : null];\n            } else if (index >= this.min) {\n                return this.delIcon(key);\n            }\n        }\n    },\n    created() {\n        for (let i = 0; i < this.value.length; i++) {\n            this.addRule();\n        }\n\n    },\n    render() {\n        const keys = Object.keys(this.cacheRule);\n        return keys.length === 0 ?\n            <i key={'a_def'} class=\"el-icon-circle-plus-outline\"\n                style={`font-size:28px;vertical-align:middle;color:${this.disabled ? '#c9cdd4;cursor: not-allowed' : '#606266;cursor:pointer'};`}\n                on-click={() => (!this.disabled) && this.addRule(true)}/> :\n            <div key={'con'}>{keys.map((key, index) => {\n                const rule = this.cacheRule[key];\n                return <ElRow align=\"middle\" type=\"flex\" key={key}\n                    style=\"background-color:#f5f7fa;padding:10px;border-radius:5px;margin-bottom:10px;\">\n                    <ElCol span={20}><ElFormItem><FormCreate\n                        on-mounted={($f) => this.add$f(index, key, $f)}\n                        on-on-reload={($f) => this.syncData(key, $f)} rule={rule}\n                        option={this.config}/></ElFormItem></ElCol>\n                    <ElCol span={2} pull={1} push={1}>{this.makeIcon(keys.length, index, key)}</ElCol></ElRow>\n            })}</div>\n    }\n}\n","import checkbox from './checkbox';\nimport frame from './frame';\nimport radio from './radio';\nimport select from './select';\nimport tree from './tree';\nimport upload from './upload';\nimport group from './group';\n\n\nexport default [\n    checkbox,\n    frame,\n    radio,\n    select,\n    tree,\n    upload,\n    group\n]\n","import {BaseParser} from '@form-create/core';\n\nexport default class parser extends BaseParser {\n\n    render(children) {\n        const data = this.$render.inputVData(this, true).get();\n        return this.vNode.checkbox({\n            props: {\n                ctx: data,\n                type: data.props.type,\n                options: this.rule.options,\n                value: this.$handle.getFormData(this),\n                children\n            },\n            on: {\n                input: (n) => {\n                    this.$render.onInput(this, n);\n                }\n            }\n        });\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'checkbox';\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {timeStampToDate} from '@form-create/utils';\n\nexport default class Parser extends BaseParser {\n\n    toFormValue(value) {\n        let isArr = Array.isArray(value), props = this.rule.props, parseValue, type = props.type || 'date';\n        if (['daterange', 'datetimerange', 'dates'].indexOf(type) !== -1) {\n            if (isArr) {\n                parseValue = value.map((time) => !time ? '' : timeStampToDate(time));\n            } else {\n                parseValue = ['', '']\n            }\n        } else if ('date' === type && props.multiple === true) {\n            parseValue = toString(value);\n        } else {\n            parseValue = isArr ? (value[0] || '') : value;\n            parseValue = !parseValue ? '' : timeStampToDate(parseValue);\n        }\n        return parseValue;\n    }\n\n    mounted() {\n        this.toValue = (val) => (this.el.formatToString(val) || '');\n        this.toFormValue = (val) => this.el.parseString(val);\n    }\n}\n","import parser from './parser';\n\nconst name = 'datePicker';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        const data = this.$render.inputVData(this).props('field', this.field);\n\n        return this.vNode.frame(data, children);\n    }\n\n    closeModel() {\n        this.el.closeModel && this.el.closeModel();\n    }\n\n}\n","import parser from './parser';\n\nconst name = 'frame';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nconst name = 'hidden';\n\nclass parser extends BaseParser {\n    render() {\n        return [];\n    }\n}\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {$set} from '@form-create/utils';\n\n\nexport default class Parser extends BaseParser {\n    init() {\n        let {props} = this.rule;\n        if (props.autosize && props.autosize.minRows)\n            $set(props, 'rows', props.autosize.minRows || 2);\n    }\n}\n","import parser from './parser';\n\nconst name = 'input';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nexport default class Parser extends BaseParser {\n    toFormValue(value) {\n        return this.rule.options.filter((opt) => opt.value === value).reduce((initial, opt) => opt.label, '')\n    }\n\n    toValue(parseValue) {\n        return this.rule.options.filter((opt) => opt.label === parseValue).reduce((initial, opt) => opt.value, '')\n    }\n\n    render(children) {\n        return this.vNode.radio(this.$render.inputVData(this).props({\n            'options': this.rule.options,\n        }), children);\n    }\n\n}","import parser from './parser';\n\nconst name = 'radio';\n\nexport default {parser, name};","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        return this.vNode.select(this.$render.inputVData(this).props('options', this.rule.options), children);\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'select';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n    toFormValue(value) {\n        let rule = this.rule, isArr = Array.isArray(value), props = rule.props, min = props.min || 0,\n            parseValue;\n        if (props.range === true) {\n            parseValue = isArr ? value : [min, (parseFloat(value) || min)];\n        } else {\n            parseValue = isArr ? (parseFloat(value[0]) || min) : parseFloat(value);\n        }\n        return parseValue;\n    }\n\n}\n","import parser from './parser';\n\nconst name = 'slider';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nexport default class parser extends BaseParser {\n    render(children) {\n        return this.vNode.switch(this.$render.inputVData(this).get(), children);\n    }\n}\n","import parser from './parser';\n\nconst name = 'switch';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {dateFormat, isDate, timeStampToDate} from '@form-create/utils';\n\n\nexport function getTime(date) {\n    return isDate(date)\n        ? dateFormat('hh:mm:ss', date)\n        : date;\n}\n\nexport function toDate(time) {\n    return new Date('2018/02/14 ' + time);\n}\n\nexport default class Parser extends BaseParser {\n\n    toFormValue(value) {\n        let parseValue, isArr = Array.isArray(value);\n        if (this.rule.props.isRange === true) {\n            if (isArr) {\n                parseValue = value.map((time) => !time ? '' : toDate(getTime(timeStampToDate(time)))).filter(n => !!n);\n                if (parseValue.length !== 2) parseValue = null;\n            } else {\n                parseValue = null;\n            }\n        } else {\n            isArr && (value = value[0]);\n            parseValue = !value ? null : toDate(getTime(timeStampToDate(value)));\n        }\n        return parseValue;\n    }\n\n    mounted() {\n        this.toValue = (val) => this.el.formatToString(val);\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'timePicker';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {isUndef, $set} from '@form-create/utils';\n\nexport default class Parser extends BaseParser {\n\n    init() {\n        const props = this.rule.props;\n        if (isUndef(props.nodeKey)) $set(props, 'nodeKey', 'id');\n        if (isUndef(props.props)) $set(props, 'props', {\n            label: 'title'\n        });\n    }\n\n    render(children) {\n        const data = this.$render.parserToData(this).get();\n        return this.vNode.tree({\n            props: {\n                ctx: data,\n                children,\n                value: this.$handle.getFormData(this),\n                type: data.props.type\n            },\n            ref: this.refName,\n            key: this.key,\n            on: {\n                input: (value) => {\n                    this.$render.onInput(this, value);\n                }\n            }\n        });\n    }\n}\n","import parser from './parser';\n\nconst name = 'tree';\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n\n        const ctx = this.$render.parserToData(this).get();\n        const {key, refName} = this;\n        delete ctx.props.fileList;\n        const props = {\n            uploadType: ctx.props.uploadType,\n            maxLength: ctx.props.limit,\n            modalTitle: ctx.props.modalTitle,\n            handleIcon: ctx.props.handleIcon,\n            onHandle: ctx.props.onHandle,\n            allowRemove: ctx.props.allowRemove,\n            value: this.$handle.getFormData(this),\n            ctx,\n            children\n        };\n        return this.vNode.upload({\n            props,\n            key,\n            ref: refName,\n            on: {\n                input: (n) => {\n                    this.$render.onInput(this, n);\n                }\n            }\n        });\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'upload';\n\n\nexport default {parser, name};\n","import checkbox from './checkbox';\nimport datePicker from './datePicker';\nimport frame from './frame';\nimport hidden from './hidden';\nimport input from './input';\nimport radio from './radio';\nimport select from './select';\nimport slider from './slider';\nimport iswitch from './switch';\nimport timePicker from './timePicker';\nimport tree from './tree';\nimport upload from './upload';\n\nexport default [\n    checkbox,\n    datePicker,\n    frame,\n    hidden,\n    input,\n    radio,\n    select,\n    slider,\n    iswitch,\n    timePicker,\n    tree,\n    upload\n]","export default function getConfig() {\n    return {\n        form: {\n            inline: false,\n            labelPosition: 'right',\n            labelSuffix: undefined,\n            hideRequiredAsterisk: false,\n            labelWidth: '125px',\n            showMessage: true,\n            inlineMessage: false,\n            statusIcon: false,\n            validateOnRuleChange: true,\n            disabled: false,\n            size: undefined,\n        },\n        row: {\n            gutter: 0,\n            type: undefined,\n            align: undefined,\n            justify: undefined,\n            tag: 'div'\n        },\n        info: {\n            type: 'popover',\n            trigger: 'hover',\n            placement: 'top-start',\n            icon: 'el-icon-warning'\n        },\n        submitBtn: {\n            type: 'primary',\n            size: 'medium',\n            plain: false,\n            round: false,\n            circle: false,\n            loading: false,\n            disabled: false,\n            icon: 'el-icon-upload',\n            width: '100%',\n            autofocus: false,\n            nativeType: 'button',\n            innerText: '提交',\n            show: true,\n            col: undefined,\n            click: undefined,\n        },\n        resetBtn: {\n            type: 'default',\n            size: 'medium',\n            plain: false,\n            round: false,\n            circle: false,\n            loading: false,\n            disabled: false,\n            icon: 'el-icon-refresh',\n            width: '100%',\n            autofocus: false,\n            nativeType: 'button',\n            innerText: '重置',\n            show: false,\n            col: undefined,\n            click: undefined,\n        },\n    };\n}\n","export default {\n    modal: 'el-dialog',\n    button: 'el-button',\n    icon: 'i',\n    slider: 'el-slider',\n    rate: 'el-rate',\n    upload: 'fc-elm-upload',\n    cascader: 'el-cascader',\n    colorPicker: 'el-color-picker',\n    timePicker: 'el-time-picker',\n    datePicker: 'el-date-picker',\n    'switch': 'el-switch',\n    select: 'fc-elm-select',\n    checkbox: 'fc-elm-checkbox',\n    radio: 'fc-elm-radio',\n    inputNumber: 'el-input-number',\n    input: 'el-input',\n    formItem: 'el-form-Item',\n    form: 'el-form',\n    frame: 'fc-elm-frame',\n    col: 'el-col',\n    row: 'el-row',\n    tree: 'fc-elm-tree',\n    autoComplete: 'el-autocomplete',\n    group: 'fc-elm-group',\n}\n","import {isFunction, preventDefault, toString, isString, isType} from '@form-create/utils';\nimport {BaseForm} from '@form-create/core';\nimport style from '../style/index.css';\n\nconst upperCaseReg = /[A-Z]/;\n\nexport function isAttr(name, value) {\n    return (!upperCaseReg.test(name) && (isString(value) || isType(value, 'Number')))\n}\n\nfunction isTooltip(info) {\n    return info.type === 'tooltip';\n}\n\nexport default class Form extends BaseForm {\n\n    inputVData(parser) {\n        const props = parser.rule.props || {};\n        parser.vData.attrs(Object.keys(props).reduce((initial, val) => {\n            if (isAttr(val, props[val]))\n                initial[val] = props[val];\n            return initial;\n        }, {}));\n        if (!props.size && this.options.form.size)\n            parser.vData.props('size', this.options.form.size);\n    }\n\n    validate(call) {\n        this.getFormRef().validate((valid) => {\n            call && call(valid);\n        });\n    }\n\n    validateField(field, call) {\n        this.getFormRef().validateField(field, call);\n    }\n\n    resetField(parser) {\n        this.vm.$refs[parser.formItemRefName].resetField();\n    }\n\n    clearValidateState(parser) {\n        const fItem = this.vm.$refs[parser.formItemRefName];\n        if (fItem) {\n            fItem.validateMessage = '';\n            fItem.validateState = '';\n        }\n    }\n\n    beforeRender() {\n        this.propsData = this.vData.props(this.options.form).props({\n            model: this.$handle.formData,\n            rules: this.$handle.validate,\n            key: 'form' + this.unique\n        }).ref(this.refName).nativeOn({submit: preventDefault}).class(this.options.form.className).class('form-create', true).key(this.unique).get();\n    }\n\n    render(vn) {\n        if (vn.length > 0)\n            vn.push(this.makeFormBtn());\n\n        return this.vNode.form(this.propsData, [this.makeRow(vn)]);\n    }\n\n    makeRow(vn) {\n        return this.vNode.row({props: this.options.row || {}, key: 'fr' + this.unique}, vn)\n    }\n\n    container(child, parser) {\n        return this.makeFormItem(parser, child);\n    }\n\n    makeFormItem(parser, child) {\n        let fItemUnique = `fItem${parser.key}${this.unique}`,\n            {rule, field, formItemRefName} = parser,\n            col = this.getGetCol(parser),\n            labelWidth = (!col.labelWidth && !rule.title) ? 0 : col.labelWidth,\n            propsData = this.vData.props({\n                prop: field,\n                // label: rule.title,\n                // labelFor: unique,\n                rules: rule.validate,\n                labelWidth: toString(labelWidth),\n                required: rule.props.required\n            }).key(fItemUnique).ref(formItemRefName).class(rule.className).get(),\n            node = this.vNode.formItem(propsData, [child, this.makeFormPop(parser, fItemUnique)]);\n        return this.propsData.props.inline === true ? node : this.makeCol(col, parser, fItemUnique, [node]);\n    }\n\n    makeFormPop({rule}, unique) {\n        if (rule.title) {\n            const info = this.options.info || {}, svn = [rule.title];\n            if (rule.info) {\n                svn.push(this.vNode.make(isTooltip(info) ? 'el-tooltip' : 'el-popover', {\n                    props: {...info, content: rule.info},\n                    key: `pop${unique}`\n                }, [\n                    this.vNode.icon({\n                        class: [info.icon || 'el-icon-warning'],\n                        slot: isTooltip(info) ? 'default' : 'reference'\n                    })\n                ]));\n            }\n            return this.vNode.make('span', {slot: 'label'}, svn);\n        }\n    }\n\n    makeCol(col, parser, fItemUnique, VNodeFn) {\n        if (col.span === undefined)\n            col.span = 24;\n        return this.vNode.col({\n            props: col, 'class': {\n                [style.__fc_h]: !!parser.rule.hidden,\n                [style.__fc_v]: !!parser.rule.visibility\n            }, key: `${fItemUnique}col1`\n        }, VNodeFn);\n    }\n\n    makeFormBtn() {\n        let btn = [],\n            submitBtnShow = false !== this.vm.buttonProps && false !== this.vm.buttonProps.show,\n            resetBtnShow = false !== this.vm.resetProps && false !== this.vm.resetProps.show;\n        if (submitBtnShow)\n            btn.push(this.makeSubmitBtn(resetBtnShow ? 19 : 24));\n        if (resetBtnShow)\n            btn.push(this.makeResetBtn(4));\n\n        return this.propsData.props.inline === true\n            ? btn\n            : (btn.length ? this.vNode.col({\n                props: {span: 24},\n                key: `${this.unique}col2`\n            }, btn) : []);\n    }\n\n    makeResetBtn(span) {\n        const resetBtn = this.vm.resetProps,\n            props = resetBtn.col || {span: span, push: 1};\n\n        return this.vNode.col({props: props, key: `${this.unique}col3`}, [\n            this.vNode.button({\n                key: `frsbtn${this.unique}`, props: resetBtn, on: {\n                    'click': () => {\n                        const fApi = this.$handle.fCreateApi;\n                        isFunction(resetBtn.click)\n                            ? resetBtn.click(fApi)\n                            : fApi.resetFields();\n                    }\n                }, style: {width: resetBtn.width}\n            }, [resetBtn.innerText])\n        ]);\n    }\n\n    makeSubmitBtn(span) {\n        const submitBtn = this.vm.buttonProps,\n            props = submitBtn.col || {span: span};\n\n        return this.vNode.col({props: props, key: `${this.unique}col4`}, [\n            this.vNode.button({\n                key: `fbtn${this.unique}`, props: submitBtn, on: {\n                    'click': () => {\n                        const fApi = this.$handle.fCreateApi;\n                        isFunction(submitBtn.click)\n                            ? submitBtn.click(fApi)\n                            : fApi.submit();\n                    }\n                }, style: {width: submitBtn.width}\n            }, [submitBtn.innerText])\n        ]);\n    }\n}\n","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'datePicker';\n\nexport default ['year', 'month', 'date', 'dates', 'week', 'datetime', 'datetimeRange', 'dateRange'].reduce((initial, type) => {\n    initial[type] = creatorTypeFactory(name, type.toLowerCase());\n    return initial\n}, {});","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'frame';\n\nconst types = {\n    frameInputs: ['input', 0],\n    frameFiles: ['file', 0],\n    frameImages: ['image', 0],\n    frameInputOne: ['input', 1],\n    frameFileOne: ['file', 1],\n    frameImageOne: ['image', 1]\n};\n\nconst maker = Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, m => m.props({type: types[key][0], maxLength: types[key][1]}));\n    return maker\n}, {});\n\n\nmaker.frameInput = maker.frameInputs;\nmaker.frameFile = maker.frameFiles;\nmaker.frameImage = maker.frameImages;\n\nexport default maker;","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'input';\n\nconst maker = ['password', 'url', 'email', 'text', 'textarea'].reduce((maker, type) => {\n    maker[type] = creatorTypeFactory(name, type);\n    return maker;\n}, {});\n\nmaker.idate = creatorTypeFactory(name, 'date');\n\nexport default maker;","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'select';\n\nexport default {\n    selectMultiple: creatorTypeFactory(name, true, 'multiple'),\n    selectOne: creatorTypeFactory(name, false, 'multiple'),\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'slider';\n\nexport default {\n    sliderRange: creatorTypeFactory(name, true, 'range')\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'timePicker';\n\nexport default {\n    time: creatorTypeFactory(name, (m) => m.props.isRange = false),\n    timeRange: creatorTypeFactory(name, (m) => m.props.isRange = true)\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'tree';\n\nconst types = {'treeSelected': 'selected', 'treeChecked': 'checked'};\n\nexport default Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, types[key]);\n    return maker;\n}, {});","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'upload';\n\nconst types = {\n    image: ['image', 0],\n    file: ['file', 0],\n    uploadFileOne: ['file', 1],\n    uploadImageOne: ['image', 1],\n};\n\nconst maker = Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, m => m.props({uploadType: types[key][0], maxLength: types[key][1]}));\n    return maker\n}, {});\n\nmaker.uploadImage = maker.image;\nmaker.uploadFile = maker.file;\n\nexport default maker;","import {creatorFactory} from '@form-create/core';\nimport datePicker from './datePicker';\nimport frame from './frame';\nimport input from './input';\nimport select from './select';\nimport slider from './slider';\nimport timePicker from './timePicker';\nimport tree from './tree';\nimport upload from './upload';\n\nconst maker = {...datePicker, ...frame, ...input, ...select, ...slider, ...timePicker, ...tree, ...upload},\n    names = ['autoComplete', 'cascader', 'colorPicker', 'datePicker', 'frame', 'inputNumber', 'radio', 'rate'];\n\nnames.forEach(name => {\n    maker[name] = creatorFactory(name);\n});\n\nmaker.auto = maker.autoComplete;\nmaker.number = maker.inputNumber;\nmaker.color = maker.colorPicker;\nmaker.hidden = (field, value) => creatorFactory('hidden')('', field, value);\n\nexport default maker;","import components from '../components';\nimport parsers from '../parsers';\nimport getConfig from './config';\nimport nodes from './nodes';\nimport formRender from './form';\nimport createFormCreate, {VNode} from '@form-create/core';\nimport makers from '../makers';\n\nVNode.use(nodes);\n\nexport const drive = {\n    ui: process.env.UI,\n    version: `${process.env.VERSION}`,\n    formRender,\n    components,\n    parsers,\n    makers,\n    getConfig,\n};\n\nconst {FormCreate, install} = createFormCreate(drive);\n\nif (typeof window !== 'undefined') {\n    window.formCreate = FormCreate;\n    if (window.Vue) {\n        install(window.Vue);\n    }\n}\n\nexport default FormCreate;\n","import FormCreate from './core/index';\n\n\nconst maker = FormCreate.maker;\n\nexport {maker}\n\nexport default FormCreate;\n"],"names":["_extends","Object","assign","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","apply","this","normalMerge","toArrayMerge","functionalMerge","mergeJsxProps","reduce","indexOf","Array","e","concat","f","g","h","i","mergeFn","$set","target","field","value","Vue","set","$del","delete","isValidChildren","children","isArray","_toString","toString","isUndef","v","val","_typeof","JSON","stringify","String","extend","to","_from","key","debounce","fn","wait","timeout","arg","clearTimeout","setTimeout","isType","type","isDate","isPlainObject","isFunction","isString","isBool","toLine","name","line","replace","toLowerCase","substr","toArray","isElement","nodeType","deepExtend","origin","isArr","clone","nst","undefined","deepExtendArgs","lst","forEach","id","uniqueId","toDefSlot","slot","$h","timeStampToDate","timeStamp","date","Date","preventDefault","dateFormat","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","k","test","RegExp","$1","getFullYear","hasSlot","slotName","some","child","data","errMsg","NAME","props","options","default","ctx","watch","update","trueValue","unique","methods","onInput","n","$emit","filter","opt","label","map","_this","option","created","render","_this2","index","Type","chlidren","formCreateName","$FormCreate","FormCreate","components","componentName","rule","required","formData","buttonProps","resetProps","$f","isShow","formCreate","_buttonProps","_resetProps","_refresh","handle","reloadRule","beforeCreate","$options","propsData","api","mounted","beforeDestroy","$render","clearCacheAll","objects","initial","arrA","arrB","event","hook","fn1","fn2","defVData","on","VData","init","_data","classList","status","merge","class","keys","keyList","objList","obj","vdataField","baseRule","validate","col","control","emit","template","emitPrefix","native","info","creatorFactory","title","Creator","creatorTypeFactory","typeName","maker","keyAttrs","attr","objAttrs","arrAttrs","toJson","getRule","_isVue","__inject","__origin","__emit","parseJson","json","parse","eval","console","error","enumerable","configurable","copyRule","copyRules","rules","r","commonMaker","create","make","createTmp","vm","makerFactory","toMaker","ruleToMaker","defineProperties","find","findField","model","parseVData","domProps","innerHTML","get","getVNode","VNode","setVm","$createElement","nodeName","VNodeFn","Node","context","nodes","toLocaleLowerCase","use","fragment","BaseParser","vData","vNode","originType","isDef","el","refName","formItemRefName","root","ctrlRule","modelEvent","$handle","deleted","formValue","$de","Render","fc","$form","cache","renderList","parser","clear","cacheStatus","refresh","parent","clearCache","vnode","parsers","orgChildren","beforeRender","vn","sortList","renderParser","global","toData","compile","getInjectData","setTemplateProps","fCreateApi","$off","$on","setGlobalConfig","form","renderTemplate","setCache","isNoVal","defaultRender","renderChildren","container","getCache","custom","parserToData","ref","subForm","_this3","addSubForm","getFormData","inputVData","__fc__","_this4","removeField","vdata","fApi","$props","Api","tidyFields","fields","all","fieldList","getValue","setValue","changeValue","changeField","getParser","__field__","splice","reload","__origin__","destroy","$el","parentNode","removeChild","$destroy","append","after","isChild","prepend","hidden","hiddenStatus","visibility","visibilityStatus","disabled","trueData","component","customData","bind","properties","submitBtnProps","resetBtnProps","node","updateOptions","onSubmit","sync","hideForm","changeStatus","clearChangeStatus","updateRule","cover","updateRules","updateValidate","updateValidates","validates","method","Error","once","$once","off","trigger","args","callback","subLen","state","___this","valid","len","validFn","clearValidateState","sub","validateField","resetFields","resetField","refreshControl","submit","successFn","failFn","clearSub","_this5","clearSubValidateState","getSubForm","btn","loading","show","resetBtn","closeModal","closeModel","Handle","watching","__init","drive","formRender","loadRule","initOrgChildren","modelList","modelEvents","_rule","parseOn","parseProps","createParser","parseRule","notField","setParser","bindParser","push","defineProperty","toValue","isChange","setFormData","toFormValue","valueChange","def","defRule","parseArray","parseInjectEvent","margeEmit","emitEvent","parseEmit","injectEvent","inject","self","_fn","unshift","emitKey","config","eventName","fieldKey","run","validateControl","submitBtn","$watch","deep","immediate","controls","getControl","removeControl","_this6","addParserWitch","$refs","defaultValue","mountedParser","onReload","delParser","_this7","$nextTick","unWatch","className","functional","_vue","window","createFormCreate","globalConfig","getConfig","_id","get$FormCreate","margeGlobal","_options","document","querySelector","body","bindAttr","version","ui","$vm","$data","$mount","params","$parent","_opt","appendChild","$formCreate","mount","remove","makers","install","_installedFormCreate","BaseForm","mCol","pCol","Modal","cb","width","visible","modal","close","onClose","closed","onClosed","content","defaultOnHandle","src","style","attrs","styleInject","css","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","styleSheet","cssText","createTextNode","helper","Boolean","icon","height","maxLength","Number","okBtnText","closeBtnText","modalTitle","handleIcon","allowRemove","onOpen","Function","onOk","onCancel","onLoad","onBeforeRemove","onRemove","onHandle","srcKey","modalVm","fileList","showModel","_vm","path","contentWindow","log","button","click","makeInput","getSrc","readonly","makeGroup","makeBtn","makeItem","makeIcons","icons","makeHandleIcon","makeRemoveIcon","handleClick","handleRemove","makeFiles","makeImages","makeTree","updateValue","onChange","tree","getCurrentKey","getCheckedKeys","setCurrentKey","setCheckedKeys","parseFile","file","url","getFileName","split","pop","uploadType","uploadList","showFileList","upload","uploadFiles","every","isDisabled","makeDefaultBtn","makeProgress","percentage","makeUpload","display","initChildren","files","max","min","cacheRule","group$f","fieldRule","computed","formRule","total","addRule","removeRule","add$f","syncData","$delete","addIcon","delIcon","makeIcon","checkbox","frame","radio","select","group","input","Parser","parseValue","time","multiple","formatToString","parseString","autosize","minRows","range","parseFloat","switch","getTime","toDate","isRange","nodeKey","limit","datePicker","slider","iswitch","timePicker","inline","labelPosition","labelSuffix","hideRequiredAsterisk","labelWidth","showMessage","inlineMessage","statusIcon","validateOnRuleChange","size","row","gutter","align","justify","tag","placement","plain","round","circle","autofocus","nativeType","innerText","rate","cascader","colorPicker","inputNumber","formItem","autoComplete","upperCaseReg","isAttr","isTooltip","Form","getFormRef","fItem","validateMessage","validateState","nativeOn","makeFormBtn","makeRow","makeFormItem","fItemUnique","getGetCol","prop","makeFormPop","makeCol","svn","span","__fc_h","__fc_v","submitBtnShow","resetBtnShow","makeSubmitBtn","makeResetBtn","types","frameInputs","frameFiles","frameImages","frameInputOne","frameFileOne","frameImageOne","m","frameInput","frameFile","frameImage","idate","selectMultiple","selectOne","sliderRange","timeRange","image","uploadFileOne","uploadImageOne","uploadImage","uploadFile","names","auto","number","color","process"],"mappings":"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"}