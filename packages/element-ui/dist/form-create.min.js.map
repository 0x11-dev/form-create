{"version":3,"file":"form-create.min.js","sources":["../../../node_modules/@vue/babel-helper-vue-jsx-merge-props/dist/helper.js","../../utils/src/index.js","../src/components/checkbox/index.jsx","../../core/src/components/formCreate.js","../../core/src/core/mergeJsxProps.js","../../core/src/factory/vData.js","../../core/src/factory/creator.js","../../core/src/core/util.js","../../core/src/factory/maker.js","../../core/src/factory/vNode.js","../../core/src/factory/parser.js","../../core/src/core/render.js","../../core/src/core/api.js","../../core/src/core/handle.js","../../core/src/components/fragment.jsx","../../core/src/core/index.js","../../core/src/factory/form.js","../src/core/modal.js","../../../node_modules/style-inject/dist/style-inject.es.js","../src/components/frame/index.jsx","../src/components/radio/index.jsx","../src/components/select/index.jsx","../src/components/tree/index.jsx","../src/components/upload/index.jsx","../src/components/group/index.jsx","../src/components/index.js","../src/parsers/checkbox/parser.js","../src/parsers/checkbox/index.js","../src/parsers/datePicker/parser.js","../src/parsers/datePicker/index.js","../src/parsers/frame/parser.js","../src/parsers/frame/index.js","../src/parsers/hidden/index.js","../src/parsers/input/parser.js","../src/parsers/input/index.js","../src/parsers/radio/parser.js","../src/parsers/radio/index.js","../src/parsers/select/parser.js","../src/parsers/select/index.js","../src/parsers/slider/parser.js","../src/parsers/slider/index.js","../src/parsers/switch/parser.js","../src/parsers/switch/index.js","../src/parsers/timePicker/parser.js","../src/parsers/timePicker/index.js","../src/parsers/tree/parser.js","../src/parsers/tree/index.js","../src/parsers/upload/parser.js","../src/parsers/upload/index.js","../src/parsers/index.js","../src/core/config.js","../src/core/nodes.js","../src/core/form.js","../src/makers/datePicker.js","../src/makers/frame.js","../src/makers/input.js","../src/makers/select.js","../src/makers/slider.js","../src/makers/timePicker.js","../src/makers/tree.js","../src/makers/upload.js","../src/makers/index.js","../src/core/index.js","../src/index.js"],"sourcesContent":["\"use strict\";function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var normalMerge=[\"attrs\",\"props\",\"domProps\"],toArrayMerge=[\"class\",\"style\",\"directives\"],functionalMerge=[\"on\",\"nativeOn\"],mergeJsxProps=function(a){return a.reduce(function(c,a){for(var b in a)if(!c[b])c[b]=a[b];else if(-1!==normalMerge.indexOf(b))c[b]=_extends({},c[b],a[b]);else if(-1!==toArrayMerge.indexOf(b)){var d=c[b]instanceof Array?c[b]:[c[b]],e=a[b]instanceof Array?a[b]:[a[b]];c[b]=d.concat(e)}else if(-1!==functionalMerge.indexOf(b)){for(var f in a[b])if(c[b][f]){var g=c[b][f]instanceof Array?c[b][f]:[c[b][f]],h=a[b][f]instanceof Array?a[b][f]:[a[b][f]];c[b][f]=g.concat(h)}else c[b][f]=a[b][f];}else if(\"hook\"==b)for(var i in a[b])c[b][i]=c[b][i]?mergeFn(c[b][i],a[b][i]):a[b][i];else c[b]=a[b];return c},{})},mergeFn=function(a,b){return function(){a&&a.apply(this,arguments),b&&b.apply(this,arguments)}};module.exports=mergeJsxProps;\n","import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n\nexport function isValidChildren(children) {\n    return Array.isArray(children) && children.length > 0;\n}\n\nexport const _toString = Object.prototype.toString;\n\nexport function isUndef(v) {\n    return v === undefined || v === null\n}\n\nexport function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n\nexport function extend(to, _from) {\n    for (var key in _from) {\n        $set(to, key, _from[key]);\n    }\n    return to\n}\n\nexport function debounce(fn, wait) {\n    var timeout = null;\n    return function (...arg) {\n        if (timeout !== null)\n            clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...arg), wait);\n    }\n}\n\nexport function isType(arg, type) {\n    return _toString.call(arg) === '[object ' + type + ']'\n}\n\nexport function isDate(arg) {\n    return isType(arg, 'Date');\n}\n\nexport function isPlainObject(arg) {\n    return isType(arg, 'Object');\n}\n\nexport function isFunction(arg) {\n    return isType(arg, 'Function');\n}\n\nexport function isString(arg) {\n    return isType(arg, 'String');\n}\n\nexport function isBool(arg) {\n    return isType(arg, 'Boolean');\n}\n\nexport function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n\nexport function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n)\n}\n\nexport function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ((isUndef(value) || value === '' ? [] : [value])\n        );\n}\n\nexport function isElement(arg) {\n    return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !isPlainObject(arg)\n}\n\nexport function deepExtend(origin, target = {}) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || isPlainObject(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                deepExtend(origin[key], clone);\n            } else {\n                $set(origin, key, clone);\n            }\n        }\n    }\n    return origin\n}\n\nexport function deepExtendArgs(origin, ...lst) {\n    lst.forEach(target => {\n        origin = deepExtend(origin, target);\n    });\n    return origin;\n}\n\nlet id = 0;\n\nexport function uniqueId() {\n    return ++id\n}\n\nexport function toDefSlot(slot, $h) {\n    return [slot && isFunction(slot) ? slot($h) : slot]\n}\n\n\nexport function timeStampToDate(timeStamp) {\n    if (isDate(timeStamp))\n        return timeStamp;\n    else {\n        let date = new Date(timeStamp);\n        return date.toString() === 'Invalid Date' ? timeStamp : date;\n    }\n}\n\nexport function preventDefault(e) {\n    e.preventDefault();\n}\n\nexport function dateFormat(fmt, date = new Date) {\n    let o = {\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n    for (let k in o)\n        if (new RegExp('(' + k + ')').test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1)\n                ? (o[k])\n                : (('00' + o[k]).substr(('' + o[k]).length)));\n    return fmt\n}\n\nexport function hasSlot(children, slotName) {\n    return children.length !== 0 && children.some(child => {\n        if (child.data) {\n            if ((!child.data.slot && slotName === 'default') || (child.data.slot === slotName))\n                return true;\n        } else if (slotName === 'default')\n            return true;\n        return false;\n    })\n}\n\nexport function errMsg(i) {\n\n    return '\\n\\x67\\x69\\x74\\x68\\x75\\x62\\x3a\\x68\\x74\\x74\\x70' +\n        '\\x73\\x3a\\x2f\\x2f\\x67\\x69\\x74\\x68\\x75\\x62\\x2e\\x63\\x6f' +\n        '\\x6d\\x2f\\x78\\x61\\x62\\x6f\\x79\\x2f\\x66\\x6f\\x72\\x6d\\x2d' +\n        '\\x63\\x72\\x65\\x61\\x74\\x65\\n\\x64\\x6f\\x63\\x75\\x6d\\x65' +\n        '\\x6e\\x74\\x3a\\x68\\x74\\x74\\x70\\x3a\\x2f\\x2f\\x77\\x77\\x77' +\n        '\\x2e\\x66\\x6f\\x72\\x6d\\x2d\\x63\\x72\\x65\\x61\\x74\\x65\\x2e' +\n        '\\x63\\x6f\\x6d' + (i || '');\n}\n","import {uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-checkbox';\n\nexport default {\n    name: NAME,\n    props: {\n        options: {\n            type: Array,\n            default: () => []\n        },\n        children: {\n            type: Array,\n            default: () => []\n        },\n        ctx: {\n            type: Object,\n            default: () => ({})\n        },\n        value: {\n            type: Array,\n            default: () => []\n        },\n        type: String\n    },\n    watch: {\n        value() {\n            this.update();\n        }\n    },\n    data() {\n        return {\n            trueValue: [],\n            unique: uniqueId()\n        }\n    },\n    methods: {\n        onInput(n) {\n            this.$emit('input', this.options.filter((opt) => n.indexOf(opt.label) !== -1).map((opt) => opt.value));\n        },\n        update() {\n            this.trueValue = this.value ? this.options.filter((opt) => this.value.indexOf(opt.value) !== -1)\n                .map((option) => option.label) : []\n        }\n    },\n    created() {\n        this.update();\n    },\n    render() {\n        return <ElCheckboxGroup {...this.ctx} v-model={this.trueValue}\n            on-input={this.onInput}>{this.options.map((opt, index) => {\n                const props = {...opt};\n                const Type = this.type === 'button' ? 'ElCheckboxButton' : 'ElCheckbox';\n                delete props.value;\n                return <Type {...{props}} key={NAME + Type + index + this.unique}/>\n            }).concat(this.chlidren)}</ElCheckboxGroup>\n    }\n}\n","import {deepExtend} from '@form-create/utils';\n\nexport const formCreateName = 'FormCreate';\n\nexport default function $FormCreate(FormCreate, components) {\n    return {\n        name: formCreateName,\n        componentName: formCreateName,\n        props: {\n            rule: {\n                type: Array,\n                required: true,\n                default: () => {\n                    return {};\n                }\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                },\n                required: false\n            },\n            value: Object\n        },\n        data: () => {\n            return {\n                formData: undefined,\n                buttonProps: undefined,\n                resetProps: undefined,\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n            };\n        },\n        components,\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _buttonProps(props) {\n                this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n            },\n            _resetProps(props) {\n                this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n            },\n            _refresh() {\n                ++this.unique;\n            }\n        },\n        watch: {\n            option: '_refresh',\n            rule(n) {\n                this.formCreate.handle.reloadRule(n);\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(rule, option);\n            this.formCreate.beforeCreate(this);\n        },\n        created() {\n            this.formCreate.created();\n            this.$f = this.formCreate.api();\n            this.$emit('input', this.$f);\n        },\n        mounted() {\n            const formCreate = this.formCreate;\n\n            formCreate.mounted();\n            this.$emit('input', this.$f);\n\n        },\n        beforeDestroy() {\n            this.formCreate.handle.reloadRule([]);\n            this.formCreate.handle.$render.clearCacheAll();\n        },\n    }\n}\n","const normalMerge = ['attrs', 'props', 'domProps'];\nconst toArrayMerge = ['class', 'style', 'directives'];\nconst functionalMerge = ['on', 'nativeOn'];\n\nconst mergeJsxProps = (objects, initial) =>\n    objects.reduce((a, b) => {\n        for (const key in b) {\n            if (a[key]) {\n                if (normalMerge.indexOf(key) !== -1) {\n                    a[key] = {...a[key], ...b[key]}\n                } else if (toArrayMerge.indexOf(key) !== -1) {\n                    const arrA = a[key] instanceof Array ? a[key] : [a[key]];\n                    const arrB = b[key] instanceof Array ? b[key] : [b[key]];\n                    a[key] = [...arrA, ...arrB]\n                } else if (functionalMerge.indexOf(key) !== -1) {\n                    for (const event in b[key]) {\n                        if (a[key][event]) {\n                            const arrA = a[key][event] instanceof Array ? a[key][event] : [a[key][event]];\n                            const arrB = b[key][event] instanceof Array ? b[key][event] : [b[key][event]];\n                            a[key][event] = [...arrA, ...arrB]\n                        } else {\n                            a[key][event] = b[key][event]\n                        }\n                    }\n                } else if (key === 'hook') {\n                    for (let hook in b[key]) {\n                        if (a[key][hook]) {\n                            a[key][hook] = mergeFn(a[key][hook], b[key][hook])\n                        } else {\n                            a[key][hook] = b[key][hook]\n                        }\n                    }\n                } else {\n                    a[key] = b[key]\n                }\n            } else {\n                a[key] = b[key]\n            }\n        }\n        return a\n    }, initial);\n\nconst mergeFn = (fn1, fn2) =>\n    function () {\n        fn1 && fn1.apply(this, arguments);\n        fn2 && fn2.apply(this, arguments);\n    };\n\nexport default mergeJsxProps\n","import {isPlainObject, isUndef, toString} from '@form-create/utils';\nimport mergeJsxProps from '../core/mergeJsxProps';\n\nfunction defVData() {\n    return {\n        // class: {},\n        // style: {},\n        // attrs: {},\n        props: {},\n        // domProps: {},\n        on: {},\n        // nativeOn: {},\n        // directives: [],\n        // scopedSlots: {},\n        // slot: undefined,\n        // key: undefined,\n        // ref: undefined\n    };\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    merge(props) {\n        mergeJsxProps([props], this._data);\n        return this;\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            this.merge({class: classList});\n        } else if (isPlainObject(classList)) {\n            this.merge(classList);\n        } else {\n            this.merge({class: {[toString(classList)]: !!status}});\n        }\n\n        return this;\n    }\n\n    init() {\n        this._data = defVData();\n        return this;\n    }\n\n    get() {\n        const data = Object.keys(this._data).reduce((initial, key) => {\n            const value = this._data[key];\n            if (value === undefined) return initial;\n            if (Array.isArray(value) && !value.length) return initial;\n            if (isPlainObject(value) && !Object.keys(value).length && key !== 'props') return initial;\n\n            initial[key] = value;\n            return initial;\n        }, {});\n        this.init();\n        return data;\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style', 'directives'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        this.merge({[key]: val});\n        return this;\n    };\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n        if (isPlainObject(obj)) {\n            this.merge({[key]: obj})\n        } else {\n            this.merge({[key]: {[toString(obj)]: val}})\n        }\n\n        return this;\n    };\n});\n\nexport const vdataField = objList.concat(keyList, 'class');\n","import {$set, extend, isFunction, isPlainObject} from '@form-create/utils';\nimport VData from './vData';\n\nfunction baseRule() {\n    return {\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        control: [],\n        emit: [],\n        template: undefined,\n        emitPrefix: undefined,\n        native: undefined,\n        info: undefined,\n    };\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props);\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type)) type(maker);\n        else maker.props(typeName, type);\n        return maker;\n    };\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n        extend(this._data, baseRule());\n        extend(this._data, {type, title, field, value});\n        if (isPlainObject(props)) this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this;\n    }\n\n    getRule() {\n        return this._data;\n    }\n\n    event(...args) {\n        this.on(...args);\n        return this;\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'value', 'name', 'title', 'native', 'info', 'hidden', 'visibility', 'inject', 'model'];\n\nkeyAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (value) {\n        $set(this._data, attr, value);\n        return this;\n    };\n});\n\nconst objAttrs = ['col'];\n\nobjAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this._data, attr, extend(this._data[attr], opt));\n        return this;\n    };\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit', 'control'];\n\narrAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this._data, attr, this._data[attr].concat(opt));\n        return this;\n    };\n});\n","import Creator from '../factory/creator';\nimport {deepExtendArgs, isFunction, isString, isUndef} from '@form-create/utils';\n\nexport function toJson(obj) {\n    return JSON.stringify(obj, function (key, val) {\n        if (val instanceof Creator) {\n            return val.getRule();\n        }\n\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== 'function') {\n            return val;\n        }\n        if (val.__inject)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n\n        return '' + val;\n    });\n}\n\n\nexport function parseJson(json) {\n    return JSON.parse(json, function (k, v) {\n        if (isUndef(v)) return v;\n        if (v.indexOf && v.indexOf('function') > -1) {\n            try {\n                return eval('(function(){return ' + v + ' })()')\n            } catch (e) {\n                console.error(`[form-create]解析失败:${v}`);\n                return undefined;\n            }\n        }\n        return v;\n    });\n}\n\nexport function enumerable(value) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false\n    }\n}\n\nexport function copyRule(rule) {\n    return copyRules([rule])[0];\n}\n\nexport function copyRules(rules) {\n    return rules.map(rule => {\n        if (isString(rule)) return rule;\n        const isCreator = isFunction(rule.getRule);\n        const data = deepExtendArgs({}, (isCreator ? rule._data : rule));\n        if (isCreator) {\n            const creator = new Creator();\n            creator._data = data;\n            return creator;\n        } else\n            return data;\n    })\n}\n","import Creator, {creatorFactory} from './creator';\nimport {parseJson, enumerable} from '../core/util';\nimport {extend, isPlainObject, isString, isValidChildren} from '@form-create/utils';\n\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    let maker = {};\n\n    extend(maker, {\n        create,\n        createTmp\n    });\n    maker.template = createTmp;\n    maker.parse = parse;\n\n    return maker;\n}\n\nfunction parse(rule, toMaker = false) {\n    if (isString(rule)) rule = parseJson(rule);\n\n    if (rule instanceof Creator) return toMaker ? rule : rule.getRule();\n    if (isPlainObject(rule)) {\n        const maker = ruleToMaker(rule);\n        return toMaker ? maker : maker.getRule();\n    } else if (!Array.isArray(rule)) return rule;\n    else {\n        const rules = rule.map(r => parse(r, toMaker));\n        Object.defineProperties(rules, {\n            find: enumerable(findField),\n            model: enumerable(model)\n        });\n\n        return rules;\n    }\n}\n\nfunction findField(field, origin) {\n    let children = [];\n    for (let i in this) {\n        const rule = this[i] instanceof Creator ? this[i]._data : this[i];\n        if (rule.field === field) return origin === true ? rule : this[i];\n        if (isValidChildren(rule.children)) children = children.concat(rule.children);\n    }\n    if (children.length > 0) return findField.call(children, field);\n}\n\nfunction model(formData) {\n    Object.keys(formData).forEach(field => {\n        const rule = this.find(field, true);\n        if (rule) rule.value = formData[field];\n    });\n}\n\nfunction ruleToMaker(rule) {\n    const maker = new Creator();\n    Object.keys(rule).forEach(key => {\n        maker._data[key] = rule[key];\n    });\n    return maker;\n}\n","import {isFunction, isString, toString} from '@form-create/utils';\n\nfunction parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data;\n}\n\nfunction getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || []);\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        if (vm)\n            this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node;\n    }\n\n    static use(nodes) {\n        Object.keys(nodes).forEach((k) => {\n            VNode.prototype[toString(k).toLocaleLowerCase()] = VNode.prototype[k] = function (data, VNodeFn) {\n                return this.make(nodes[k], data, VNodeFn);\n            };\n        });\n    }\n}\n\nVNode.use({fragment: 'fcFragment'});\n","import VData from './vData';\nimport {toString, uniqueId} from '@form-create/utils';\nimport VNode from './vNode';\n\nexport default class BaseParser {\n\n    constructor(handle, rule, id) {\n        this.rule = rule;\n        this.vData = new VData;\n        this.vNode = new VNode();\n        this.id = id;\n        this.watch = [];\n        this.originType = rule.type;\n        this.type = toString(rule.type).toLocaleLowerCase();\n        this.isDef = true;\n        this.el = undefined;\n\n        if (!rule.field) {\n            this.field = '_def_' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n        this.name = rule.name;\n\n        this.key = 'key_' + id;\n        this.refName = '__' + this.field + this.id;\n        this.formItemRefName = 'fi' + this.refName;\n        this.root = [];\n        this.ctrlRule = null;\n        this.modelEvent = 'input';\n\n        this.update(handle);\n        this.init();\n    }\n\n    update(handle) {\n        this.$handle = handle;\n        this.$render = handle.$render;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.vNode.setVm(this.vm);\n        this.deleted = false;\n    }\n\n    init() {\n    }\n\n    toFormValue(value) {\n        return value\n    }\n\n    toValue(formValue) {\n        return formValue;\n    }\n}\n","import {_vue as Vue} from './index';\nimport {debounce, errMsg, isFunction, isString, isUndef, isValidChildren} from '@form-create/utils';\nimport VNode from '../factory/vNode';\nimport VData, {vdataField} from '../factory/vData';\n\n\nconst $de = debounce((fn) => fn(), 1);\n\nexport default class Render {\n    constructor(handle) {\n        this.$handle = handle;\n        this.fc = handle.fc;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.$form = handle.$form;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.cache = {};\n        this.renderList = {};\n    }\n\n    clearCache(parser, clear = true) {\n        if (!this.cache[parser.id]) return;\n        if (this.cacheStatus(parser))\n            this.$handle.refresh();\n        const parent = this.cache[parser.id].parent;\n        this.cache[parser.id] = null;\n        if (parent && clear)\n            this.clearCache(parent, clear);\n    }\n\n    clearCacheAll() {\n        this.cache = {};\n    }\n\n    setCache(parser, vnode, parent) {\n        this.cache[parser.id] = {\n            vnode,\n            use: false,\n            parent\n        };\n    }\n\n    cacheStatus(parser) {\n        return this.cache[parser.id] && (this.cache[parser.id].use === true || this.cache[parser.id].parent);\n    }\n\n    getCache(parser) {\n        const cache = this.cache[parser.id];\n        cache.use = true;\n        return cache.vnode;\n    }\n\n    initOrgChildren() {\n        const parsers = this.$handle.parsers;\n        this.orgChildren = Object.keys(parsers).reduce((initial, id) => {\n            const children = parsers[id].rule.children;\n            initial[id] = isValidChildren(children) ? [...children] : [];\n\n            return initial;\n        }, {});\n    }\n\n    run() {\n        if (!this.vm.isShow)\n            return;\n\n        this.$form.beforeRender();\n\n        const vn = this.$handle.sortList.map((id) => {\n            let parser = this.$handle.parsers[id];\n            if (parser.type === 'hidden') return;\n            return this.renderParser(parser);\n        }).filter((val) => val !== undefined);\n\n        return this.$form.render(vn);\n    }\n\n    setGlobalConfig(parser) {\n        if (!this.options.global) return;\n        const global = this.options.global;\n\n        if (global['*']) {\n            this.toData(parser, global['*']);\n        }\n        if (global[parser.type]) {\n            this.toData(parser, global[parser.type]);\n        } else if (global[parser.originType]) {\n            this.toData(parser, global[parser.originType]);\n        }\n    }\n\n    renderTemplate(parser) {\n        const {id, rule, key} = parser;\n        if (isUndef(Vue.compile)) {\n            console.error('使用的 Vue 版本不支持 compile' + errMsg());\n            return [];\n        }\n\n        if (!this.renderList[id]) {\n            let vm = rule.vm;\n            if (isUndef(rule.vm))\n                vm = new Vue;\n            else if (isFunction(rule.vm))\n                vm = rule.vm(this.$handle.getInjectData(rule));\n\n            this.renderList[id] = {\n                vm,\n                template: Vue.compile(rule.template)\n            };\n\n        }\n\n        const {vm, template} = this.renderList[id];\n\n        setTemplateProps(vm, parser, this.$handle.fCreateApi);\n\n        vm.$off('input');\n        vm.$on('input', (value) => {\n            this.onInput(parser, value);\n        });\n\n        const vn = template.render.call(vm);\n\n        if (isUndef(vn.data)) vn.data = {};\n        vn.key = key;\n        return vn;\n    }\n\n    renderParser(parser, parent) {\n        if (!this.cache[parser.id] || parser.type === 'template') {\n\n            parser.vData.get();\n            this.setGlobalConfig(parser);\n\n            let {type, rule} = parser, form = this.$form, vn;\n\n            if (type === 'template' && rule.template) {\n                vn = this.renderTemplate(parser);\n\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            } else if (!this.$handle.isNoVal(parser)) {\n                const children = this.renderChildren(parser);\n                vn = parser.render ? parser.render(children) : this.defaultRender(parser, children);\n            } else {\n                vn = this.defaultRender(parser, this.renderChildren(parser));\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            }\n            if (rule.native !== true)\n                vn = form.container(vn, parser);\n            this.setCache(parser, vn, parent);\n            return vn;\n        }\n\n        return this.getCache(parser);\n    }\n\n    toData(parser, data) {\n        vdataField.forEach((key) => {\n            if (data[key] !== undefined)\n                parser.vData[key](data[key]);\n        });\n\n        return parser.vData;\n    }\n\n    parserToData(parser) {\n        return this.toData(parser, parser.rule);\n    }\n\n    inputVData(parser, custom) {\n        const {refName, key} = parser;\n\n        this.parserToData(parser);\n\n        let data = parser.vData\n            .ref(refName).key('fc_item' + key).props('formCreate', this.$handle.fCreateApi)\n            .on('fc.subForm', (subForm) => this.$handle.addSubForm(parser, subForm));\n\n        if (!custom)\n            data.on(this.$handle.modelEvent(parser), (value) => {\n                this.onInput(parser, value);\n            }).props('value', this.$handle.getFormData(parser));\n\n        this.$form.inputVData && this.$form.inputVData(parser, custom);\n\n        return data;\n    }\n\n    onInput(parser, value) {\n        this.$handle.onInput(parser, value);\n    }\n\n    renderChildren(parser) {\n        const {children} = parser.rule, orgChildren = this.orgChildren[parser.id];\n\n        if (!isValidChildren(children)) {\n            orgChildren.forEach(child => {\n                if (!isString(child) && child.__fc__) {\n                    this.$handle.removeField(child.__fc__);\n                }\n            });\n            this.orgChildren[parser.id] = [];\n            return [];\n        }\n\n        this.orgChildren[parser.id].forEach(child => {\n            if (children.indexOf(child) === -1 && !isString(child) && child.__fc__) {\n                this.$handle.removeField(child.__fc__);\n            }\n        });\n\n        return children.map(child => {\n            if (isString(child)) return child;\n            if (child.__fc__) {\n                return this.renderParser(child.__fc__, parser);\n            }\n            if (child.type)\n                $de(() => this.$handle.reloadRule());\n        });\n\n    }\n\n    defaultRender(parser, children) {\n        const vdata = this.inputVData(parser);\n        if (this.vNode[parser.type])\n            return this.vNode[parser.type](vdata, children);\n        if (this.vNode[parser.originType])\n            return this.vNode[parser.originType](vdata, children);\n        return this.vNode.make(parser.originType, vdata, children);\n    }\n}\n\nfunction setTemplateProps(vm, parser, fApi) {\n    if (!vm.$props)\n        return;\n    const {rule} = parser;\n    const keys = Object.keys(vm.$props);\n    keys.forEach(key => {\n        if (rule.props[key] !== undefined)\n            vm.$props[key] = rule.props[key];\n    });\n\n    if (keys.indexOf('value') !== -1) {\n        vm.$props.value = parser.rule.value;\n    }\n    vm.$props.formCreate = fApi;\n}\n","import {$set, deepExtend, errMsg, isFunction, isPlainObject} from '@form-create/utils';\nimport {toJson} from './util';\n\n\nexport default function Api(h) {\n\n    function tidyFields(fields, all = false) {\n        if (!fields)\n            fields = all ? Object.keys(h.fieldList) : h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    return {\n        formData() {\n            const parsers = h.fieldList;\n\n            return Object.keys(parsers).reduce((initial, id) => {\n                const parser = parsers[id];\n                initial[parser.field] = deepExtend({}, {value: parser.rule.value}).value;\n                return initial;\n            }, {});\n        },\n        getValue(field) {\n            const parser = h.fieldList[field];\n            if (!parser) return;\n            return deepExtend({}, {value: parser.rule.value}).value;\n        },\n        setValue(field, value) {\n            let formData = field;\n            if (!isPlainObject(field))\n                formData = {[field]: value};\n            Object.keys(formData).forEach(key => {\n                const parser = h.fieldList[key];\n                if (!parser) return;\n                parser.rule.value = formData[key];\n            });\n        },\n        changeValue(field, value) {\n            this.setValue(field, value);\n        },\n        changeField(field, value) {\n            this.setValue(field, value);\n        },\n        removeField(field) {\n            let parser = h.getParser(field);\n            if (!parser)\n                return;\n            let index = parser.root.indexOf(parser.rule.__origin__);\n            if (index === -1)\n                return;\n            parser.root.splice(index, 1);\n            if (h.sortList.indexOf(parser.id) === -1)\n                this.reload();\n\n            return parser.rule.__origin__;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = h.sortList.length, rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                    index = parser.rule.children.length;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                    rules = parser.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = 0, rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                    rules = parser.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index, 0, rule);\n        },\n        hidden(hidden, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'hidden', !!hidden);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.hidden;\n        },\n        visibility(visibility, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'visibility', !!visibility);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        visibilityStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.visibility;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.vm.$set(parser.rule.props, 'disabled', !!disabled);\n            });\n        },\n        model() {\n            return Object.keys(h.trueData).reduce((initial, key) => {\n                initial[key] = h.trueData[key].rule;\n                return initial;\n            }, {});\n        },\n        component() {\n            return Object.keys(h.customData).reduce((initial, key) => {\n                initial[key] = h.customData[key].rule;\n                return initial;\n            }, {});\n        },\n        bind() {\n            let bind = {}, properties = {};\n            Object.keys(h.fieldList).forEach((field) => {\n                const parser = h.fieldList[field];\n                properties[field] = {\n                    get() {\n                        return parser.rule.value;\n                    },\n                    set(value) {\n                        parser.rule.value = value;\n                    },\n                    enumerable: true,\n                    configurable: true\n                };\n            });\n            Object.defineProperties(bind, properties);\n            return bind;\n        },\n        submitBtnProps: (props = {}) => {\n            h.vm._buttonProps(props);\n        },\n        resetBtnProps: (props = {}) => {\n            h.vm._resetProps(props);\n        },\n        set: (node, field, value) => {\n            h.vm.$set(node, field, value);\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            deepExtend(h.options, options);\n            this.refresh(true);\n        },\n        onSubmit(fn) {\n            this.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            const parser = h.getParser(field);\n            if (parser) {\n                h.$render.clearCache(parser, true);\n                h.refresh();\n            }\n        },\n        refresh: (clear) => {\n            if (clear)\n                h.$render.clearCacheAll();\n            h.refresh();\n        },\n        hideForm: (isShow) => {\n            h.vm.isShow = !isShow;\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule: (id, rule, cover) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                cover ? Object.keys(rule).forEach(key => {\n                    parser.rule[key] = rule[key];\n                }) : deepExtend(parser.rule, rule);\n                return parser.rule.__origin__;\n            }\n        },\n        getRule: (id) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                return parser.rule;\n            }\n        },\n        updateRules(rules, cover) {\n            Object.keys(rules).forEach(id => {\n                this.updateRule(id, rules[id], cover);\n            })\n        },\n        updateValidate(id, validate, merge) {\n            const parser = h.getParser(id);\n            if (parser) {\n                parser.rule.validate = merge ? parser.rule.validate.concat(validate) : validate;\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                this.updateValidate(id, validates[id], merge);\n            })\n        },\n        method(id, name) {\n            const el = this.el(id);\n            if (!el || !el[name])\n                throw new Error('方法不存在' + errMsg());\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        toJson() {\n            return toJson(this.rule);\n        },\n        on(...args) {\n            h.vm.$on(...args);\n        },\n        once(...args) {\n            h.vm.$once(...args);\n        },\n        off(...args) {\n            h.vm.$off(...args);\n        },\n        trigger(id, event, ...args) {\n            const el = this.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const parser = h.getParser(id);\n            if (parser) return parser.el;\n        },\n        validate(callback) {\n            let state = false;\n            let subForm = {\n                ...{\n                    ___this: {\n                        validate(call) {\n                            h.$form.validate((valid) => {\n                                call && call(valid);\n                            });\n                        }\n                    }\n                }, ...h.subForm\n            };\n            let keys = Object.keys(subForm), len = keys.length, subLen;\n\n            const validFn = (valid, field) => {\n                if (valid) {\n                    if (subLen > 1) subLen--;\n                    else if (len > 1) len--;\n                    else callback(true);\n                } else {\n                    if (!state) {\n                        callback(false);\n                        state = true;\n                    }\n                    field && this.clearValidateState(field, false);\n                }\n            };\n\n            keys.forEach(field => {\n                let sub = subForm[field];\n                if (Array.isArray(sub)) {\n                    subLen = sub.length;\n                    sub.forEach(form => {\n                        form.validate((v) => validFn(v, field))\n                    })\n                } else if (sub) {\n                    subLen = 1;\n                    sub.validate(validFn)\n                }\n\n            });\n\n        },\n        validateField: (field, callback) => {\n            if (!h.fieldList[field])\n                return;\n            h.$form.validateField(field, callback);\n        },\n        resetFields(fields) {\n            let parsers = h.fieldList;\n            tidyFields(fields, true).forEach(field => {\n                let parser = parsers[field];\n                if (!parser) return;\n\n                if (parser.type === 'hidden') return;\n                h.$form.resetField(parser);\n                h.refreshControl(parser);\n                h.$render.clearCache(parser, true);\n            });\n        },\n        submit(successFn, failFn) {\n            this.validate((valid) => {\n                if (valid) {\n                    let formData = this.formData();\n                    if (isFunction(successFn))\n                        successFn(formData, this);\n                    else {\n                        h.options.onSubmit && h.options.onSubmit(formData, this);\n                        h.fc.$emit('on-submit', formData, this);\n                    }\n                } else {\n                    failFn && failFn(this)\n                }\n            });\n        },\n        clearValidateState(fields, clearSub = true) {\n            tidyFields(fields).forEach(field => {\n                if (clearSub) this.clearSubValidateState(field);\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.$form.clearValidateState(parser);\n            });\n        },\n        clearSubValidateState(fields) {\n            tidyFields(fields).forEach(field => {\n                const subForm = h.subForm[field];\n                if (subForm) {\n                    if (Array.isArray(subForm)) {\n                        subForm.forEach(form => {\n                            form.clearValidateState();\n                        })\n                    } else if (subForm) {\n                        subForm.clearValidateState();\n                    }\n                }\n            })\n        },\n        getSubForm(field) {\n            return h.subForm[field];\n        },\n        btn: {\n            loading: (loading = true) => {\n                h.vm._buttonProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._buttonProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._buttonProps({show: !!isShow});\n            }\n        },\n        resetBtn: {\n            loading: (loading = true) => {\n                h.vm._resetProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._resetProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._resetProps({show: !!isShow});\n            }\n        },\n        closeModal: (field) => {\n            const parser = h.fieldList[field];\n            parser && parser.closeModel && parser.closeModel();\n        }\n    };\n}\n","import {\n    $del,\n    $set, deepExtend,\n    errMsg,\n    extend,\n    isString,\n    isUndef,\n    isValidChildren,\n    isPlainObject,\n    toLine,\n    toString,\n    uniqueId,\n    isFunction\n} from '@form-create/utils';\nimport BaseParser from '../factory/parser';\nimport Render from './render';\nimport Api from './api';\nimport {copyRule, enumerable} from './util';\n\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport default class Handle {\n\n    constructor(fc) {\n        const {vm, rules, options} = fc;\n\n        this.watching = false;\n        this.vm = vm;\n        this.fc = fc;\n        this.options = options;\n\n        this.validate = {};\n        this.formData = {};\n        this.subForm = {};\n\n        this.fCreateApi = undefined;\n\n        this.__init(rules);\n        this.$form = new fc.drive.formRender(this);\n        this.$render = new Render(this);\n\n        this.loadRule(this.rules, false);\n\n        this.$render.initOrgChildren();\n\n        this.$form.init();\n    }\n\n    __init(rules) {\n        this.fieldList = {};\n        this.trueData = {};\n        this.parsers = {};\n        this.customData = {};\n        this.sortList = [];\n        this.rules = rules;\n        this.origin = [...this.rules];\n        this.changeStatus = false;\n    }\n\n    modelEvent(parser) {\n        const modelList = this.fc.modelEvents;\n        return modelList[parser.type] || modelList[parser.originType] || parser.rule.model || parser.modelEvent;\n    }\n\n    loadRule(rules, child) {\n        rules.map((_rule, index) => {\n            if (child && isString(_rule)) return;\n\n            if (!_rule.type)\n                return console.error('未定义生成规则的 type 字段' + errMsg());\n\n            let parser;\n\n            if (_rule.__fc__) {\n                parser = _rule.__fc__;\n\n                //规则在其他 form-create 中使用,自动浅拷贝\n                if (!parser.deleted && (parser.vm !== this.vm || this.parsers[parser.id])) {\n                    _rule = copyRule(_rule);\n                    rules[index] = _rule;\n                    parser = this.createParser(this.parseRule(_rule));\n                } else {\n                    parser.update(this);\n                    let rule = parser.rule;\n                    this.parseOn(rule);\n                    this.parseProps(rule);\n                }\n            } else {\n                parser = this.createParser(this.parseRule(_rule));\n            }\n\n            let children = parser.rule.children, rule = parser.rule;\n            if (!this.notField(parser.field))\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            this.setParser(parser);\n\n            if (!_rule.__fc__) {\n                bindParser(_rule, parser);\n            }\n            if (isValidChildren(children)) {\n                this.loadRule(children, true);\n            }\n\n            if (!child) {\n                this.sortList.push(parser.id);\n            }\n\n            if (!this.isNoVal(parser))\n                Object.defineProperty(parser.rule, 'value', this.valueHandle(parser));\n\n            return parser;\n        }).filter(h => h).forEach(h => {\n            h.root = rules;\n        });\n    }\n\n    valueHandle(parser) {\n        return {\n            enumerable: true,\n            get: () => {\n                return parser.toValue(this.getFormData(parser));\n            },\n            set: (value) => {\n                if (this.isChange(parser, value)) {\n                    this.$render.clearCache(parser, true);\n                    this.setFormData(parser, parser.toFormValue(value));\n                    this.valueChange(parser, value);\n                    this.refresh();\n                }\n            }\n        };\n    }\n\n    createParser(rule) {\n        const id = '' + uniqueId(), parsers = this.fc.parsers, type = toString(rule.type).toLocaleLowerCase();\n\n        const Parser = (parsers[type]) ? parsers[type] : BaseParser;\n\n        return new Parser(this, rule, id);\n    }\n\n    parseRule(_rule) {\n        const def = defRule(), rule = getRule(_rule);\n\n        Object.defineProperties(rule, {\n            __origin__: enumerable(_rule)\n        });\n\n        Object.keys(def).forEach(k => {\n            if (isUndef(rule[k])) $set(rule, k, def[k]);\n        });\n\n        if (rule.field && this.options.formData[rule.field] !== undefined)\n            rule.value = this.options.formData[rule.field];\n\n        rule.options = parseArray(rule.options);\n        this.parseOn(rule);\n        this.parseProps(rule);\n\n        return rule;\n    }\n\n    parseOn(rule) {\n        this.parseInjectEvent(rule, rule.on || {});\n        if (!this.watching) {\n            this.margeEmit(rule);\n        }\n    }\n\n    margeEmit(rule) {\n        const emitEvent = this.parseEmit(rule);\n        if (Object.keys(emitEvent).length > 0) extend(rule.on, emitEvent);\n    }\n\n    parseProps(rule) {\n        this.parseInjectEvent(rule, rule.props || {});\n    }\n\n    parseInjectEvent(rule, on) {\n        if (this.options.injectEvent || rule.inject)\n            Object.keys(on).forEach(k => {\n                if (isFunction(on[k]))\n                    on[k] = this.inject(rule, on[k])\n            });\n        return on;\n    }\n\n    getInjectData(self, inject) {\n        const {option, rule} = this.vm.$options.propsData;\n        return {\n            $f: this.fCreateApi,\n            rule,\n            self: self.__origin__,\n            option,\n            inject: inject || rule.inject || {}\n        };\n    }\n\n    inject(self, _fn, inject) {\n        if (_fn.__inject) {\n            if (this.watching)\n                return _fn;\n            _fn = _fn.__origin;\n        }\n\n        const h = this;\n\n        const fn = function (...args) {\n            args.unshift(h.getInjectData(self, inject));\n            return _fn(...args);\n        };\n        fn.__inject = true;\n        fn.__origin = _fn;\n        return fn;\n    }\n\n    parseEmit(rule) {\n        let event = {}, {emit, emitPrefix, field, name} = rule;\n\n        if (!Array.isArray(emit)) return event;\n        const emitKey = emitPrefix ? emitPrefix : (field || name);\n        if (!emitKey) return event;\n\n        emit.forEach(config => {\n            let inject, eventName = config;\n            if (isPlainObject(config)) {\n                eventName = config.name;\n                inject = config.inject;\n            }\n            if (!eventName) return;\n\n            const fieldKey = toLine(`${emitKey}-${eventName}`).replace('_', '-');\n\n            const fn = (...arg) => {\n                this.vm.$emit(fieldKey, ...arg);\n            };\n            fn.__emit = true;\n            event[eventName] = (this.options.injectEvent || config.inject !== undefined) ? this.inject(rule, fn, inject) : fn;\n        });\n\n        return event;\n    }\n\n    run() {\n        if (this.vm.unique > 0)\n            return this.$render.run();\n        else {\n            this.vm.unique = 1;\n            return [];\n        }\n    }\n\n    setParser(parser) {\n        let {id, field, name, rule} = parser;\n        if (this.parsers[id])\n            return;\n        this.parsers[id] = parser;\n\n        if (name)\n            $set(this.customData, name, parser);\n\n        if (this.isNoVal(parser)) return;\n        this.fieldList[field] = parser;\n        $set(this.formData, field, parser.toFormValue(rule.value));\n        $set(this.validate, field, rule.validate || []);\n        $set(this.trueData, field, parser);\n    }\n\n    addSubForm(parser, subForm) {\n        this.subForm[parser.field] = subForm;\n    }\n\n    notField(field) {\n        return this.fieldList[field] === undefined;\n    }\n\n    isChange(parser, value) {\n        return JSON.stringify(parser.rule.value) !== JSON.stringify(value);\n    }\n\n    valueChange(parser) {\n        this.validateControl(parser);\n    }\n\n    onInput(parser, value) {\n        let val;\n        if (!this.isNoVal(parser) && this.isChange(parser, val = parser.toValue(value))) {\n            this.$render.clearCache(parser);\n            this.setFormData(parser, value);\n            this.changeStatus = true;\n            this.valueChange(parser);\n            this.vm.$emit('change', parser.field, val, this.fCreateApi);\n        }\n    }\n\n    getParser(id) {\n        if (this.fieldList[id])\n            return this.fieldList[id];\n        else if (this.customData[id])\n            return this.customData[id];\n        else if (this.parsers[id])\n            return this.parsers[id];\n    }\n\n    created() {\n        const vm = this.vm;\n\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'formData', this.formData);\n\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = Api(this);\n        this.fCreateApi.rule = this.rules;\n        this.fCreateApi.config = this.options;\n        if (this.fCreateApi.form) {\n            const form = this.fCreateApi.form;\n            Object.keys(form).forEach((field) => {\n                delete form[field];\n            })\n        } else {\n            Object.defineProperty(this.fCreateApi, 'form', {\n                value: {},\n                writable: false,\n                enumerable: true\n            });\n        }\n        Object.defineProperties(this.fCreateApi.form, Object.keys(this.fCreateApi.formData()).reduce((initial, field) => {\n            const parser = this.getParser(field);\n            const handle = this.valueHandle(parser);\n            handle.configurable = true;\n            initial[field] = handle;\n            return initial;\n        }, {}));\n    }\n\n    addParserWitch(parser) {\n        const vm = this.vm;\n\n        Object.keys(parser.rule).forEach((key) => {\n            if (['field', 'type', 'value', 'vm', 'template', 'name', 'config', 'control'].indexOf(key) !== -1 || parser.rule[key] === undefined) return;\n            try {\n                parser.watch.push(vm.$watch(() => parser.rule[key], (n, o) => {\n                    if (o === undefined) return;\n                    this.watching = true;\n                    if (key === 'validate')\n                        this.validate[parser.field] = n;\n                    else if (key === 'props')\n                        this.parseProps(parser.rule);\n                    else if (key === 'on')\n                        this.parseOn(parser.rule);\n                    else if (key === 'emit')\n                        this.margeEmit(parser.rule);\n\n                    this.$render.clearCache(parser);\n                    this.watching = false;\n                }, {deep: key !== 'children', immediate: true}));\n            } catch (e) {\n                //\n            }\n        });\n    }\n\n    refreshControl(parser) {\n        if (!this.isNoVal(parser) && parser.rule.control) {\n            this.validateControl(parser);\n        }\n    }\n\n\n    validateControl(parser) {\n        const controls = getControl(parser), len = controls.length, ctrlRule = parser.ctrlRule;\n        if (!len) return;\n        for (let i = 0; i < len; i++) {\n            const control = controls[i], validate = control.handle || (val => val === control.value);\n            if (validate(parser.rule.value)) {\n                if (ctrlRule) {\n                    if (ctrlRule.children === control.rule)\n                        return;\n                    else\n                        removeControl(parser);\n                }\n                const rule = {\n                    type: 'fcFragment',\n                    native: true,\n                    children: control.rule\n                };\n                parser.root.splice(parser.root.indexOf(parser.rule.__origin__) + 1, 0, rule);\n                parser.ctrlRule = rule;\n                this.vm.$emit('control', parser.rule.__origin__, this.fCreateApi);\n                this.refresh();\n                return;\n            }\n        }\n        if (ctrlRule) {\n            removeControl(parser);\n            this.vm.$emit('control', parser.rule.__origin__, this.fCreateApi);\n            this.refresh();\n        }\n    }\n\n    mountedParser() {\n        const vm = this.vm;\n        Object.keys(this.parsers).forEach((id) => {\n            let parser = this.parsers[id];\n            if (parser.watch.length === 0) this.addParserWitch(parser);\n            this.refreshControl(parser);\n            parser.el = vm.$refs[parser.refName] || {};\n\n            if (parser.defaultValue === undefined)\n                parser.defaultValue = deepExtend({}, {value: parser.rule.value}).value;\n\n            parser.mounted && parser.mounted();\n        });\n    }\n\n    mounted() {\n        const mounted = this.options.mounted;\n\n        this.mountedParser();\n\n        mounted && mounted(this.fCreateApi);\n        this.fc.$emit('mounted', this.fCreateApi);\n    }\n\n    reload() {\n        const onReload = this.options.onReload;\n\n        this.mountedParser();\n\n        onReload && onReload(this.fCreateApi);\n        this.fc.$emit('on-reload', this.fCreateApi);\n    }\n\n    removeField(parser, value) {\n        const {id, field} = parser, index = this.sortList.indexOf(id);\n\n        delParser(parser, value);\n        $del(this.parsers, id);\n\n        if (index !== -1) {\n            this.sortList.splice(index, 1);\n        }\n\n        if (!this.fieldList[field]) {\n            $del(this.validate, field);\n            $del(this.formData, field);\n            $del(this.customData, field);\n            $del(this.fieldList, field);\n            $del(this.trueData, field);\n        }\n\n        if (this.subForm[parser.field])\n            $del(this.subForm, field);\n\n        return parser;\n    }\n\n    refresh() {\n        this.vm._refresh();\n    }\n\n    reloadRule(rules) {\n        const vm = this.vm;\n        if (!rules) return this.reloadRule(this.rules);\n        if (!this.origin.length) this.fCreateApi.refresh();\n        this.origin = [...rules];\n\n        const parsers = {...this.parsers};\n        const formData = this.fCreateApi.formData();\n        this.__init(rules);\n        this.loadRule(rules, false);\n        Object.keys(parsers).filter(id => this.parsers[id] === undefined)\n            .forEach(id => this.removeField(parsers[id], formData[parsers[id].field]));\n        this.$render.initOrgChildren();\n        this.formData = {...this.formData};\n        this.created();\n\n        vm.$f = this.fCreateApi;\n        this.$render.clearCacheAll();\n        this.refresh();\n\n        vm.$nextTick(() => {\n            this.reload();\n        });\n\n    }\n\n    setFormData(parser, value) {\n        $set(this.formData, parser.field, value);\n    }\n\n    getFormData(parser) {\n        return this.formData[parser.field];\n    }\n\n    fields() {\n        return Object.keys(this.formData);\n    }\n\n    isNoVal(parser) {\n        return !parser.isDef;\n    }\n\n}\n\nexport function delParser(parser, value) {\n    if (parser.ctrlRule)\n        removeControl(parser);\n    parser.watch.forEach((unWatch) => unWatch());\n    parser.watch = [];\n    parser.deleted = true;\n    parser.root = [];\n    Object.defineProperty(parser.rule, 'value', {\n        value\n    });\n}\n\nfunction parseArray(validate) {\n    return Array.isArray(validate) ? validate : [];\n}\n\nfunction getControl(parser) {\n    const control = parser.rule.control || [];\n    if (isPlainObject(control)) return [control];\n    else return control;\n}\n\nfunction removeControl(parser) {\n    const index = parser.root.indexOf(parser.ctrlRule);\n    if (index !== -1)\n        parser.root.splice(index, 1);\n    parser.ctrlRule = null;\n}\n\n\nfunction defRule() {\n    return {\n        validate: [],\n        col: {},\n        emit: [],\n        props: {},\n        on: {},\n        options: [],\n        title: undefined,\n        value: null,\n        field: '',\n        name: undefined,\n        className: undefined\n    };\n}\n\nfunction bindParser(rule, parser) {\n    Object.defineProperties(rule, {\n        __field__: enumerable(parser.field),\n        __fc__: enumerable(parser)\n    });\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        children: Array\n    },\n    render(h, ctx) {\n        return ctx.children\n    }\n}\n","import {\n    $set,\n    deepExtend,\n    extend,\n    isBool,\n    isElement,\n    toString,\n    isPlainObject\n} from '@form-create/utils';\nimport $FormCreate from '../components/formCreate';\nimport {formCreateName} from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from './handle';\nimport {creatorFactory} from '../factory/creator';\nimport BaseParser from '../factory/parser';\nimport {parseJson, copyRule, copyRules} from './util';\nimport fragment from '../components/fragment';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nexport default function createFormCreate(drive) {\n\n    const components = {\n            [fragment.name]: fragment\n        }, parsers = {}, maker = makerFactory(), globalConfig = drive.getConfig(), data = {},\n        modelEvents = {};\n\n    function setParser(id, parser) {\n        id = toString(id);\n        parsers[id.toLocaleLowerCase()] = parser;\n        FormCreate.maker[id] = creatorFactory(id);\n    }\n\n    function setModel(id, model) {\n        modelEvents[id.toLocaleLowerCase()] = model;\n    }\n\n    function createParser() {\n        return class Parser extends BaseParser {\n        }\n    }\n\n    function component(id, component) {\n        id = toString(id);\n        const _id = id.toLocaleLowerCase();\n        if (_id === 'form-create' || _id === 'formcreate')\n            return get$FormCreate();\n        if (component === undefined)\n            return components[id];\n        else\n            components[id] = component;\n    }\n\n    function margeGlobal(config, _options) {\n        if (isBool(_options.submitBtn))\n            _options.submitBtn = {show: _options.submitBtn};\n\n        if (isBool(_options.resetBtn))\n            _options.resetBtn = {show: _options.resetBtn};\n\n        let options = deepExtend(config, _options);\n\n        $set(options, 'el', !options.el\n            ? window.document.body\n            : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n            ));\n\n        return options;\n    }\n\n    function get$FormCreate() {\n        return _vue.extend($FormCreate(FormCreate, components));\n    }\n\n\n    function bindAttr(formCreate) {\n        extend(formCreate, {\n            version: drive.version,\n            ui: drive.ui,\n            maker,\n            component,\n            setParser,\n            createParser,\n            data,\n            copyRule,\n            copyRules,\n            $form() {\n                return get$FormCreate();\n            },\n            parseJson(json) {\n                return parseJson(json);\n            }\n        });\n    }\n\n    function install(Vue, options) {\n        if (Vue._installedFormCreate === true) return;\n        Vue._installedFormCreate = true;\n\n        if (options && isPlainObject(options))\n            margeGlobal(globalConfig, options);\n\n        Vue.use(FormCreate);\n    }\n\n    function create(rules, option) {\n        const $vm = new _vue({\n            data() {\n                return {rule: rules, option: isElement(option) ? {el: option} : option};\n            },\n            render() {\n                return <form-create ref='fc' props={this.$data}/>\n            }\n        });\n        $vm.$mount();\n        return $vm;\n    }\n\n    class FormCreate {\n        constructor(rules, options = {}) {\n            this.fCreateApi = undefined;\n            this.drive = drive;\n            this.parsers = parsers;\n            this.modelEvents = modelEvents;\n            this.vm = undefined;\n            this.rules = Array.isArray(rules) ? rules : [];\n            this.options = margeGlobal(deepExtend({formData: {}}, globalConfig), options);\n        }\n\n        beforeCreate(vm) {\n            this.vm = vm;\n            this.handle = new Handle(this);\n        }\n\n        created() {\n            this.handle.created();\n        }\n\n        api() {\n            return this.handle.fCreateApi;\n        }\n\n        render() {\n            return this.handle.run();\n        }\n\n        mounted() {\n            this.handle.mounted();\n        }\n\n        $emit(eventName, ...params) {\n            if (this.$parent)\n                this.$parent.$emit(`fc:${eventName}`, ...params);\n\n            this.vm.$emit(eventName, ...params);\n        }\n\n        static create(rules, _opt = {}, parent) {\n\n            let $vm = create(rules, _opt);\n\n            const _this = $vm.$refs.fc.formCreate;\n            _this.parent = parent;\n            _this.options.el.appendChild($vm.$el);\n\n            return _this.handle.fCreateApi;\n        }\n\n        static install(Vue) {\n            const $formCreate = function (rules, opt = {}) {\n                return FormCreate.create(rules, opt, this);\n            };\n\n            bindAttr($formCreate);\n\n            Vue.prototype.$formCreate = $formCreate;\n\n            Vue.component(formCreateName, get$FormCreate());\n            Vue.component(fragment.name, _vue.extend(fragment));\n            _vue = Vue;\n        }\n\n        static init(rules, _opt = {}) {\n            let $vm = create(rules, _opt), formCreate = $vm.$refs.fc.formCreate;\n\n            return {\n                mount($el) {\n                    if ($el && isElement($el))\n                        formCreate.options.el = $el;\n                    formCreate.options.el.appendChild($vm.$el);\n                    return formCreate.handle.fCreateApi;\n                },\n                remove() {\n                    formCreate.options.el.removeChild($vm.$el);\n                },\n                destroy() {\n                    this.remove();\n                    $vm.$destroy();\n                },\n                $f: formCreate.handle.fCreateApi\n            };\n        }\n    }\n\n    bindAttr(FormCreate);\n\n\n    drive.components.forEach(component => {\n        FormCreate.component(component.name, component);\n    });\n\n    drive.parsers.forEach(({name, parser}) => {\n        FormCreate.setParser(name, parser);\n    });\n\n    Object.keys(drive.makers).forEach(name => {\n        FormCreate.maker[name] = drive.makers[name];\n    });\n\n    if (drive.modelEvents) {\n        Object.keys(drive.modelEvents).forEach((name) => setModel(name, drive.modelEvents[name]));\n    }\n\n    return {\n        FormCreate,\n        install\n    };\n}\n","import VData from './vData';\nimport VNode from './vNode';\nimport {deepExtendArgs, uniqueId} from '@form-create/utils';\n\n\nexport default class BaseForm {\n\n    constructor(handle) {\n        this.$handle = handle;\n        this.vm = handle.vm;\n        this.drive = this.$handle.fc.drive;\n        this.options = handle.options;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.unique = uniqueId();\n        this.refName = `cForm${this.unique}`;\n    }\n\n    getFormRef() {\n        return this.vm.$refs[this.refName];\n    }\n\n    init() {\n        this.$render = this.$handle.$render;\n    }\n\n    getGetCol(parser) {\n        let col = parser.rule.col || {}, mCol = {}, pCol = {}, global = this.options.global;\n\n        if (!global)\n            return col;\n\n        if (global['*']) {\n            mCol = global['*'].col || {};\n        }\n\n        if (global[parser.type]) {\n            pCol = global[parser.type].col || {};\n        } else if (global[parser.originType]) {\n            pCol = global[parser.originType].col || {};\n        }\n        col = deepExtendArgs({}, mCol, pCol, col);\n        return col;\n    }\n\n    beforeRender() {\n\n    }\n\n    render() {\n\n    }\n\n    inputVData() {\n    }\n}\n","import {VNode, Vue} from '@form-create/core';\nimport {isUndef} from '@form-create/utils';\n\nconst vNode = new VNode({});\nconst Modal = (options, cb) => {\n    if (isUndef(options.width)) options.width = '30%';\n    return {\n        name: 'fc-modal',\n        data() {\n            return {\n                visible: true,\n                ...options\n            }\n        },\n        render() {\n            vNode.setVm(this);\n            return vNode.modal({\n                props: this.$data,\n                on: {\n                    close: this.onClose,\n                    closed: this.onClosed,\n                }\n            }, [cb(vNode, this)])\n        },\n        methods: {\n            onClose() {\n                this.visible = false;\n            },\n            onClosed() {\n                this.$el.parentNode.removeChild(this.$el);\n            }\n        }\n    }\n};\n\nexport function mount(options, content) {\n    let $modal = Vue.extend(Modal(options, content)), $vm = new $modal().$mount();\n    window.document.body.appendChild($vm.$el);\n}\n\nexport function defaultOnHandle(src, title) {\n    mount({title}, (vNode) => {\n        return vNode.make('img', {\n            style: {width: '100%'},\n            attrs: {src}\n        })\n    });\n}\n\nexport default Modal;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import {defaultOnHandle, mount} from '../../core/modal';\nimport style from '../../style/index.css';\nimport {isUndef, toArray, uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-frame';\n\nexport default {\n    name: NAME,\n    props: {\n        type: {\n            type: String,\n            default: 'input'\n        },\n        field: {\n            type: String,\n            default: ''\n        },\n        helper: {\n            type: Boolean,\n            default: true\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        src: {\n            type: String,\n            required: true\n        },\n        icon: {\n            type: String,\n            default: 'el-icon-upload2'\n        },\n        width: {\n            type: String,\n            default: '500px'\n        },\n        height: {\n            type: String,\n            default: '370px'\n        },\n        maxLength: {\n            type: Number,\n            default: 0\n        },\n        okBtnText: {\n            type: String,\n            default: '确定'\n        },\n        closeBtnText: {\n            type: String,\n            default: '关闭'\n        },\n        modalTitle: {\n            type: String,\n            default: '预览'\n        },\n        handleIcon: {\n            type: [String, Boolean],\n            default: undefined\n        },\n        title: String,\n        allowRemove: {\n            type: Boolean,\n            default: true\n        },\n        onOpen: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onOk: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onCancel: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onLoad: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onBeforeRemove: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onRemove: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onHandle: {\n            type: Function,\n            default(src) {\n                defaultOnHandle(src, this.modalTitle)\n            }\n        },\n        modal: {\n            type: Object,\n            default: () => ({})\n        },\n        srcKey: {\n            type: [String, Number]\n        },\n        value: [Array, String, Number]\n\n    },\n    data() {\n        return {\n            modalVm: null,\n            fileList: toArray(this.value),\n            unique: uniqueId()\n        }\n    },\n    watch: {\n        value(n) {\n            this.fileList = toArray(n);\n        },\n        fileList(n) {\n            const val = this.maxLength === 1 ? (n[0] || '') : n;\n            this.$emit('input', val);\n            this.$emit('change', val);\n        },\n        src(n) {\n            this.modalVm && (this.modalVm.src = n);\n        }\n    },\n    methods: {\n        key(unique) {\n            return NAME + unique + this.unique;\n        },\n        closeModel() {\n            this.modalVm && this.modalVm.onClose();\n            this.modalVm = null;\n        },\n\n        showModel() {\n            if (this.disabled || false === this.onOpen()) return;\n\n            const {width, height, src, title, okBtnText, closeBtnText} = this.$props;\n\n            mount({width, title, src, ...this.modal}, (vNode, _vm) => {\n                this.modalVm = _vm;\n                return [vNode.make('iframe', {\n                    attrs: {\n                        src: _vm.src\n                    },\n                    style: {\n                        'height': height,\n                        'border': '0 none',\n                        'width': '100%'\n                    },\n                    on: {\n                        'load': (e) => {\n                            this.onLoad(e);\n\n                            try {\n                                if (this.helper === true) {\n                                    let iframe = e.path[0].contentWindow;\n\n                                    iframe['form_create_helper'] = {\n                                        close: (field) => {\n                                            this.valid(field);\n                                            _vm.onClose();\n                                        },\n                                        set: (field, value) => {\n                                            this.valid(field);\n                                            if (!this.disabled)\n                                                this.$emit('input', value);\n\n                                        },\n                                        get: (field) => {\n                                            this.valid(field);\n                                            return this.value;\n                                        }\n                                    };\n\n                                }\n                            } catch (e) {\n                                console.log(e);\n                            }\n                        }\n                    },\n                }), vNode.make('div', {slot: 'footer'}, [\n                    vNode.button({\n                        on: {\n                            click: () => {\n\n                                this.onCancel() !== false && _vm.onClose();\n                            }\n                        }\n                    }, [closeBtnText]),\n                    vNode.button({\n                        props: {type: 'primary'}, on: {\n                            click: () => {\n                                this.onOk() !== false && _vm.onClose();\n                            }\n                        }\n                    }, [okBtnText])\n                ])]\n            });\n        },\n\n        makeInput() {\n            const props = {\n                type: 'text',\n                value: (this.fileList.map(v => this.getSrc(v))).toString(),\n                readonly: true\n            };\n\n            return <ElInput props={props} key={this.key('input')}>\n                {this.fileList.length ? <i slot=\"suffix\" class=\"el-input__icon el-icon-circle-close\"\n                    on-click={() => this.fileList = []}/> : null}\n                <ElButton icon={this.icon} on={{'click': () => this.showModel()}} slot=\"append\"/>\n            </ElInput>\n        },\n\n        makeGroup(children) {\n            if (!this.maxLength || this.fileList.length < this.maxLength)\n                children.push(this.makeBtn());\n            return <div class={style['fc-upload']} key={this.key('group')}>{...children}</div>\n        },\n\n        makeItem(index, children) {\n            return <div class={style['fc-files']} key={this.key('file' + index)}>{...children}</div>;\n        },\n        valid(field) {\n            if (field !== this.field)\n                throw new Error('frame 无效的字段值');\n        },\n\n        makeIcons(val, index) {\n            if (this.handleIcon !== false || this.allowRemove === true) {\n                const icons = [];\n                if ((this.type !== 'file' && this.handleIcon !== false) || (this.type === 'file' && this.handleIcon))\n                    icons.push(this.makeHandleIcon(val, index));\n                if (this.allowRemove)\n                    icons.push(this.makeRemoveIcon(val, index));\n\n                return <div class={style['fc-upload-cover']} key={this.key('uc')}>{icons}</div>\n            }\n        },\n        makeHandleIcon(val, index) {\n            return <i\n                class={(this.handleIcon === true || this.handleIcon === undefined) ? 'el-icon-view' : this.handleIcon}\n                on-click={() => this.handleClick(val)} key={this.key('hi' + index)}/>\n        },\n\n        makeRemoveIcon(val, index) {\n            return <i class=\"el-icon-delete\" on-click={() => this.handleRemove(val)} key={this.key('ri' + index)}/>\n        },\n\n        makeFiles() {\n            return this.makeGroup(this.fileList.map((src, index) => {\n                return this.makeItem(index, [<i class=\"el-icon-tickets\"\n                    on-click={() => this.handleClick(src)}/>, this.makeIcons(src, index)])\n            }))\n        },\n        makeImages() {\n            return this.makeGroup(this.fileList.map((src, index) => {\n                return this.makeItem(index, [<img src={this.getSrc(src)}/>, this.makeIcons(src, index)])\n            }))\n        },\n        makeBtn() {\n            return <div class={style['fc-upload-btn']} on-click={() => this.showModel()} key={this.key('btn')}>\n                <i class={this.icon}/>\n            </div>\n        },\n        handleClick(src) {\n            if (this.disabled) return;\n            return this.onHandle(src);\n        },\n        handleRemove(src) {\n            if (this.disabled) return;\n            if (false !== this.onBeforeRemove(src)) {\n                this.fileList.splice(this.fileList.indexOf(src), 1);\n                this.onRemove(src);\n            }\n        },\n        getSrc(src) {\n            return isUndef(this.srcKey) ? src : src[this.srcKey];\n        }\n    },\n    render() {\n        const type = this.type;\n\n        if (type === 'input')\n            return this.makeInput();\n        else if (type === 'image')\n            return this.makeImages();\n        else\n            return this.makeFiles();\n    }\n}\n","import {uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-radio';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        options: {\n            type: Array,\n            default: () => ([])\n        },\n        type: String,\n        unique: {\n            default: () => uniqueId()\n        },\n    },\n    render(h, ctx) {\n        return <ElRadioGroup {...ctx.data}>{ctx.props.options.map((opt, index) => {\n            const props = {...opt};\n            const Type = ctx.props.type === 'button' ? 'ElRadioButton' : 'ElRadio';\n            delete props.value;\n            return <Type {...{props}} key={NAME + Type + index + ctx.unique}/>;\n        }).concat(ctx.chlidren)}</ElRadioGroup>\n    }\n}\n","import {toDefSlot, uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-select';\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        options: {\n            type: Array,\n            default: () => ([])\n        },\n        unique: {\n            default: () => uniqueId()\n        },\n    },\n    render(h, ctx) {\n        return <ElSelect {...ctx.data}>{ctx.props.options.map((props, index) => {\n\n            const slot = props.slot ? toDefSlot(props.slot, h) : [];\n\n            return <ElOption {...{props}}\n                key={NAME + index + ctx.props.unique}>{slot}</ElOption>\n        }).concat(ctx.chlidren)}</ElSelect>;\n    }\n}","import {toArray} from '@form-create/utils';\n\n\nexport default {\n    name: 'fc-elm-tree',\n    props: {\n        ctx: {\n            type: Object,\n            default: () => ({props: {}})\n        },\n        children: {\n            type: Array,\n            default: () => ([])\n        },\n        type: {\n            type: String,\n            default: 'checked'\n        },\n        value: {\n            type: [Array, String, Number],\n            default: () => ([])\n        }\n    },\n    watch: {\n        value() {\n            this.setValue();\n        }\n    },\n    methods: {\n        makeTree() {\n            return <ElTree ref=\"tree\" on-check-change={() => this.updateValue()}\n                on-node-click={() => this.updateValue()} {...this.ctx}>{this.children}</ElTree>;\n        },\n        onChange() {\n            this.updateValue()\n        },\n\n        updateValue() {\n            const type = (this.type).toLocaleLowerCase();\n            let value;\n\n            if (type === 'selected')\n                value = this.$refs.tree.getCurrentKey();\n            else\n                value = this.$refs.tree.getCheckedKeys();\n\n            this.$emit('input', value);\n        },\n        setValue() {\n            const type = (this.type).toLocaleLowerCase();\n\n            if (type === 'selected')\n                this.$refs.tree.setCurrentKey(this.value);\n            else\n                this.$refs.tree.setCheckedKeys(toArray(this.value));\n        }\n    },\n    render() {\n        return this.makeTree();\n    },\n    mounted() {\n        this.setValue();\n        this.updateValue();\n    }\n}","import {hasSlot, toArray, toString, uniqueId} from '@form-create/utils';\nimport {defaultOnHandle} from '../../core/modal';\nimport style from '../../style/index.css';\n\nfunction parseFile(file) {\n    return {\n        url: file,\n        name: getFileName(file)\n    };\n}\n\nfunction getFileName(file) {\n    return toString(file).split('/').pop()\n}\n\nconst NAME = 'fc-elm-upload';\n\nexport default {\n    name: NAME,\n\n    props: {\n        ctx: {\n            type: Object,\n            default: () => ({props: {}})\n        },\n        children: {\n            type: Array,\n            default: () => ([])\n        },\n        onHandle: {\n            type: Function,\n            default(file) {\n                defaultOnHandle(file.url, this.modalTitle)\n            }\n        },\n        uploadType: {\n            type: String,\n            default: 'file'\n        },\n        maxLength: {\n            type: Number,\n            default: 0\n        },\n        allowRemove: {\n            type: Boolean,\n            default: true\n        },\n        modalTitle: {\n            type: String,\n            default: '预览'\n        },\n        handleIcon: [String, Boolean],\n        value: [Array, String]\n    },\n    data() {\n        return {\n            uploadList: [],\n            unique: uniqueId()\n        }\n    },\n    created() {\n        if (this.ctx.props.showFileList === undefined)\n            this.ctx.props.showFileList = false;\n        this.ctx.props.fileList = toArray(this.value).map(parseFile);\n    },\n    watch: {\n        value(n) {\n            if (this.$refs.upload.uploadFiles.every(file => {\n                return !file.status || file.status === 'success';\n            })) {\n                this.$refs.upload.uploadFiles = toArray(n).map(parseFile);\n                this.uploadList = this.$refs.upload.uploadFiles;\n            }\n        },\n        maxLength(n, o) {\n            if (o === 1 || n === 1)\n                this.update();\n        }\n    },\n    methods: {\n        key(unique) {\n            return NAME + unique + this.unique;\n        },\n        isDisabled() {\n            return this.ctx.props.disabled === true;\n        },\n        onRemove(file) {\n            if (this.isDisabled()) return;\n            this.$refs.upload.handleRemove(file);\n        },\n        handleClick(file) {\n            if (this.isDisabled()) return;\n            this.onHandle(file);\n        },\n\n        makeDefaultBtn() {\n            return <div class={style['fc-upload-btn']}>\n                <i class=\"el-icon-upload2\"/>\n            </div>\n        },\n        makeItem(file, index) {\n            return this.uploadType === 'image'\n                ? <img src={file.url} key={this.key('img' + index)}/>\n                : <i class=\"el-icon-tickets\" key={this.key('i' + index)}/>\n        },\n        makeRemoveIcon(file, index) {\n            return <i class=\"el-icon-delete\" on-click={() => this.onRemove(file)} key={this.key('ri' + index)}/>;\n        },\n        makeHandleIcon(file, index) {\n            return <i\n                class={(this.handleIcon === true || this.handleIcon === undefined) ? 'el-icon-view' : this.handleIcon}\n                on-click={() => this.handleClick(file)} key={this.key('hi' + index)}/>;\n        },\n        makeProgress(file, index) {\n            return <ElProgress props={{percentage: file.percentage, type: 'circle', width: 52}} style=\"margin-top:2px;\"\n                key={this.key('pg' + index)}/>\n        },\n        makeIcons(file, index) {\n            const icons = [];\n            if (this.allowRemove || this.handleIcon !== false) {\n                if ((this.uploadType !== 'file' && this.handleIcon !== false) || (this.uploadType === 'file' && this.handleIcon))\n                    icons.push(this.makeHandleIcon(file, index));\n                if (this.allowRemove)\n                    icons.push(this.makeRemoveIcon(file, index));\n\n                return <div class={style['fc-upload-cover']}>{icons}</div>;\n            }\n        },\n        makeFiles() {\n            return this.uploadList.map((file, index) => <div key={this.key(index)}\n                class={style['fc-files']}>{(file.percentage !== undefined && file.status !== 'success') ? this.makeProgress(file, index) : [this.makeItem(file, index), this.makeIcons(file, index)]}</div>);\n        },\n        makeUpload() {\n            return <ElUpload ref=\"upload\"\n                style={{display: 'inline-block'}} {...this.ctx}\n                key={this.key('upload')}>{this.children}</ElUpload>;\n        },\n        initChildren() {\n            if (!hasSlot(this.children, 'default'))\n                this.children.push(this.makeDefaultBtn());\n        },\n        update() {\n            let files = this.$refs.upload.uploadFiles.map((file) => file.url).filter((url) => url !== undefined);\n            this.$emit('input', this.maxLength === 1 ? (files[0] || '') : files);\n        }\n    },\n    render() {\n        const isShow = (!this.maxLength || this.maxLength > this.uploadList.length);\n\n        if (this.$refs.upload) {\n            if (this.ctx.props.showFileList === undefined)\n                this.ctx.props.showFileList = this.$refs.upload.showFileList;\n            this.ctx.props.fileList = this.$refs.upload.fileList;\n        }\n\n        this.initChildren();\n\n        return (\n            <div class={{\n                [style['fc-upload']]: true,\n                [style['fc-hide-btn']]: !isShow\n            }}>{[this.ctx.props.showFileList ? [] : this.makeFiles(), this.makeUpload()]}</div>);\n    },\n    mounted() {\n        this.uploadList = this.$refs.upload.uploadFiles;\n        this.$watch(() => this.$refs.upload.uploadFiles, () => {\n            this.update();\n        }, {deep: true});\n    }\n}","import {copyRules} from '@form-create/core';\n\nconst NAME = 'fc-elm-group';\n\nexport default {\n    name: NAME,\n    props: {\n        rule: Object,\n        rules: Array,\n        max: {\n            type: Number,\n            default: 0\n        },\n        min: {\n            type: Number,\n            default: 0\n        },\n        value: {\n            type: Array,\n            default: () => []\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            config: {\n                submitBtn: false,\n                resetBtn: false\n            },\n            len: 0,\n            cacheRule: {},\n            group$f: {},\n            fieldRule: {}\n        }\n    },\n    computed: {\n        formRule() {\n            if (this.rule) return [this.rule];\n            else if (this.rules) return this.rules;\n            return [];\n        },\n        formData() {\n            return Object.keys(this.fieldRule).map(key => {\n                const keys = Object.keys(this.fieldRule[key]);\n                return this.rule ? keys[0] === undefined ? null : this.fieldRule[key][keys[0]].value : keys.reduce((initial, field) => {\n                    initial[field] = this.fieldRule[key][field].value;\n                    return initial;\n                }, {});\n            })\n        }\n    },\n    watch: {\n        disabled(n) {\n            const lst = this.group$f;\n            Object.keys(lst).forEach(k => {\n                lst[k].disabled(n);\n            })\n        },\n        formData(n) {\n            this.$emit('input', n);\n            this.$emit('change', n);\n        },\n        value(n) {\n            let keys = Object.keys(this.cacheRule), total = keys.length, len = total - n.length;\n            if (len < 0) {\n                for (let i = len; i < 0; i++) {\n                    this.addRule();\n                }\n                for (let i = 0; i < total; i++) {\n                    this.setValue(this.group$f[keys[i]], n[i]);\n                }\n            } else {\n                if (len > 0) {\n                    for (let i = 0; i < len; i++) {\n                        this.removeRule(keys[total - i - 1]);\n                    }\n                    this.subForm();\n                }\n\n                n.forEach((val, i) => {\n                    this.setValue(this.group$f[keys[i]], n[i]);\n                });\n            }\n        }\n    },\n    methods: {\n        setValue($f, value) {\n            if (this.rule) {\n                const fields = $f.fields();\n                if (!fields[0]) return;\n                $f.setValue(fields[0], value);\n            } else {\n                $f.setValue(value);\n            }\n        },\n        addRule(emit) {\n            const rule = this.copyRule();\n            this.$set(this.cacheRule, ++this.len, rule);\n            if (emit)\n                this.$emit('add', rule, Object.keys(this.cacheRule).length - 1);\n        },\n        add$f(i, key, $f) {\n            this.group$f[key] = $f;\n            this.setValue($f, this.value[i]);\n            this.syncData(key, $f);\n            this.subForm();\n            this.$emit('itemMounted', $f, Object.keys(this.cacheRule).indexOf(key));\n        },\n        subForm() {\n            this.$emit('fc.subForm', Object.keys(this.group$f).map(k => this.group$f[k]));\n        },\n        syncData(key, $f) {\n            this.$set(this.fieldRule, key, {});\n            $f.fields().forEach(field => {\n                this.fieldRule[key][field] = $f.getRule(field);\n            });\n        },\n        removeRule(key, emit) {\n            const index = Object.keys(this.cacheRule).indexOf(key);\n            this.$delete(this.cacheRule, key);\n            this.$delete(this.fieldRule, key);\n            this.$delete(this.group$f, key);\n            if (emit)\n                this.$emit('remove', index);\n        },\n        copyRule() {\n            return copyRules(this.formRule);\n        },\n        addIcon(key) {\n            return <i key={`a${key}`} class=\"el-icon-circle-plus-outline\"\n                style={`font-size:28px;cursor:${this.disabled ? 'not-allowed;color:#c9cdd4' : 'pointer'};`}\n                on-click={() => (!this.disabled) && this.addRule(true)}/>;\n        },\n        delIcon(key) {\n            return <i key={`d${key}`} class=\"el-icon-remove-outline\"\n                style={`font-size:28px;cursor:${this.disabled ? 'not-allowed;color:#c9cdd4' : 'pointer;color:#606266'};`}\n                on-click={() => {\n                    if (this.disabled) return;\n                    this.removeRule(key, true);\n                    this.subForm();\n                }}/>;\n        },\n        makeIcon(total, index, key) {\n            if (index === 0) {\n                return [(this.max !== 0 && total >= this.max) ? null : this.addIcon(key), (this.min === 0 || total > this.min) ? this.delIcon(key) : null];\n            } else if (index >= this.min) {\n                return this.delIcon(key);\n            }\n        }\n    },\n    created() {\n        for (let i = 0; i < this.value.length; i++) {\n            this.addRule();\n        }\n\n    },\n    render() {\n        const keys = Object.keys(this.cacheRule);\n        return keys.length === 0 ?\n            <i key={'a_def'} class=\"el-icon-circle-plus-outline\"\n                style={`font-size:28px;vertical-align:middle;color:${this.disabled ? '#c9cdd4;cursor: not-allowed' : '#606266;cursor:pointer'};`}\n                on-click={() => (!this.disabled) && this.addRule(true)}/> :\n            <div key={'con'}>{keys.map((key, index) => {\n                const rule = this.cacheRule[key];\n                return <ElRow align=\"middle\" type=\"flex\" key={key}\n                    style=\"background-color:#f5f7fa;padding:10px;border-radius:5px;margin-bottom:10px;\">\n                    <ElCol span={20}><ElFormItem><FormCreate\n                        on-mounted={($f) => this.add$f(index, key, $f)}\n                        on-on-reload={($f) => this.syncData(key, $f)} rule={rule}\n                        option={this.config}/></ElFormItem></ElCol>\n                    <ElCol span={2} pull={1} push={1}>{this.makeIcon(keys.length, index, key)}</ElCol></ElRow>\n            })}</div>\n    }\n}\n","import checkbox from './checkbox';\nimport frame from './frame';\nimport radio from './radio';\nimport select from './select';\nimport tree from './tree';\nimport upload from './upload';\nimport group from './group';\n\n\nexport default [\n    checkbox,\n    frame,\n    radio,\n    select,\n    tree,\n    upload,\n    group\n]\n","import {BaseParser} from '@form-create/core';\n\nexport default class parser extends BaseParser {\n\n    render(children) {\n        const data = this.$render.inputVData(this, true).get();\n        return this.vNode.checkbox({\n            props: {\n                ctx: data,\n                type: data.props.type,\n                options: this.rule.options,\n                value: this.$handle.getFormData(this),\n                children\n            },\n            on: {\n                input: (n) => {\n                    this.$render.onInput(this, n);\n                }\n            }\n        });\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'checkbox';\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {timeStampToDate} from '@form-create/utils';\n\nexport default class Parser extends BaseParser {\n\n    toFormValue(value) {\n        let isArr = Array.isArray(value), props = this.rule.props, parseValue, type = props.type || 'date';\n        if (['daterange', 'datetimerange', 'dates'].indexOf(type) !== -1) {\n            if (isArr) {\n                parseValue = value.map((time) => !time ? '' : timeStampToDate(time));\n            } else {\n                parseValue = ['', '']\n            }\n        } else if ('date' === type && props.multiple === true) {\n            parseValue = toString(value);\n        } else {\n            parseValue = isArr ? (value[0] || '') : value;\n            parseValue = !parseValue ? '' : timeStampToDate(parseValue);\n        }\n        return parseValue;\n    }\n\n    mounted() {\n        this.toValue = (val) => (this.el.formatToString(val) || '');\n        this.toFormValue = (val) => this.el.parseString(val);\n    }\n}\n","import parser from './parser';\n\nconst name = 'datePicker';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        const data = this.$render.inputVData(this).props('field', this.field);\n\n        return this.vNode.frame(data, children);\n    }\n\n    closeModel() {\n        this.el.closeModel && this.el.closeModel();\n    }\n\n}\n","import parser from './parser';\n\nconst name = 'frame';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nconst name = 'hidden';\n\nclass parser extends BaseParser {\n    render() {\n        return [];\n    }\n}\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {$set} from '@form-create/utils';\n\n\nexport default class Parser extends BaseParser {\n    init() {\n        let {props} = this.rule;\n        if (props.autosize && props.autosize.minRows)\n            $set(props, 'rows', props.autosize.minRows || 2);\n    }\n}\n","import parser from './parser';\n\nconst name = 'input';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nexport default class Parser extends BaseParser {\n    toFormValue(value) {\n        return this.rule.options.filter((opt) => opt.value === value).reduce((initial, opt) => opt.label, '')\n    }\n\n    toValue(parseValue) {\n        return this.rule.options.filter((opt) => opt.label === parseValue).reduce((initial, opt) => opt.value, '')\n    }\n\n    render(children) {\n        return this.vNode.radio(this.$render.inputVData(this).props({\n            'options': this.rule.options,\n        }), children);\n    }\n\n}","import parser from './parser';\n\nconst name = 'radio';\n\nexport default {parser, name};","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        return this.vNode.select(this.$render.inputVData(this).props('options', this.rule.options), children);\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'select';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n    toFormValue(value) {\n        let rule = this.rule, isArr = Array.isArray(value), props = rule.props, min = props.min || 0,\n            parseValue;\n        if (props.range === true) {\n            parseValue = isArr ? value : [min, (parseFloat(value) || min)];\n        } else {\n            parseValue = isArr ? (parseFloat(value[0]) || min) : parseFloat(value);\n        }\n        return parseValue;\n    }\n\n}\n","import parser from './parser';\n\nconst name = 'slider';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nexport default class parser extends BaseParser {\n    render(children) {\n        return this.vNode.switch(this.$render.inputVData(this).get(), children);\n    }\n}\n","import parser from './parser';\n\nconst name = 'switch';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {dateFormat, isDate, timeStampToDate} from '@form-create/utils';\n\n\nexport function getTime(date) {\n    return isDate(date)\n        ? dateFormat('hh:mm:ss', date)\n        : date;\n}\n\nexport function toDate(time) {\n    return new Date('2018/02/14 ' + time);\n}\n\nexport default class Parser extends BaseParser {\n\n    toFormValue(value) {\n        let parseValue, isArr = Array.isArray(value);\n        if (this.rule.props.isRange === true) {\n            if (isArr) {\n                parseValue = value.map((time) => !time ? '' : toDate(getTime(timeStampToDate(time)))).filter(n => !!n);\n                if (parseValue.length !== 2) parseValue = null;\n            } else {\n                parseValue = null;\n            }\n        } else {\n            isArr && (value = value[0]);\n            parseValue = !value ? null : toDate(getTime(timeStampToDate(value)));\n        }\n        return parseValue;\n    }\n\n    mounted() {\n        this.toValue = (val) => this.el.formatToString(val);\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'timePicker';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {isUndef, $set} from '@form-create/utils';\n\nexport default class Parser extends BaseParser {\n\n    init() {\n        const props = this.rule.props;\n        if (isUndef(props.nodeKey)) $set(props, 'nodeKey', 'id');\n        if (isUndef(props.props)) $set(props, 'props', {\n            label: 'title'\n        });\n    }\n\n    render(children) {\n        const data = this.$render.parserToData(this).get();\n        return this.vNode.tree({\n            props: {\n                ctx: data,\n                children,\n                value: this.$handle.getFormData(this),\n                type: data.props.type\n            },\n            ref: this.refName,\n            key: this.key,\n            on: {\n                input: (value) => {\n                    this.$render.onInput(this, value);\n                }\n            }\n        });\n    }\n}\n","import parser from './parser';\n\nconst name = 'tree';\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n\n        const ctx = this.$render.parserToData(this).get();\n        const {key, refName} = this;\n        delete ctx.props.fileList;\n        const props = {\n            uploadType: ctx.props.uploadType,\n            maxLength: ctx.props.limit,\n            modalTitle: ctx.props.modalTitle,\n            handleIcon: ctx.props.handleIcon,\n            onHandle: ctx.props.onHandle,\n            allowRemove: ctx.props.allowRemove,\n            value: this.$handle.getFormData(this),\n            ctx,\n            children\n        };\n        return this.vNode.upload({\n            props,\n            key,\n            ref: refName,\n            on: {\n                input: (n) => {\n                    this.$render.onInput(this, n);\n                }\n            }\n        });\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'upload';\n\n\nexport default {parser, name};\n","import checkbox from './checkbox';\nimport datePicker from './datePicker';\nimport frame from './frame';\nimport hidden from './hidden';\nimport input from './input';\nimport radio from './radio';\nimport select from './select';\nimport slider from './slider';\nimport iswitch from './switch';\nimport timePicker from './timePicker';\nimport tree from './tree';\nimport upload from './upload';\n\nexport default [\n    checkbox,\n    datePicker,\n    frame,\n    hidden,\n    input,\n    radio,\n    select,\n    slider,\n    iswitch,\n    timePicker,\n    tree,\n    upload\n]","export default function getConfig() {\n    return {\n        form: {\n            inline: false,\n            labelPosition: 'right',\n            labelSuffix: undefined,\n            hideRequiredAsterisk: false,\n            labelWidth: '125px',\n            showMessage: true,\n            inlineMessage: false,\n            statusIcon: false,\n            validateOnRuleChange: true,\n            disabled: false,\n            size: undefined,\n        },\n        row: {\n            gutter: 0,\n            type: undefined,\n            align: undefined,\n            justify: undefined,\n            tag: 'div'\n        },\n        info: {\n            type: 'popover',\n            trigger: 'hover',\n            placement: 'top-start',\n            icon: 'el-icon-warning'\n        },\n        submitBtn: {\n            type: 'primary',\n            size: 'medium',\n            plain: false,\n            round: false,\n            circle: false,\n            loading: false,\n            disabled: false,\n            icon: 'el-icon-upload',\n            width: '100%',\n            autofocus: false,\n            nativeType: 'button',\n            innerText: '提交',\n            show: true,\n            col: undefined,\n            click: undefined,\n        },\n        resetBtn: {\n            type: 'default',\n            size: 'medium',\n            plain: false,\n            round: false,\n            circle: false,\n            loading: false,\n            disabled: false,\n            icon: 'el-icon-refresh',\n            width: '100%',\n            autofocus: false,\n            nativeType: 'button',\n            innerText: '重置',\n            show: false,\n            col: undefined,\n            click: undefined,\n        },\n    };\n}\n","export default {\n    modal: 'el-dialog',\n    button: 'el-button',\n    icon: 'i',\n    slider: 'el-slider',\n    rate: 'el-rate',\n    upload: 'fc-elm-upload',\n    cascader: 'el-cascader',\n    colorPicker: 'el-color-picker',\n    timePicker: 'el-time-picker',\n    datePicker: 'el-date-picker',\n    'switch': 'el-switch',\n    select: 'fc-elm-select',\n    checkbox: 'fc-elm-checkbox',\n    radio: 'fc-elm-radio',\n    inputNumber: 'el-input-number',\n    input: 'el-input',\n    formItem: 'el-form-Item',\n    form: 'el-form',\n    frame: 'fc-elm-frame',\n    col: 'el-col',\n    row: 'el-row',\n    tree: 'fc-elm-tree',\n    autoComplete: 'el-autocomplete',\n    group: 'fc-elm-group',\n}\n","import {isFunction, preventDefault, toString, isString, isType} from '@form-create/utils';\nimport {BaseForm} from '@form-create/core';\nimport style from '../style/index.css';\n\nconst upperCaseReg = /[A-Z]/;\n\nexport function isAttr(name, value) {\n    return (!upperCaseReg.test(name) && (isString(value) || isType(value, 'Number')))\n}\n\nfunction isTooltip(info) {\n    return info.type === 'tooltip';\n}\n\nexport default class Form extends BaseForm {\n\n    inputVData(parser) {\n        const props = parser.rule.props || {};\n        parser.vData.attrs(Object.keys(props).reduce((initial, val) => {\n            if (isAttr(val, props[val]))\n                initial[val] = props[val];\n            return initial;\n        }, {}));\n        if (!props.size && this.options.form.size)\n            parser.vData.props('size', this.options.form.size);\n    }\n\n    validate(call) {\n        this.getFormRef().validate((valid) => {\n            call && call(valid);\n        });\n    }\n\n    validateField(field, call) {\n        this.getFormRef().validateField(field, call);\n    }\n\n    resetField(parser) {\n        this.vm.$refs[parser.formItemRefName].resetField();\n    }\n\n    clearValidateState(parser) {\n        const fItem = this.vm.$refs[parser.formItemRefName];\n        if (fItem) {\n            fItem.validateMessage = '';\n            fItem.validateState = '';\n        }\n    }\n\n    beforeRender() {\n        this.propsData = this.vData.props(this.options.form).props({\n            model: this.$handle.formData,\n            rules: this.$handle.validate,\n            key: 'form' + this.unique\n        }).ref(this.refName).nativeOn({submit: preventDefault}).class(this.options.form.className).class('form-create', true).key(this.unique).get();\n    }\n\n    render(vn) {\n        if (vn.length > 0)\n            vn.push(this.makeFormBtn());\n\n        return this.vNode.form(this.propsData, [this.options.row === false ? vn : this.makeRow(vn)]);\n    }\n\n    makeRow(vn) {\n        const _class = {}, row = this.options.row || {};\n\n        if (row.class) _class[row.class] = true;\n        return this.vNode.row({props: row || {}, key: 'fr' + this.unique, class: _class}, vn)\n    }\n\n    container(child, parser) {\n        return this.makeFormItem(parser, child);\n    }\n\n    makeFormItem(parser, child) {\n        let fItemUnique = `fItem${parser.key}${this.unique}`,\n            {rule, field, formItemRefName} = parser,\n            col = this.getGetCol(parser),\n            labelWidth = (!col.labelWidth && !rule.title) ? 0 : col.labelWidth, {inline, col: _col} = this.propsData.props,\n            propsData = this.vData.props({\n                prop: field,\n                // label: rule.title,\n                // labelFor: unique,\n                rules: rule.validate,\n                labelWidth: toString(labelWidth),\n                required: rule.props.required\n            }).key(fItemUnique).ref(formItemRefName).class(rule.className).get(),\n            node = this.vNode.formItem(propsData, [child, this.makeFormPop(parser, fItemUnique)]);\n        return (inline === true || _col === false) ? node : this.makeCol(col, parser, fItemUnique, [node]);\n    }\n\n    makeFormPop({rule}, unique) {\n        if (rule.title) {\n            const info = this.options.info || {}, svn = [rule.title];\n            if (rule.info) {\n                svn.push(this.vNode.make(isTooltip(info) ? 'el-tooltip' : 'el-popover', {\n                    props: {...info, content: rule.info},\n                    key: `pop${unique}`\n                }, [\n                    this.vNode.icon({\n                        class: [info.icon || 'el-icon-warning'],\n                        slot: isTooltip(info) ? 'default' : 'reference'\n                    })\n                ]));\n            }\n            return this.vNode.make('span', {slot: 'label'}, svn);\n        }\n    }\n\n    makeCol(col, parser, fItemUnique, VNodeFn) {\n        if (col.span === undefined)\n            col.span = 24;\n        const cls = {\n            [style.__fc_h]: !!parser.rule.hidden,\n            [style.__fc_v]: !!parser.rule.visibility\n        };\n        if (col.class) cls[col.class] = true;\n        return this.vNode.col({\n            props: col, class: cls, key: `${fItemUnique}col1`\n        }, VNodeFn);\n    }\n\n    makeFormBtn() {\n        let btn = [],\n            submitBtnShow = false !== this.vm.buttonProps && false !== this.vm.buttonProps.show,\n            resetBtnShow = false !== this.vm.resetProps && false !== this.vm.resetProps.show;\n        if (submitBtnShow)\n            btn.push(this.makeSubmitBtn(resetBtnShow ? 19 : 24));\n        if (resetBtnShow)\n            btn.push(this.makeResetBtn(4));\n\n        return this.propsData.props.inline === true\n            ? btn\n            : (btn.length ? this.vNode.col({\n                props: {span: 24},\n                key: `${this.unique}col2`\n            }, btn) : []);\n    }\n\n    makeResetBtn(span) {\n        const resetBtn = this.vm.resetProps,\n            props = resetBtn.col || {span: span, push: 1};\n\n        return this.vNode.col({props: props, key: `${this.unique}col3`}, [\n            this.vNode.button({\n                key: `frsbtn${this.unique}`, props: resetBtn, on: {\n                    'click': () => {\n                        const fApi = this.$handle.fCreateApi;\n                        isFunction(resetBtn.click)\n                            ? resetBtn.click(fApi)\n                            : fApi.resetFields();\n                    }\n                }, style: {width: resetBtn.width}\n            }, [resetBtn.innerText])\n        ]);\n    }\n\n    makeSubmitBtn(span) {\n        const submitBtn = this.vm.buttonProps,\n            props = submitBtn.col || {span: span};\n\n        return this.vNode.col({props: props, key: `${this.unique}col4`}, [\n            this.vNode.button({\n                key: `fbtn${this.unique}`, props: submitBtn, on: {\n                    'click': () => {\n                        const fApi = this.$handle.fCreateApi;\n                        isFunction(submitBtn.click)\n                            ? submitBtn.click(fApi)\n                            : fApi.submit();\n                    }\n                }, style: {width: submitBtn.width}\n            }, [submitBtn.innerText])\n        ]);\n    }\n}\n","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'datePicker';\n\nexport default ['year', 'month', 'date', 'dates', 'week', 'datetime', 'datetimeRange', 'dateRange'].reduce((initial, type) => {\n    initial[type] = creatorTypeFactory(name, type.toLowerCase());\n    return initial\n}, {});","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'frame';\n\nconst types = {\n    frameInputs: ['input', 0],\n    frameFiles: ['file', 0],\n    frameImages: ['image', 0],\n    frameInputOne: ['input', 1],\n    frameFileOne: ['file', 1],\n    frameImageOne: ['image', 1]\n};\n\nconst maker = Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, m => m.props({type: types[key][0], maxLength: types[key][1]}));\n    return maker\n}, {});\n\n\nmaker.frameInput = maker.frameInputs;\nmaker.frameFile = maker.frameFiles;\nmaker.frameImage = maker.frameImages;\n\nexport default maker;","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'input';\n\nconst maker = ['password', 'url', 'email', 'text', 'textarea'].reduce((maker, type) => {\n    maker[type] = creatorTypeFactory(name, type);\n    return maker;\n}, {});\n\nmaker.idate = creatorTypeFactory(name, 'date');\n\nexport default maker;","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'select';\n\nexport default {\n    selectMultiple: creatorTypeFactory(name, true, 'multiple'),\n    selectOne: creatorTypeFactory(name, false, 'multiple'),\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'slider';\n\nexport default {\n    sliderRange: creatorTypeFactory(name, true, 'range')\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'timePicker';\n\nexport default {\n    time: creatorTypeFactory(name, (m) => m.props.isRange = false),\n    timeRange: creatorTypeFactory(name, (m) => m.props.isRange = true)\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'tree';\n\nconst types = {'treeSelected': 'selected', 'treeChecked': 'checked'};\n\nexport default Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, types[key]);\n    return maker;\n}, {});","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'upload';\n\nconst types = {\n    image: ['image', 0],\n    file: ['file', 0],\n    uploadFileOne: ['file', 1],\n    uploadImageOne: ['image', 1],\n};\n\nconst maker = Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, m => m.props({uploadType: types[key][0], maxLength: types[key][1]}));\n    return maker\n}, {});\n\nmaker.uploadImage = maker.image;\nmaker.uploadFile = maker.file;\n\nexport default maker;","import {creatorFactory} from '@form-create/core';\nimport datePicker from './datePicker';\nimport frame from './frame';\nimport input from './input';\nimport select from './select';\nimport slider from './slider';\nimport timePicker from './timePicker';\nimport tree from './tree';\nimport upload from './upload';\n\nconst maker = {...datePicker, ...frame, ...input, ...select, ...slider, ...timePicker, ...tree, ...upload},\n    names = ['autoComplete', 'cascader', 'colorPicker', 'datePicker', 'frame', 'inputNumber', 'radio', 'rate'];\n\nnames.forEach(name => {\n    maker[name] = creatorFactory(name);\n});\n\nmaker.auto = maker.autoComplete;\nmaker.number = maker.inputNumber;\nmaker.color = maker.colorPicker;\nmaker.hidden = (field, value) => creatorFactory('hidden')('', field, value);\n\nexport default maker;","import components from '../components';\nimport parsers from '../parsers';\nimport getConfig from './config';\nimport nodes from './nodes';\nimport formRender from './form';\nimport createFormCreate, {VNode} from '@form-create/core';\nimport makers from '../makers';\n\nVNode.use(nodes);\n\nexport const drive = {\n    ui: process.env.UI,\n    version: `${process.env.VERSION}`,\n    formRender,\n    components,\n    parsers,\n    makers,\n    getConfig,\n};\n\nconst {FormCreate, install} = createFormCreate(drive);\n\nif (typeof window !== 'undefined') {\n    window.formCreate = FormCreate;\n    if (window.Vue) {\n        install(window.Vue);\n    }\n}\n\nexport default FormCreate;\n","import FormCreate from './core/index';\n\n\nconst maker = FormCreate.maker;\n\nexport {maker}\n\nexport default FormCreate;\n"],"names":["_extends","Object","assign","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","apply","this","normalMerge","toArrayMerge","functionalMerge","mergeJsxProps","reduce","indexOf","Array","e","concat","f","g","h","i","mergeFn","$set","target","field","value","Vue","set","$del","delete","isValidChildren","children","isArray","_toString","toString","isUndef","v","val","_typeof","JSON","stringify","String","extend","to","_from","key","debounce","fn","wait","timeout","arg","clearTimeout","setTimeout","isType","type","isDate","isPlainObject","isFunction","isString","isBool","toLine","name","line","replace","toLowerCase","substr","toArray","isElement","nodeType","deepExtend","origin","isArr","clone","nst","undefined","deepExtendArgs","lst","forEach","id","uniqueId","toDefSlot","slot","$h","timeStampToDate","timeStamp","date","Date","preventDefault","dateFormat","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","k","test","RegExp","$1","getFullYear","hasSlot","slotName","some","child","data","errMsg","NAME","props","options","default","ctx","watch","update","trueValue","unique","methods","onInput","n","$emit","filter","opt","label","map","_this","option","created","render","_this2","index","Type","chlidren","formCreateName","$FormCreate","FormCreate","components","componentName","rule","required","formData","buttonProps","resetProps","$f","isShow","formCreate","_buttonProps","_resetProps","_refresh","handle","reloadRule","beforeCreate","$options","propsData","api","mounted","beforeDestroy","$render","clearCacheAll","objects","initial","arrA","arrB","event","hook","fn1","fn2","defVData","on","VData","init","_data","classList","status","merge","class","keys","keyList","objList","obj","vdataField","baseRule","validate","col","control","emit","template","emitPrefix","native","info","creatorFactory","title","Creator","creatorTypeFactory","typeName","maker","keyAttrs","attr","objAttrs","arrAttrs","toJson","getRule","_isVue","__inject","__origin","__emit","parseJson","json","parse","eval","console","error","enumerable","configurable","copyRule","copyRules","rules","isCreator","creator","commonMaker","create","make","createTmp","vm","makerFactory","toMaker","ruleToMaker","r","defineProperties","find","findField","model","parseVData","domProps","innerHTML","get","getVNode","VNode","setVm","$createElement","nodeName","VNodeFn","Node","context","nodes","toLocaleLowerCase","use","fragment","BaseParser","vData","vNode","originType","isDef","el","refName","formItemRefName","root","ctrlRule","modelEvent","$handle","deleted","formValue","$de","Render","fc","$form","cache","renderList","parser","clear","cacheStatus","refresh","parent","clearCache","vnode","parsers","orgChildren","beforeRender","vn","sortList","renderParser","global","toData","compile","getInjectData","setTemplateProps","fCreateApi","$off","$on","setGlobalConfig","form","renderTemplate","setCache","isNoVal","defaultRender","renderChildren","container","getCache","custom","parserToData","ref","subForm","_this3","addSubForm","getFormData","inputVData","__fc__","_this4","removeField","vdata","fApi","$props","Api","tidyFields","fields","all","fieldList","getValue","setValue","changeValue","changeField","getParser","__origin__","splice","reload","destroy","$el","parentNode","removeChild","$destroy","append","after","isChild","prepend","hidden","hiddenStatus","visibility","visibilityStatus","disabled","trueData","component","customData","bind","properties","submitBtnProps","resetBtnProps","node","updateOptions","onSubmit","sync","hideForm","changeStatus","clearChangeStatus","updateRule","cover","updateRules","updateValidate","updateValidates","validates","method","Error","once","$once","off","trigger","args","callback","subLen","state","___this","valid","len","validFn","clearValidateState","sub","validateField","resetFields","resetField","refreshControl","submit","successFn","failFn","clearSub","_this5","clearSubValidateState","getSubForm","btn","loading","show","resetBtn","closeModal","closeModel","Handle","watching","__init","drive","formRender","loadRule","initOrgChildren","modelList","modelEvents","_rule","parseOn","parseProps","createParser","parseRule","notField","setParser","bindParser","push","defineProperty","valueHandle","toValue","isChange","setFormData","toFormValue","valueChange","def","defRule","parseArray","parseInjectEvent","margeEmit","emitEvent","parseEmit","injectEvent","inject","self","_fn","unshift","emitKey","config","eventName","fieldKey","run","validateControl","submitBtn","writable","$watch","_this6","deep","immediate","controls","getControl","removeControl","_this7","_this8","addParserWitch","$refs","defaultValue","mountedParser","onReload","delParser","_this9","$nextTick","unWatch","className","__field__","functional","_vue","window","createFormCreate","globalConfig","getConfig","_id","get$FormCreate","margeGlobal","_options","document","querySelector","body","bindAttr","version","ui","$vm","$data","$mount","params","$parent","_opt","appendChild","$formCreate","mount","remove","makers","install","_installedFormCreate","BaseForm","mCol","pCol","Modal","cb","width","visible","modal","close","onClose","closed","onClosed","content","defaultOnHandle","src","style","attrs","styleInject","css","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","styleSheet","cssText","createTextNode","helper","Boolean","icon","height","maxLength","Number","okBtnText","closeBtnText","modalTitle","handleIcon","allowRemove","onOpen","Function","onOk","onCancel","onLoad","onBeforeRemove","onRemove","onHandle","srcKey","modalVm","fileList","showModel","_vm","path","contentWindow","log","button","click","makeInput","getSrc","readonly","makeGroup","makeBtn","makeItem","makeIcons","icons","makeHandleIcon","makeRemoveIcon","handleClick","handleRemove","makeFiles","makeImages","makeTree","updateValue","onChange","tree","getCurrentKey","getCheckedKeys","setCurrentKey","setCheckedKeys","parseFile","file","url","getFileName","split","pop","uploadType","uploadList","showFileList","upload","uploadFiles","every","isDisabled","makeDefaultBtn","makeProgress","percentage","makeUpload","display","initChildren","files","max","min","cacheRule","group$f","fieldRule","computed","formRule","total","addRule","removeRule","add$f","syncData","$delete","addIcon","delIcon","makeIcon","checkbox","frame","radio","select","group","input","Parser","parseValue","time","multiple","formatToString","parseString","autosize","minRows","range","parseFloat","switch","getTime","toDate","isRange","nodeKey","limit","datePicker","slider","iswitch","timePicker","inline","labelPosition","labelSuffix","hideRequiredAsterisk","labelWidth","showMessage","inlineMessage","statusIcon","validateOnRuleChange","size","row","gutter","align","justify","tag","placement","plain","round","circle","autofocus","nativeType","innerText","rate","cascader","colorPicker","inputNumber","formItem","autoComplete","upperCaseReg","isAttr","isTooltip","Form","getFormRef","fItem","validateMessage","validateState","nativeOn","makeFormBtn","makeRow","_class","makeFormItem","fItemUnique","getGetCol","_col","prop","makeFormPop","makeCol","svn","span","cls","__fc_h","__fc_v","submitBtnShow","resetBtnShow","makeSubmitBtn","makeResetBtn","types","frameInputs","frameFiles","frameImages","frameInputOne","frameFileOne","frameImageOne","m","frameInput","frameFile","frameImage","idate","selectMultiple","selectOne","sliderRange","timeRange","image","uploadFileOne","uploadImageOne","uploadImage","uploadFile","names","auto","number","color","process"],"mappings":"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"}