{"version":3,"file":"form-create.min.js","sources":["../../../node_modules/@vue/babel-helper-vue-jsx-merge-props/dist/helper.js","../../utils/src/index.js","../src/components/checkbox/index.jsx","../../core/src/components/formCreate.js","../../core/src/factory/vData.js","../../core/src/factory/creator.js","../../core/src/core/util.js","../../core/src/factory/maker.js","../../core/src/factory/vNode.js","../../core/src/factory/parser.js","../../core/src/core/render.js","../../core/src/core/api.js","../../core/src/core/handle.js","../../core/src/components/fragment.jsx","../../core/src/core/index.js","../../core/src/factory/form.js","../src/core/modal.js","../../../node_modules/style-inject/dist/style-inject.es.js","../src/components/frame/index.jsx","../src/components/radio/index.jsx","../src/components/select/index.jsx","../src/components/tree/index.jsx","../src/components/upload/index.jsx","../src/components/group/index.jsx","../src/components/index.js","../src/parsers/checkbox/parser.js","../src/parsers/checkbox/index.js","../src/parsers/datePicker/parser.js","../src/parsers/datePicker/index.js","../src/parsers/frame/parser.js","../src/parsers/frame/index.js","../src/parsers/hidden/index.js","../src/parsers/input/parser.js","../src/parsers/input/index.js","../src/parsers/radio/parser.js","../src/parsers/radio/index.js","../src/parsers/select/parser.js","../src/parsers/select/index.js","../src/parsers/slider/parser.js","../src/parsers/slider/index.js","../src/parsers/switch/parser.js","../src/parsers/switch/index.js","../src/parsers/timePicker/parser.js","../src/parsers/timePicker/index.js","../src/parsers/tree/parser.js","../src/parsers/tree/index.js","../src/parsers/upload/parser.js","../src/parsers/upload/index.js","../src/parsers/index.js","../src/core/config.js","../src/core/nodes.js","../src/core/form.js","../src/makers/datePicker.js","../src/makers/frame.js","../src/makers/input.js","../src/makers/select.js","../src/makers/slider.js","../src/makers/timePicker.js","../src/makers/tree.js","../src/makers/upload.js","../src/makers/index.js","../src/core/index.js","../src/index.js"],"sourcesContent":["\"use strict\";function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var normalMerge=[\"attrs\",\"props\",\"domProps\"],toArrayMerge=[\"class\",\"style\",\"directives\"],functionalMerge=[\"on\",\"nativeOn\"],mergeJsxProps=function(a){return a.reduce(function(c,a){for(var b in a)if(!c[b])c[b]=a[b];else if(-1!==normalMerge.indexOf(b))c[b]=_extends({},c[b],a[b]);else if(-1!==toArrayMerge.indexOf(b)){var d=c[b]instanceof Array?c[b]:[c[b]],e=a[b]instanceof Array?a[b]:[a[b]];c[b]=d.concat(e)}else if(-1!==functionalMerge.indexOf(b)){for(var f in a[b])if(c[b][f]){var g=c[b][f]instanceof Array?c[b][f]:[c[b][f]],h=a[b][f]instanceof Array?a[b][f]:[a[b][f]];c[b][f]=g.concat(h)}else c[b][f]=a[b][f];}else if(\"hook\"==b)for(var i in a[b])c[b][i]=c[b][i]?mergeFn(c[b][i],a[b][i]):a[b][i];else c[b]=a[b];return c},{})},mergeFn=function(a,b){return function(){a&&a.apply(this,arguments),b&&b.apply(this,arguments)}};module.exports=mergeJsxProps;\n","import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n\nexport function isValidChildren(children) {\n    return Array.isArray(children) && children.length > 0;\n}\n\nexport const _toString = Object.prototype.toString;\n\nexport function isUndef(v) {\n    return v === undefined || v === null\n}\n\nexport function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n\nexport function extend(to, _from) {\n    for (var key in _from) {\n        $set(to, key, _from[key]);\n    }\n    return to\n}\n\nexport function debounce(fn, wait) {\n    var timeout = null;\n    return function (...arg) {\n        if (timeout !== null)\n            clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...arg), wait);\n    }\n}\n\nexport function isType(arg, type) {\n    return _toString.call(arg) === '[object ' + type + ']'\n}\n\nexport function isDate(arg) {\n    return isType(arg, 'Date');\n}\n\nexport function isPlainObject(arg) {\n    return isType(arg, 'Object');\n}\n\nexport function isFunction(arg) {\n    return isType(arg, 'Function');\n}\n\nexport function isString(arg) {\n    return isType(arg, 'String');\n}\n\nexport function isBool(arg) {\n    return isType(arg, 'Boolean');\n}\n\nexport function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n\nexport function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n)\n}\n\nexport function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ((isUndef(value) || value === '' ? [] : [value])\n        );\n}\n\nexport function isElement(arg) {\n    return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !isPlainObject(arg)\n}\n\nexport function deepExtend(origin, target = {}) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || isPlainObject(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                deepExtend(origin[key], clone);\n            } else {\n                $set(origin, key, clone);\n            }\n        }\n    }\n    return origin\n}\n\nexport function deepExtendArgs(origin, ...lst) {\n    lst.forEach(target => {\n        origin = deepExtend(origin, target);\n    });\n    return origin;\n}\n\nlet id = 0;\n\nexport function uniqueId() {\n    return ++id\n}\n\nexport function toDefSlot(slot, $h) {\n    return [slot && isFunction(slot) ? slot($h) : slot]\n}\n\n\nexport function timeStampToDate(timeStamp) {\n    if (isDate(timeStamp))\n        return timeStamp;\n    else {\n        let date = new Date(timeStamp);\n        return date.toString() === 'Invalid Date' ? timeStamp : date;\n    }\n}\n\nexport function preventDefault(e) {\n    e.preventDefault();\n}\n\nexport function dateFormat(fmt, date = new Date) {\n    let o = {\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n    for (let k in o)\n        if (new RegExp('(' + k + ')').test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1)\n                ? (o[k])\n                : (('00' + o[k]).substr(('' + o[k]).length)));\n    return fmt\n}\n\nexport function hasSlot(children, slotName) {\n    return children.length !== 0 && children.some(child => {\n        if (child.data) {\n            if ((!child.data.slot && slotName === 'default') || (child.data.slot === slotName))\n                return true;\n        } else if (slotName === 'default')\n            return true;\n        return false;\n    })\n}\n\nexport function errMsg(i) {\n\n    return '\\n\\x67\\x69\\x74\\x68\\x75\\x62\\x3a\\x68\\x74\\x74\\x70' +\n        '\\x73\\x3a\\x2f\\x2f\\x67\\x69\\x74\\x68\\x75\\x62\\x2e\\x63\\x6f' +\n        '\\x6d\\x2f\\x78\\x61\\x62\\x6f\\x79\\x2f\\x66\\x6f\\x72\\x6d\\x2d' +\n        '\\x63\\x72\\x65\\x61\\x74\\x65\\n\\x64\\x6f\\x63\\x75\\x6d\\x65' +\n        '\\x6e\\x74\\x3a\\x68\\x74\\x74\\x70\\x3a\\x2f\\x2f\\x77\\x77\\x77' +\n        '\\x2e\\x66\\x6f\\x72\\x6d\\x2d\\x63\\x72\\x65\\x61\\x74\\x65\\x2e' +\n        '\\x63\\x6f\\x6d' + (i || '');\n}\n","import {uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-checkbox';\n\nexport default {\n    name: NAME,\n    props: {\n        options: {\n            type: Array,\n            default: () => []\n        },\n        children: {\n            type: Array,\n            default: () => []\n        },\n        ctx: {\n            type: Object,\n            default: () => ({})\n        },\n        value: {\n            type: Array,\n            default: () => []\n        },\n        type: String\n    },\n    watch: {\n        value() {\n            this.update();\n        }\n    },\n    data() {\n        return {\n            trueValue: [],\n            unique: uniqueId()\n        }\n    },\n    methods: {\n        onInput(n) {\n            this.$emit('input', this.options.filter((opt) => n.indexOf(opt.label) !== -1).map((opt) => opt.value));\n        },\n        update() {\n            this.trueValue = this.value ? this.options.filter((opt) => this.value.indexOf(opt.value) !== -1)\n                .map((option) => option.label) : []\n        }\n    },\n    created() {\n        this.update();\n    },\n    render() {\n        return <ElCheckboxGroup {...this.ctx} v-model={this.trueValue}\n            on-input={this.onInput}>{this.options.map((opt, index) => {\n                const props = {...opt};\n                const Type = this.type === 'button' ? 'ElCheckboxButton' : 'ElCheckbox';\n                delete props.value;\n                return <Type {...{props}} key={NAME + Type + index + this.unique}/>\n            }).concat(this.chlidren)}</ElCheckboxGroup>\n    }\n}\n","import {deepExtend} from '@form-create/utils';\n\nexport const formCreateName = 'FormCreate';\n\nexport default function $FormCreate(FormCreate, components) {\n    return {\n        name: formCreateName,\n        componentName: formCreateName,\n        props: {\n            rule: {\n                type: Array,\n                required: true,\n                default: () => {\n                    return {};\n                }\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                },\n                required: false\n            },\n            value: Object\n        },\n        data: () => {\n            return {\n                formData: undefined,\n                buttonProps: undefined,\n                resetProps: undefined,\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n            };\n        },\n        components,\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _buttonProps(props) {\n                this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n            },\n            _resetProps(props) {\n                this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n            },\n            _refresh() {\n                ++this.unique;\n            }\n        },\n        watch: {\n            option: '_refresh',\n            rule(n) {\n                this.formCreate.handle.reloadRule(n);\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(rule, option);\n            this.formCreate.beforeCreate(this);\n        },\n        created() {\n            this.formCreate.created();\n            this.$f = this.formCreate.api();\n            this.$emit('input', this.$f);\n        },\n        mounted() {\n            const formCreate = this.formCreate;\n\n            formCreate.mounted();\n            this.$emit('input', this.$f);\n\n        },\n        beforeDestroy() {\n            this.formCreate.handle.reloadRule([]);\n            this.formCreate.handle.$render.clearCacheAll();\n        },\n    }\n}\n","import {isPlainObject, isUndef, toString} from '@form-create/utils';\nimport _mergeJsxProps from '@vue/babel-helper-vue-jsx-merge-props';\n\nfunction defVData() {\n    return {\n        // class: {},\n        // style: {},\n        // attrs: {},\n        props: {},\n        // domProps: {},\n        on: {},\n        // nativeOn: {},\n        // directives: [],\n        // scopedSlots: {},\n        // slot: undefined,\n        // key: undefined,\n        // ref: undefined\n    };\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    merge(props) {\n        this._data = _mergeJsxProps([this._data, props])\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            this.merge({class: classList});\n        } else if (isPlainObject(classList)) {\n            this.merge(classList);\n        } else {\n            this.merge({class: {[toString(classList)]: !!status}});\n        }\n\n        return this;\n    }\n\n    init() {\n        this._data = defVData();\n        return this;\n    }\n\n    get() {\n        const data = Object.keys(this._data).reduce((initial, key) => {\n            const value = this._data[key];\n            if (value === undefined) return initial;\n            if (Array.isArray(value) && !value.length) return initial;\n            if (isPlainObject(value) && !Object.keys(value).length && key !== 'props') return initial;\n\n            initial[key] = value;\n            return initial;\n        }, {});\n        this.init();\n        return data;\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style', 'directives'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        this.merge({[key]: val});\n        return this;\n    };\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n        if (isPlainObject(obj)) {\n            this.merge({[key]: obj})\n        } else {\n            this.merge({[key]: {[toString(obj)]: val}})\n        }\n\n        return this;\n    };\n});\n\nexport const vdataField = objList.concat(keyList, 'class');\n","import {$set, extend, isFunction, isPlainObject} from '@form-create/utils';\nimport VData from './vData';\n\nfunction baseRule() {\n    return {\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        control: [],\n        emit: [],\n        template: undefined,\n        emitPrefix: undefined,\n        native: undefined,\n        info: undefined,\n    };\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props);\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type)) type(maker);\n        else maker.props(typeName, type);\n        return maker;\n    };\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n        extend(this._data, baseRule());\n        extend(this._data, {type, title, field, value});\n        if (isPlainObject(props)) this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this;\n    }\n\n    getRule() {\n        return this._data;\n    }\n\n    event(...args) {\n        this.on(...args);\n        return this;\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'value', 'name', 'title', 'native', 'info', 'hidden', 'visibility'];\n\nkeyAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (value) {\n        $set(this._data, attr, value);\n        return this;\n    };\n});\n\nconst objAttrs = ['col'];\n\nobjAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this._data, attr, extend(this._data[attr], opt));\n        return this;\n    };\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit', 'control'];\n\narrAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this._data, attr, this._data[attr].concat(opt));\n        return this;\n    };\n});\n","import Creator from '../factory/creator';\nimport {isFunction, isString, isUndef, isValidChildren} from '@form-create/utils';\n\nexport function toJson(obj) {\n    return JSON.stringify(obj, function (key, val) {\n        if (val instanceof Creator) {\n            return val.getRule();\n        }\n\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== 'function') {\n            return val;\n        }\n        if (val.__inject)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n\n        return '' + val;\n    });\n}\n\n\nexport function parseJson(json) {\n    return JSON.parse(json, function (k, v) {\n        if (isUndef(v)) return v;\n        if (v.indexOf && v.indexOf('function') > -1) {\n            try {\n                return eval('(function(){return ' + v + ' })()')\n            } catch (e) {\n                console.error(`[form-create]解析失败:${v}`);\n                return undefined;\n            }\n        }\n        return v;\n    });\n}\n\nexport function enumerable(value) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false\n    }\n}\n\nexport function copyRule(rule) {\n    return copyRules([rule])[0];\n}\n\nexport function copyRules(rules) {\n    return rules.map(rule => {\n        if (isString(rule)) return rule;\n        let r;\n        if (isFunction(rule.getRule)) {\n            r = new Creator();\n            r._data = {...rule._data};\n            if (r._data.field && r._data.value === undefined)\n                r.value(null);\n            if (isValidChildren(r._data.children)) {\n                r._data.children = copyRules(r._data.children);\n            }\n        } else {\n            r = {...rule};\n            if (r.field && r.value === undefined) r.value = null;\n            if (isValidChildren(r.children))\n                r.children = copyRules(r.children);\n        }\n        return r;\n    })\n}\n","import Creator, {creatorFactory} from './creator';\nimport {parseJson, enumerable} from '../core/util';\nimport {extend, isPlainObject, isString, isValidChildren} from '@form-create/utils';\n\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    let maker = {};\n\n    extend(maker, {\n        create,\n        createTmp\n    });\n    maker.template = createTmp;\n    maker.parse = parse;\n\n    return maker;\n}\n\nfunction parse(rule, toMaker = false) {\n    if (isString(rule)) rule = parseJson(rule);\n\n    if (rule instanceof Creator) return toMaker ? rule : rule.getRule();\n    if (isPlainObject(rule)) {\n        const maker = ruleToMaker(rule);\n        return toMaker ? maker : maker.getRule();\n    } else if (!Array.isArray(rule)) return rule;\n    else {\n        const rules = rule.map(r => parse(r, toMaker));\n        Object.defineProperties(rules, {\n            find: enumerable(findField),\n            model: enumerable(model)\n        });\n\n        return rules;\n    }\n}\n\nfunction findField(field, origin) {\n    let children = [];\n    for (let i in this) {\n        const rule = this[i] instanceof Creator ? this[i]._data : this[i];\n        if (rule.field === field) return origin === true ? rule : this[i];\n        if (isValidChildren(rule.children)) children = children.concat(rule.children);\n    }\n    if (children.length > 0) return findField.call(children, field);\n}\n\nfunction model(formData) {\n    Object.keys(formData).forEach(field => {\n        const rule = this.find(field, true);\n        if (rule) rule.value = formData[field];\n    });\n}\n\nfunction ruleToMaker(rule) {\n    const maker = new Creator();\n    Object.keys(rule).forEach(key => {\n        maker._data[key] = rule[key];\n    });\n    return maker;\n}\n","import {isFunction, isString, toString} from '@form-create/utils';\n\nfunction parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data;\n}\n\nfunction getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || []);\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        if (vm)\n            this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node;\n    }\n\n    static use(nodes) {\n        Object.keys(nodes).forEach((k) => {\n            VNode.prototype[toString(k).toLocaleLowerCase()] = VNode.prototype[k] = function (data, VNodeFn) {\n                return this.make(nodes[k], data, VNodeFn);\n            };\n        });\n    }\n}\n","import VData from './vData';\nimport {toString, uniqueId} from '@form-create/utils';\nimport VNode from './vNode';\n\nexport default class BaseParser {\n\n    constructor(handle, rule, id) {\n        this.rule = rule;\n        this.vData = new VData;\n        this.vNode = new VNode();\n        this.id = id;\n        this.watch = [];\n        this.originType = rule.type;\n        this.type = toString(rule.type).toLocaleLowerCase();\n        this.isDef = true;\n        this.el = undefined;\n\n        if (!rule.field) {\n            this.field = '_def_' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n        this.name = rule.name;\n\n        this.key = 'key_' + id;\n        this.refName = '__' + this.field + this.id;\n        this.formItemRefName = 'fi' + this.refName;\n        this.root = [];\n        this.ctrlRule = null;\n\n        this.update(handle);\n        this.init();\n    }\n\n    update(handle) {\n        this.$handle = handle;\n        this.$render = handle.$render;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.vNode.setVm(this.vm);\n        this.deleted = false;\n    }\n\n    init() {\n    }\n\n    toFormValue(value) {\n        return value\n    }\n\n    toValue(formValue) {\n        return formValue;\n    }\n}\n","import {_vue as Vue} from './index';\nimport {debounce, errMsg, isFunction, isString, isUndef, isValidChildren} from '@form-create/utils';\nimport VNode from '../factory/vNode';\nimport VData, {vdataField} from '../factory/vData';\n\n\nconst $de = debounce((fn) => fn(), 1);\n\nexport default class Render {\n    constructor(handle) {\n        this.$handle = handle;\n        this.fc = handle.fc;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.$form = handle.$form;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.cache = {};\n        this.renderList = {};\n    }\n\n    clearCache(parser, clear = true) {\n        if (!this.cache[parser.id]) return;\n        if (this.cacheStatus(parser))\n            this.$handle.refresh();\n        const parent = this.cache[parser.id].parent;\n        this.cache[parser.id] = null;\n        if (parent && clear)\n            this.clearCache(parent, clear);\n    }\n\n    clearCacheAll() {\n        this.cache = {};\n    }\n\n    setCache(parser, vnode, parent) {\n        this.cache[parser.id] = {\n            vnode,\n            use: false,\n            parent\n        };\n    }\n\n    cacheStatus(parser) {\n        return this.cache[parser.id] && (this.cache[parser.id].use === true || this.cache[parser.id].parent);\n    }\n\n    getCache(parser) {\n        const cache = this.cache[parser.id];\n        cache.use = true;\n        return cache.vnode;\n    }\n\n    initOrgChildren() {\n        const parsers = this.$handle.parsers;\n        this.orgChildren = Object.keys(parsers).reduce((initial, id) => {\n            const children = parsers[id].rule.children;\n            initial[id] = isValidChildren(children) ? [...children] : [];\n\n            return initial;\n        }, {});\n    }\n\n    run() {\n        if (!this.vm.isShow)\n            return;\n\n        this.$form.beforeRender();\n\n        const vn = this.$handle.sortList.map((id) => {\n            let parser = this.$handle.parsers[id];\n            if (parser.type === 'hidden') return;\n            return this.renderParser(parser);\n        }).filter((val) => val !== undefined);\n\n        return this.$form.render(vn);\n    }\n\n    setGlobalConfig(parser) {\n        if (!this.options.global) return;\n        const global = this.options.global;\n\n        if (global['*']) {\n            this.toData(parser, global['*']);\n        }\n        if (global[parser.type]) {\n            this.toData(parser, global[parser.type]);\n        } else if (global[parser.originType]) {\n            this.toData(parser, global[parser.originType]);\n        }\n    }\n\n    renderTemplate(parser) {\n        const {id, rule, key} = parser;\n        if (isUndef(Vue.compile)) {\n            console.error('使用的 Vue 版本不支持 compile' + errMsg());\n            return [];\n        }\n\n        if (!this.renderList[id]) {\n            let vm = rule.vm;\n            if (isUndef(rule.vm))\n                vm = new Vue;\n            else if (isFunction(rule.vm))\n                vm = rule.vm(this.$handle.getInjectData(rule));\n\n            this.renderList[id] = {\n                vm,\n                template: Vue.compile(rule.template)\n            };\n\n        }\n\n        const {vm, template} = this.renderList[id];\n\n        setTemplateProps(vm, parser, this.$handle.fCreateApi);\n\n        vm.$off('input');\n        vm.$on('input', (value) => {\n            this.onInput(parser, value);\n        });\n\n        const vn = template.render.call(vm);\n\n        if (isUndef(vn.data)) vn.data = {};\n        vn.key = key;\n        return vn;\n    }\n\n    renderParser(parser, parent) {\n        if (!this.cache[parser.id] || parser.type === 'template') {\n\n            parser.vData.get();\n            this.setGlobalConfig(parser);\n\n            let {type, rule} = parser, form = this.$form, vn;\n\n            if (type === 'template' && rule.template) {\n                vn = this.renderTemplate(parser);\n\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            } else if (!this.$handle.isNoVal(parser)) {\n                const children = this.renderChildren(parser);\n                vn = parser.render ? parser.render(children) : this.defaultRender(parser, children);\n            } else {\n                vn = this.defaultRender(parser, this.renderChildren(parser));\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            }\n            if (rule.native !== true)\n                vn = form.container(vn, parser);\n            this.setCache(parser, vn, parent);\n            return vn;\n        }\n\n        return this.getCache(parser);\n    }\n\n    toData(parser, data) {\n        vdataField.forEach((key) => {\n            if (data[key] !== undefined)\n                parser.vData[key](data[key]);\n        });\n\n        return parser.vData;\n    }\n\n    parserToData(parser) {\n        return this.toData(parser, parser.rule);\n    }\n\n    inputVData(parser, custom) {\n        const {refName, key} = parser;\n\n        this.parserToData(parser);\n\n        let data = parser.vData\n            .ref(refName).key('fc_item' + key).props('formCreate', this.$handle.fCreateApi)\n            .on('fc.subForm', (subForm) => this.$handle.addSubForm(parser, subForm));\n\n        if (!custom)\n            data.on('input', (value) => {\n                this.onInput(parser, value);\n            }).props('value', this.$handle.getFormData(parser));\n\n        this.$form.inputVData && this.$form.inputVData(parser, custom);\n\n        return data;\n    }\n\n    onInput(parser, value) {\n        this.$handle.onInput(parser, value);\n    }\n\n    renderChildren(parser) {\n        const {children} = parser.rule, orgChildren = this.orgChildren[parser.id];\n\n        if (!isValidChildren(children)) {\n            orgChildren.forEach(child => {\n                if (!isString(child) && child.__fc__) {\n                    this.$handle.removeField(child.__fc__);\n                }\n            });\n            this.orgChildren[parser.id] = [];\n            return [];\n        }\n\n        this.orgChildren[parser.id].forEach(child => {\n            if (children.indexOf(child) === -1 && !isString(child) && child.__fc__) {\n                this.$handle.removeField(child.__fc__);\n            }\n        });\n\n        return children.map(child => {\n            if (isString(child)) return child;\n            if (child.__fc__) {\n                return this.renderParser(child.__fc__, parser);\n            }\n            if (child.type)\n                $de(() => this.$handle.reloadRule());\n        });\n\n    }\n\n    defaultRender(parser, children) {\n        const vdata = this.inputVData(parser);\n        if (this.vNode[parser.type])\n            return this.vNode[parser.type](vdata, children);\n        if (this.vNode[parser.originType])\n            return this.vNode[parser.originType](vdata, children);\n        return this.vNode.make(parser.originType, vdata, children);\n    }\n}\n\nfunction setTemplateProps(vm, parser, fApi) {\n    if (!vm.$props)\n        return;\n    const {rule} = parser;\n    const keys = Object.keys(vm.$props);\n    keys.forEach(key => {\n        if (rule.props[key] !== undefined)\n            vm.$props[key] = rule.props[key];\n    });\n\n    if (keys.indexOf('value') !== -1) {\n        vm.$props.value = parser.rule.value;\n    }\n    vm.$props.formCreate = fApi;\n}\n","import {$set, deepExtend, errMsg, isFunction, isPlainObject} from '@form-create/utils';\nimport {toJson} from './util';\n\n\nexport default function Api(h) {\n\n    function tidyFields(fields, all = false) {\n        if (!fields)\n            fields = all ? Object.keys(h.fieldList) : h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    return {\n        formData() {\n            const parsers = h.fieldList;\n\n            return Object.keys(parsers).reduce((initial, id) => {\n                const parser = parsers[id];\n                initial[parser.field] = deepExtend({}, {value: parser.rule.value}).value;\n                return initial;\n            }, {});\n        },\n        getValue(field) {\n            const parser = h.fieldList[field];\n            if (!parser) return;\n            return deepExtend({}, {value: parser.rule.value}).value;\n        },\n        setValue(field, value) {\n            let formData = field;\n            if (!isPlainObject(field))\n                formData = {[field]: value};\n            Object.keys(formData).forEach(key => {\n                const parser = h.fieldList[key];\n                if (!parser) return;\n                parser.rule.value = formData[key];\n            });\n        },\n        changeValue(field, value) {\n            this.setValue(field, value);\n        },\n        changeField(field, value) {\n            this.setValue(field, value);\n        },\n        removeField(field) {\n            let parser = h.getParser(field);\n            if (!parser)\n                return;\n            let fields = parser.root.map(rule => rule.__field__), index = fields.indexOf(field);\n            if (index === -1)\n                return;\n            parser.root.splice(index, 1);\n            if (h.sortList.indexOf(parser.id) === -1)\n                this.reload();\n\n            return parser.rule.__origin__;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = h.sortList.length, rules = h.rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                    index = parser.rule.children.length;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                }\n            }\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = 0, rules = h.rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                }\n            }\n            rules.splice(index, 0, rule);\n        },\n        hidden(hidden, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'hidden', !!hidden);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.hidden;\n        },\n        visibility(visibility, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'visibility', !!visibility);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        visibilityStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.visibility;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.vm.$set(parser.rule.props, 'disabled', !!disabled);\n            });\n        },\n        model() {\n            return Object.keys(h.trueData).reduce((initial, key) => {\n                initial[key] = h.trueData[key].rule;\n                return initial;\n            }, {});\n        },\n        component() {\n            return Object.keys(h.customData).reduce((initial, key) => {\n                initial[key] = h.customData[key].rule;\n                return initial;\n            }, {});\n        },\n        bind() {\n            let bind = {}, properties = {};\n            Object.keys(h.fieldList).forEach((field) => {\n                const parser = h.fieldList[field];\n                properties[field] = {\n                    get() {\n                        return parser.rule.value;\n                    },\n                    set(value) {\n                        parser.rule.value = value;\n                    },\n                    enumerable: true,\n                    configurable: true\n                };\n            });\n            Object.defineProperties(bind, properties);\n            return bind;\n        },\n        submitBtnProps: (props = {}) => {\n            h.vm._buttonProps(props);\n        },\n        resetBtnProps: (props = {}) => {\n            h.vm._resetProps(props);\n        },\n        set: (node, field, value) => {\n            h.vm.$set(node, field, value);\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            deepExtend(h.options, options);\n            this.refresh(true);\n        },\n        onSubmit(fn) {\n            this.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            const parser = h.getParser(field);\n            if (parser) {\n                h.$render.clearCache(parser, true);\n                h.refresh();\n            }\n        },\n        refresh: (clear) => {\n            if (clear)\n                h.$render.clearCacheAll();\n            h.refresh();\n        },\n        hideForm: (isShow) => {\n            h.vm.isShow = !isShow;\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule: (id, rule, cover) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                cover ? Object.keys(rule).forEach(key => {\n                    parser.rule[key] = rule[key];\n                }) : deepExtend(parser.rule, rule);\n                return parser.rule.__origin__;\n            }\n        },\n        getRule: (id) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                return parser.rule;\n            }\n        },\n        updateRules(rules, cover) {\n            Object.keys(rules).forEach(id => {\n                this.updateRule(id, rules[id], cover);\n            })\n        },\n        updateValidate(id, validate, merge) {\n            const parser = h.getParser(id);\n            if (parser) {\n                parser.rule.validate = merge ? parser.rule.validate.concat(validate) : validate;\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                this.updateValidate(id, validates[id], merge);\n            })\n        },\n        method(id, name) {\n            const el = this.el(id);\n            if (!el || !el[name])\n                throw new Error('方法不存在' + errMsg());\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        toJson() {\n            return toJson(this.rule);\n        },\n        on(...args) {\n            h.vm.$on(...args);\n        },\n        once(...args) {\n            h.vm.$once(...args);\n        },\n        off(...args) {\n            h.vm.$off(...args);\n        },\n        trigger(id, event, ...args) {\n            const el = this.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const parser = h.getParser(id);\n            if (parser) return parser.el;\n        },\n        validate(callback) {\n            let state = false;\n            let subForm = {\n                ...{\n                    ___this: {\n                        validate(call) {\n                            h.$form.validate((valid) => {\n                                call && call(valid);\n                            });\n                        }\n                    }\n                }, ...h.subForm\n            };\n            let keys = Object.keys(subForm), len = keys.length, subLen;\n\n            const validFn = (valid, field) => {\n                if (valid) {\n                    if (subLen > 1) subLen--;\n                    else if (len > 1) len--;\n                    else callback(true);\n                } else {\n                    if (!state) {\n                        callback(false);\n                        state = true;\n                    }\n                    field && this.clearValidateState(field, false);\n                }\n            };\n\n            keys.forEach(field => {\n                let sub = subForm[field];\n                if (Array.isArray(sub)) {\n                    subLen = sub.length;\n                    sub.forEach(form => {\n                        form.validate((v) => validFn(v, field))\n                    })\n                } else if (sub) {\n                    subLen = 1;\n                    sub.validate(validFn)\n                }\n\n            });\n\n        },\n        validateField: (field, callback) => {\n            if (!h.fieldList[field])\n                return;\n            h.$form.validateField(field, callback);\n        },\n        resetFields(fields) {\n            let parsers = h.fieldList;\n            tidyFields(fields, true).forEach(field => {\n                let parser = parsers[field];\n                if (!parser) return;\n\n                if (parser.type === 'hidden') return;\n                h.$form.resetField(parser);\n                h.refreshControl(parser);\n                h.$render.clearCache(parser, true);\n            });\n        },\n        submit(successFn, failFn) {\n            this.validate((valid) => {\n                if (valid) {\n                    let formData = this.formData();\n                    if (isFunction(successFn))\n                        successFn(formData, this);\n                    else {\n                        h.options.onSubmit && h.options.onSubmit(formData, this);\n                        h.fc.$emit('on-submit', formData, this);\n                    }\n                } else {\n                    failFn && failFn(this)\n                }\n            });\n        },\n        clearValidateState(fields, clearSub = true) {\n            tidyFields(fields).forEach(field => {\n                if (clearSub) this.clearSubValidateState(field);\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.$form.clearValidateState(parser);\n            });\n        },\n        clearSubValidateState(fields) {\n            tidyFields(fields).forEach(field => {\n                const subForm = h.subForm[field];\n                if (subForm) {\n                    if (Array.isArray(subForm)) {\n                        subForm.forEach(form => {\n                            form.clearValidateState();\n                        })\n                    } else if (subForm) {\n                        subForm.clearValidateState();\n                    }\n                }\n            })\n        },\n        getSubForm(field) {\n            return h.subForm[field];\n        },\n        btn: {\n            loading: (loading = true) => {\n                h.vm._buttonProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._buttonProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._buttonProps({show: !!isShow});\n            }\n        },\n        resetBtn: {\n            loading: (loading = true) => {\n                h.vm._resetProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._resetProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._resetProps({show: !!isShow});\n            }\n        },\n        closeModal: (field) => {\n            const parser = h.fieldList[field];\n            parser && parser.closeModel && parser.closeModel();\n        }\n    };\n}\n","import {\n    $del,\n    $set, deepExtend,\n    errMsg,\n    extend,\n    isString,\n    isUndef,\n    isValidChildren,\n    isPlainObject,\n    toLine,\n    toString,\n    uniqueId,\n    isFunction\n} from '@form-create/utils';\nimport BaseParser from '../factory/parser';\nimport Render from './render';\nimport Api from './api';\nimport {copyRule, enumerable} from './util';\n\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport default class Handle {\n\n    constructor(fc) {\n        const {vm, rules, options} = fc;\n\n        this.watching = false;\n        this.vm = vm;\n        this.fc = fc;\n        this.options = options;\n\n        this.validate = {};\n        this.formData = {};\n        this.subForm = {};\n\n        this.fCreateApi = undefined;\n\n        this.__init(rules);\n        this.$form = new fc.drive.formRender(this);\n        this.$render = new Render(this);\n\n        this.loadRule(this.rules, false);\n\n        this.$render.initOrgChildren();\n\n        this.$form.init();\n    }\n\n    __init(rules) {\n        this.fieldList = {};\n        this.trueData = {};\n        this.parsers = {};\n        this.customData = {};\n        this.sortList = [];\n        this.rules = rules;\n        this.origin = [...this.rules];\n        this.changeStatus = false;\n    }\n\n    loadRule(rules, child) {\n        rules.map((_rule, index) => {\n            if (child && isString(_rule)) return;\n\n            if (!_rule.type)\n                return console.error('未定义生成规则的 type 字段' + errMsg());\n\n            let parser;\n\n            if (_rule.__fc__) {\n                parser = _rule.__fc__;\n\n                //规则在其他 form-create 中使用,自动浅拷贝\n                if (parser.vm !== this.vm && !parser.deleted) {\n                    _rule = copyRule(_rule);\n                    rules[index] = _rule;\n                    parser = this.createParser(this.parseRule(_rule));\n                } else {\n                    parser.update(this);\n                    let rule = parser.rule;\n                    this.parseOn(rule);\n                    this.parseProps(rule);\n                }\n            } else {\n                parser = this.createParser(this.parseRule(_rule));\n            }\n\n            let children = parser.rule.children, rule = parser.rule;\n            if (!this.notField(parser.field))\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            this.setParser(parser);\n\n            if (!_rule.__fc__) {\n                bindParser(_rule, parser);\n            }\n            if (isValidChildren(children)) {\n                this.loadRule(children, true);\n            }\n\n            if (!child) {\n                this.sortList.push(parser.id);\n            }\n\n            if (!this.isNoVal(parser))\n                Object.defineProperty(parser.rule, 'value', {\n                    get: () => {\n                        return parser.toValue(this.getFormData(parser));\n                    },\n                    set: (value) => {\n                        if (this.isChange(parser, value)) {\n                            this.$render.clearCache(parser, true);\n                            this.setFormData(parser, parser.toFormValue(value));\n                            this.valueChange(parser);\n                            this.refresh();\n                        }\n                    }\n                });\n\n            return parser;\n        }).filter(h => h).forEach(h => {\n            h.root = rules;\n        });\n    }\n\n    createParser(rule) {\n        const id = '' + uniqueId(), parsers = this.fc.parsers, type = toString(rule.type).toLocaleLowerCase();\n\n        const Parser = (parsers[type]) ? parsers[type] : BaseParser;\n\n        return new Parser(this, rule, id);\n    }\n\n    parseRule(_rule) {\n        const def = defRule(), rule = getRule(_rule);\n\n        Object.defineProperties(rule, {\n            __origin__: enumerable(_rule)\n        });\n\n        Object.keys(def).forEach(k => {\n            if (isUndef(rule[k])) $set(rule, k, def[k]);\n        });\n\n        if (rule.field && this.options.formData[rule.field] !== undefined)\n            rule.value = this.options.formData[rule.field];\n\n        rule.options = parseArray(rule.options);\n        this.parseOn(rule);\n        this.parseProps(rule);\n\n        return rule;\n    }\n\n    parseOn(rule) {\n        this.parseInjectEvent(rule, rule.on || {});\n        if (!this.watching) {\n            this.margeEmit(rule);\n        }\n    }\n\n    margeEmit(rule) {\n        const emitEvent = this.parseEmit(rule);\n        if (Object.keys(emitEvent).length > 0) extend(rule.on, emitEvent);\n    }\n\n    parseProps(rule) {\n        this.parseInjectEvent(rule, rule.props || {});\n    }\n\n    parseInjectEvent(rule, on) {\n        if (this.options.injectEvent || rule.inject)\n            Object.keys(on).forEach(k => {\n                if (isFunction(on[k]))\n                    on[k] = this.inject(rule, on[k])\n            });\n        return on;\n    }\n\n    getInjectData(self, inject) {\n        const {option, rule} = this.vm.$options.propsData;\n        return {\n            $f: this.fCreateApi,\n            rule,\n            self: self.__origin__,\n            option,\n            inject: inject || rule.inject || {}\n        };\n    }\n\n    inject(self, _fn, inject) {\n        if (_fn.__inject) {\n            if (this.watching)\n                return _fn;\n            _fn = _fn.__origin;\n        }\n\n        const h = this;\n\n        const fn = function (...args) {\n            args.unshift(h.getInjectData(self, inject));\n            return _fn(...args);\n        };\n        fn.__inject = true;\n        fn.__origin = _fn;\n        return fn;\n    }\n\n    parseEmit(rule) {\n        let event = {}, {emit, emitPrefix, field, name} = rule;\n\n        if (!Array.isArray(emit)) return event;\n        const emitKey = emitPrefix ? emitPrefix : (field || name);\n        if (!emitKey) return event;\n\n        emit.forEach(config => {\n            let inject, eventName = config;\n            if (isPlainObject(config)) {\n                eventName = config.name;\n                inject = config.inject;\n            }\n            if (!eventName) return;\n\n            const fieldKey = toLine(`${emitKey}-${eventName}`).replace('_', '-');\n\n            const fn = (...arg) => {\n                this.vm.$emit(fieldKey, ...arg);\n            };\n            fn.__emit = true;\n            event[eventName] = (this.options.injectEvent || config.inject !== undefined) ? this.inject(rule, fn, inject) : fn;\n        });\n\n        return event;\n    }\n\n    run() {\n        if (this.vm.unique > 0)\n            return this.$render.run();\n        else {\n            this.vm.unique = 1;\n            return [];\n        }\n    }\n\n    setParser(parser) {\n        let {id, field, name, rule} = parser;\n        if (this.parsers[id])\n            return;\n        this.parsers[id] = parser;\n\n        if (name)\n            $set(this.customData, name, parser);\n\n        if (this.isNoVal(parser)) return;\n        this.fieldList[field] = parser;\n        $set(this.formData, field, parser.toFormValue(rule.value));\n        $set(this.validate, field, rule.validate || []);\n        $set(this.trueData, field, parser);\n    }\n\n    addSubForm(parser, subForm) {\n        this.subForm[parser.field] = subForm;\n    }\n\n    notField(field) {\n        return this.fieldList[field] === undefined;\n    }\n\n    isChange(parser, value) {\n        return JSON.stringify(parser.rule.value) !== JSON.stringify(value);\n    }\n\n    valueChange(parser) {\n        this.validateControl(parser);\n    }\n\n    onInput(parser, value) {\n        let val;\n        if (!this.isNoVal(parser) && this.isChange(parser, val = parser.toValue(value))) {\n            this.$render.clearCache(parser);\n            this.setFormData(parser, value);\n            this.changeStatus = true;\n            this.valueChange(parser);\n            this.vm.$emit('change', parser.field, val);\n        }\n    }\n\n    getParser(id) {\n        if (this.fieldList[id])\n            return this.fieldList[id];\n        else if (this.customData[id])\n            return this.customData[id];\n        else if (this.parsers[id])\n            return this.parsers[id];\n    }\n\n    created() {\n        const vm = this.vm;\n\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'formData', this.formData);\n\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = Api(this);\n        this.fCreateApi.rule = this.rules;\n        this.fCreateApi.config = this.options;\n    }\n\n\n    addParserWitch(parser) {\n        const vm = this.vm;\n\n        Object.keys(parser.rule).forEach((key) => {\n            if (['field', 'type', 'value', 'vm', 'template', 'name', 'config', 'control'].indexOf(key) !== -1 || parser.rule[key] === undefined) return;\n            try {\n                parser.watch.push(vm.$watch(() => parser.rule[key], (n, o) => {\n                    if (o === undefined) return;\n                    this.watching = true;\n                    if (key === 'validate')\n                        this.validate[parser.field] = n;\n                    else if (key === 'props')\n                        this.parseProps(parser.rule);\n                    else if (key === 'on')\n                        this.parseOn(parser.rule);\n                    else if (key === 'emit')\n                        this.margeEmit(parser.rule);\n\n                    this.$render.clearCache(parser);\n                    this.watching = false;\n                }, {deep: key !== 'children', immediate: true}));\n            } catch (e) {\n                //\n            }\n        });\n    }\n\n    refreshControl(parser) {\n        if (!this.isNoVal(parser) && parser.rule.control) {\n            this.validateControl(parser);\n        }\n    }\n\n\n    validateControl(parser) {\n        const controls = getControl(parser), len = controls.length, ctrlRule = parser.ctrlRule;\n        if (!len) return;\n        for (let i = 0; i < len; i++) {\n            const control = controls[i], validate = control.handle || (val => val === control.value);\n            if (validate(parser.rule.value)) {\n                if (ctrlRule) {\n                    if (ctrlRule.children === control.rule)\n                        return;\n                    else\n                        removeControl(parser);\n                }\n                const rule = {\n                    type: 'fcFragment',\n                    native: true,\n                    children: control.rule\n                };\n                parser.root.splice(parser.root.indexOf(parser.rule.__origin__) + 1, 0, rule);\n                parser.ctrlRule = rule;\n                this.refresh();\n                return;\n            }\n        }\n        if (ctrlRule) {\n            removeControl(parser);\n            this.refresh();\n        }\n    }\n\n    mountedParser() {\n        const vm = this.vm;\n        Object.keys(this.parsers).forEach((id) => {\n            let parser = this.parsers[id];\n            if (parser.watch.length === 0) this.addParserWitch(parser);\n            this.refreshControl(parser);\n            parser.el = vm.$refs[parser.refName] || {};\n\n            if (parser.defaultValue === undefined)\n                parser.defaultValue = deepExtend({}, {value: parser.rule.value}).value;\n\n            parser.mounted && parser.mounted();\n        });\n    }\n\n    mounted() {\n        const mounted = this.options.mounted;\n\n        this.mountedParser();\n\n        mounted && mounted(this.fCreateApi);\n        this.fc.$emit('mounted', this.fCreateApi);\n    }\n\n    reload() {\n        const onReload = this.options.onReload;\n\n        this.mountedParser();\n\n        onReload && onReload(this.fCreateApi);\n        this.fc.$emit('on-reload', this.fCreateApi);\n    }\n\n    removeField(parser, value) {\n        const {id, field} = parser, index = this.sortList.indexOf(id);\n\n        delParser(parser, value);\n        $del(this.parsers, id);\n\n        if (index !== -1) {\n            this.sortList.splice(index, 1);\n        }\n\n        if (!this.fieldList[field]) {\n            $del(this.validate, field);\n            $del(this.formData, field);\n            $del(this.customData, field);\n            $del(this.fieldList, field);\n            $del(this.trueData, field);\n        }\n\n        if (this.subForm[parser.field])\n            $del(this.subForm, field);\n\n        return parser;\n    }\n\n    refresh() {\n        this.vm._refresh();\n    }\n\n    reloadRule(rules) {\n        const vm = this.vm;\n        if (!rules) return this.reloadRule(this.rules);\n        if (!this.origin.length) this.fCreateApi.refresh();\n        this.origin = [...rules];\n\n        const parsers = {...this.parsers};\n        const formData = this.fCreateApi.formData();\n        this.__init(rules);\n        this.loadRule(rules, false);\n        Object.keys(parsers).filter(id => this.parsers[id] === undefined)\n            .forEach(id => this.removeField(parsers[id], formData[parsers[id].field]));\n        this.$render.initOrgChildren();\n        this.formData = {...this.formData};\n        this.created();\n\n        vm.$f = this.fCreateApi;\n        this.$render.clearCacheAll();\n        this.refresh();\n\n        vm.$nextTick(() => {\n            this.reload();\n        });\n\n    }\n\n    setFormData(parser, value) {\n        $set(this.formData, parser.field, value);\n    }\n\n    getFormData(parser) {\n        return this.formData[parser.field];\n    }\n\n    fields() {\n        return Object.keys(this.formData);\n    }\n\n    isNoVal(parser) {\n        return !parser.isDef;\n    }\n\n}\n\nexport function delParser(parser, value) {\n    if (parser.ctrlRule)\n        removeControl(parser);\n    parser.watch.forEach((unWatch) => unWatch());\n    parser.watch = [];\n    parser.deleted = true;\n    parser.root = [];\n    Object.defineProperty(parser.rule, 'value', {\n        value\n    });\n}\n\nfunction parseArray(validate) {\n    return Array.isArray(validate) ? validate : [];\n}\n\nfunction getControl(parser) {\n    const control = parser.rule.control || [];\n    if (isPlainObject(control)) return [control];\n    else return control;\n}\n\nfunction removeControl(parser) {\n    const index = parser.root.indexOf(parser.ctrlRule);\n    if (index !== -1)\n        parser.root.splice(index, 1);\n    parser.ctrlRule = null;\n}\n\n\nfunction defRule() {\n    return {\n        validate: [],\n        col: {},\n        emit: [],\n        props: {},\n        on: {},\n        options: [],\n        title: undefined,\n        value: null,\n        field: '',\n        name: undefined,\n        className: undefined\n    };\n}\n\nfunction bindParser(rule, parser) {\n    Object.defineProperties(rule, {\n        __field__: enumerable(parser.field),\n        __fc__: enumerable(parser)\n    });\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        children: Array\n    },\n    render(h, ctx) {\n        return ctx.children\n    }\n}\n","import {\n    $set,\n    deepExtend,\n    extend,\n    isBool,\n    isElement,\n    toString,\n    isPlainObject\n} from '@form-create/utils';\nimport $FormCreate from '../components/formCreate';\nimport {formCreateName} from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from './handle';\nimport {creatorFactory} from '../factory/creator';\nimport BaseParser from '../factory/parser';\nimport {parseJson, copyRule, copyRules} from './util';\nimport fragment from '../components/fragment';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nexport default function createFormCreate(drive) {\n\n    const components = {}, parsers = {}, maker = makerFactory(), globalConfig = drive.getConfig(), data = {};\n\n    function setParser(id, parser) {\n        id = toString(id);\n        parsers[id.toLocaleLowerCase()] = parser;\n        FormCreate.maker[id] = creatorFactory(id);\n    }\n\n    function createParser() {\n        return class Parser extends BaseParser {\n        }\n    }\n\n    function component(id, component) {\n        id = toString(id);\n        const _id = id.toLocaleLowerCase();\n        if (_id === 'form-create' || _id === 'formcreate')\n            return get$FormCreate();\n        if (component === undefined)\n            return components[id];\n        else\n            components[id] = component;\n    }\n\n    function margeGlobal(config, _options) {\n        if (isBool(_options.submitBtn))\n            _options.submitBtn = {show: _options.submitBtn};\n\n        if (isBool(_options.resetBtn))\n            _options.resetBtn = {show: _options.resetBtn};\n\n        let options = deepExtend(config, _options);\n\n        $set(options, 'el', !options.el\n            ? window.document.body\n            : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n            ));\n\n        return options;\n    }\n\n    function get$FormCreate() {\n        return _vue.extend($FormCreate(FormCreate, components));\n    }\n\n\n    function bindAttr(formCreate) {\n        extend(formCreate, {\n            version: drive.version,\n            ui: drive.ui,\n            maker,\n            component,\n            setParser,\n            createParser,\n            data,\n            copyRule,\n            copyRules,\n            $form() {\n                return get$FormCreate();\n            },\n            parseJson(json) {\n                return parseJson(json);\n            }\n        });\n    }\n\n    function install(Vue, options) {\n        if (Vue._installedFormCreate === true) return;\n        Vue._installedFormCreate = true;\n\n        if (options && isPlainObject(options))\n            margeGlobal(globalConfig, options);\n\n        Vue.use(FormCreate);\n    }\n\n    function create(rules, option) {\n        const $vm = new _vue({\n            data() {\n                return {rule: rules, option: isElement(option) ? {el: option} : option};\n            },\n            render() {\n                return <form-create ref='fc' props={this.$data}/>\n            }\n        });\n        $vm.$mount();\n        return $vm;\n    }\n\n    class FormCreate {\n        constructor(rules, options = {}) {\n            this.fCreateApi = undefined;\n            this.drive = drive;\n            this.parsers = parsers;\n            this.vm = undefined;\n            this.rules = Array.isArray(rules) ? rules : [];\n            this.options = margeGlobal(deepExtend({formData: {}}, globalConfig), options);\n        }\n\n        beforeCreate(vm) {\n            this.vm = vm;\n            this.handle = new Handle(this);\n        }\n\n        created() {\n            this.handle.created();\n        }\n\n        api() {\n            return this.handle.fCreateApi;\n        }\n\n        render() {\n            return this.handle.run();\n        }\n\n        mounted() {\n            this.handle.mounted();\n        }\n\n        $emit(eventName, ...params) {\n            if (this.$parent)\n                this.$parent.$emit(`fc:${eventName}`, ...params);\n\n            this.vm.$emit(eventName, ...params);\n        }\n\n        static create(rules, _opt = {}, parent) {\n\n            let $vm = create(rules, _opt);\n\n            const _this = $vm.$refs.fc.formCreate;\n            _this.parent = parent;\n            _this.options.el.appendChild($vm.$el);\n\n            return _this.handle.fCreateApi;\n        }\n\n        static install(Vue) {\n            const $formCreate = function (rules, opt = {}) {\n                return FormCreate.create(rules, opt, this);\n            };\n\n            bindAttr($formCreate);\n\n            Vue.prototype.$formCreate = $formCreate;\n\n            Vue.component(formCreateName, get$FormCreate());\n            Vue.component(fragment.name, _vue.extend(fragment));\n            _vue = Vue;\n        }\n\n        static init(rules, _opt = {}) {\n            let $vm = create(rules, _opt), formCreate = $vm.$refs.fc.formCreate;\n\n            return {\n                mount($el) {\n                    if ($el && isElement($el))\n                        formCreate.options.el = $el;\n                    formCreate.options.el.appendChild($vm.$el);\n                    return formCreate.handle.fCreateApi;\n                },\n                remove() {\n                    formCreate.options.el.removeChild($vm.$el);\n                },\n                destroy() {\n                    this.remove();\n                    $vm.$destroy();\n                },\n                $f: formCreate.handle.fCreateApi\n            };\n        }\n    }\n\n    bindAttr(FormCreate);\n\n\n    drive.components.forEach(component => {\n        FormCreate.component(component.name, component);\n    });\n\n    drive.parsers.forEach(({name, parser}) => {\n        FormCreate.setParser(name, parser);\n    });\n\n    Object.keys(drive.makers).forEach(name => {\n        FormCreate.maker[name] = drive.makers[name];\n    });\n\n    return {\n        FormCreate,\n        install\n    };\n}\n","import VData from './vData';\nimport VNode from './vNode';\nimport {deepExtendArgs, uniqueId} from '@form-create/utils';\n\n\nexport default class BaseForm {\n\n    constructor(handle) {\n        this.$handle = handle;\n        this.vm = handle.vm;\n        this.drive = this.$handle.fc.drive;\n        this.options = handle.options;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.unique = uniqueId();\n        this.refName = `cForm${this.unique}`;\n    }\n\n    getFormRef() {\n        return this.vm.$refs[this.refName];\n    }\n\n    init() {\n        this.$render = this.$handle.$render;\n    }\n\n    getGetCol(parser) {\n        let col = parser.rule.col || {}, mCol = {}, pCol = {}, global = this.options.global;\n\n        if (!global)\n            return col;\n\n        if (global['*']) {\n            mCol = global['*'].col || {};\n        }\n\n        if (global[parser.type]) {\n            pCol = global[parser.type].col || {};\n        } else if (global[parser.originType]) {\n            pCol = global[parser.originType].col || {};\n        }\n        col = deepExtendArgs({}, mCol, pCol, col);\n        return col;\n    }\n\n    beforeRender() {\n\n    }\n\n    render() {\n\n    }\n\n    inputVData() {\n    }\n}\n","import {VNode, Vue} from '@form-create/core';\nimport {isUndef} from '@form-create/utils';\n\nconst vNode = new VNode({});\nconst Modal = (options, cb) => {\n    if (isUndef(options.width)) options.width = '30%';\n    return {\n        name: 'fc-modal',\n        data() {\n            return {\n                visible: true,\n                ...options\n            }\n        },\n        render() {\n            vNode.setVm(this);\n            return vNode.modal({\n                props: this.$data,\n                on: {\n                    close: this.onClose,\n                    closed: this.onClosed,\n                }\n            }, [cb(vNode, this)])\n        },\n        methods: {\n            onClose() {\n                this.visible = false;\n            },\n            onClosed() {\n                this.$el.parentNode.removeChild(this.$el);\n            }\n        }\n    }\n};\n\nexport function mount(options, content) {\n    let $modal = Vue.extend(Modal(options, content)), $vm = new $modal().$mount();\n    window.document.body.appendChild($vm.$el);\n}\n\nexport function defaultOnHandle(src, title) {\n    mount({title}, (vNode) => {\n        return vNode.make('img', {\n            style: {width: '100%'},\n            attrs: {src}\n        })\n    });\n}\n\nexport default Modal;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import {defaultOnHandle, mount} from '../../core/modal';\nimport style from '../../style/index.css';\nimport {isUndef, toArray, uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-frame';\n\nexport default {\n    name: NAME,\n    props: {\n        type: {\n            type: String,\n            default: 'input'\n        },\n        field: {\n            type: String,\n            default: ''\n        },\n        helper: {\n            type: Boolean,\n            default: true\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        src: {\n            type: String,\n            required: true\n        },\n        icon: {\n            type: String,\n            default: 'el-icon-upload2'\n        },\n        width: {\n            type: String,\n            default: '500px'\n        },\n        height: {\n            type: String,\n            default: '370px'\n        },\n        maxLength: {\n            type: Number,\n            default: 0\n        },\n        okBtnText: {\n            type: String,\n            default: '确定'\n        },\n        closeBtnText: {\n            type: String,\n            default: '关闭'\n        },\n        modalTitle: {\n            type: String,\n            default: '预览'\n        },\n        handleIcon: {\n            type: [String, Boolean],\n            default: undefined\n        },\n        title: String,\n        allowRemove: {\n            type: Boolean,\n            default: true\n        },\n        onOpen: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onOk: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onCancel: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onLoad: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onBeforeRemove: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onRemove: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onHandle: {\n            type: Function,\n            default(src) {\n                defaultOnHandle(src, this.modalTitle)\n            }\n        },\n        modal: {\n            type: Object,\n            default: () => ({})\n        },\n        srcKey: {\n            type: [String, Number]\n        },\n        value: [Array, String, Number]\n\n    },\n    data() {\n        return {\n            modalVm: null,\n            fileList: toArray(this.value),\n            unique: uniqueId()\n        }\n    },\n    watch: {\n        value(n) {\n            this.fileList = toArray(n);\n        },\n        fileList(n) {\n            const val = this.maxLength === 1 ? (n[0] || '') : n;\n            this.$emit('input', val);\n            this.$emit('change', val);\n        },\n        src(n) {\n            this.modalVm && (this.modalVm.src = n);\n        }\n    },\n    methods: {\n        key(unique) {\n            return NAME + unique + this.unique;\n        },\n        closeModel() {\n            this.modalVm && this.modalVm.onClose();\n            this.modalVm = null;\n        },\n\n        showModel() {\n            if (this.disabled || false === this.onOpen()) return;\n\n            const {width, height, src, title, okBtnText, closeBtnText} = this.$props;\n\n            mount({width, title, src, ...this.modal}, (vNode, _vm) => {\n                this.modalVm = _vm;\n                return [vNode.make('iframe', {\n                    attrs: {\n                        src: _vm.src\n                    },\n                    style: {\n                        'height': height,\n                        'border': '0 none',\n                        'width': '100%'\n                    },\n                    on: {\n                        'load': (e) => {\n                            this.onLoad(e);\n\n                            try {\n                                if (this.helper === true) {\n                                    let iframe = e.path[0].contentWindow;\n\n                                    iframe['form_create_helper'] = {\n                                        close: (field) => {\n                                            this.valid(field);\n                                            _vm.onClose();\n                                        },\n                                        set: (field, value) => {\n                                            this.valid(field);\n                                            if (!this.disabled)\n                                                this.$emit('input', value);\n\n                                        },\n                                        get: (field) => {\n                                            this.valid(field);\n                                            return this.value;\n                                        }\n                                    };\n\n                                }\n                            } catch (e) {\n                                console.log(e);\n                            }\n                        }\n                    },\n                }), vNode.make('div', {slot: 'footer'}, [\n                    vNode.button({\n                        on: {\n                            click: () => {\n\n                                this.onCancel() !== false && _vm.onClose();\n                            }\n                        }\n                    }, [closeBtnText]),\n                    vNode.button({\n                        props: {type: 'primary'}, on: {\n                            click: () => {\n                                this.onOk() !== false && _vm.onClose();\n                            }\n                        }\n                    }, [okBtnText])\n                ])]\n            });\n        },\n\n        makeInput() {\n            const props = {\n                type: 'text',\n                value: (this.fileList.map(v => this.getSrc(v))).toString(),\n                readonly: true\n            };\n\n            return <ElInput props={props} key={this.key('input')}>\n                {this.fileList.length ? <i slot=\"suffix\" class=\"el-input__icon el-icon-circle-close\"\n                    on-click={() => this.fileList = []}/> : null}\n                <ElButton icon={this.icon} on={{'click': () => this.showModel()}} slot=\"append\"/>\n            </ElInput>\n        },\n\n        makeGroup(children) {\n            if (!this.maxLength || this.fileList.length < this.maxLength)\n                children.push(this.makeBtn());\n            return <div class={style['fc-upload']} key={this.key('group')}>{...children}</div>\n        },\n\n        makeItem(index, children) {\n            return <div class={style['fc-files']} key={this.key('file' + index)}>{...children}</div>;\n        },\n        valid(field) {\n            if (field !== this.field)\n                throw new Error('frame 无效的字段值');\n        },\n\n        makeIcons(val, index) {\n            if (this.handleIcon !== false || this.allowRemove === true) {\n                const icons = [];\n                if ((this.type !== 'file' && this.handleIcon !== false) || (this.type === 'file' && this.handleIcon))\n                    icons.push(this.makeHandleIcon(val, index));\n                if (this.allowRemove)\n                    icons.push(this.makeRemoveIcon(val, index));\n\n                return <div class={style['fc-upload-cover']} key={this.key('uc')}>{icons}</div>\n            }\n        },\n        makeHandleIcon(val, index) {\n            return <i\n                class={(this.handleIcon === true || this.handleIcon === undefined) ? 'el-icon-view' : this.handleIcon}\n                on-click={() => this.handleClick(val)} key={this.key('hi' + index)}/>\n        },\n\n        makeRemoveIcon(val, index) {\n            return <i class=\"el-icon-delete\" on-click={() => this.handleRemove(val)} key={this.key('ri' + index)}/>\n        },\n\n        makeFiles() {\n            return this.makeGroup(this.fileList.map((src, index) => {\n                return this.makeItem(index, [<i class=\"el-icon-tickets\"\n                    on-click={() => this.handleClick(src)}/>, this.makeIcons(src, index)])\n            }))\n        },\n        makeImages() {\n            return this.makeGroup(this.fileList.map((src, index) => {\n                return this.makeItem(index, [<img src={this.getSrc(src)}/>, this.makeIcons(src, index)])\n            }))\n        },\n        makeBtn() {\n            return <div class={style['fc-upload-btn']} on-click={() => this.showModel()} key={this.key('btn')}>\n                <i class={this.icon}/>\n            </div>\n        },\n        handleClick(src) {\n            if (this.disabled) return;\n            return this.onHandle(src);\n        },\n        handleRemove(src) {\n            if (this.disabled) return;\n            if (false !== this.onBeforeRemove(src)) {\n                this.fileList.splice(this.fileList.indexOf(src), 1);\n                this.onRemove(src);\n            }\n        },\n        getSrc(src) {\n            return isUndef(this.srcKey) ? src : src[this.srcKey];\n        }\n    },\n    render() {\n        const type = this.type;\n\n        if (type === 'input')\n            return this.makeInput();\n        else if (type === 'image')\n            return this.makeImages();\n        else\n            return this.makeFiles();\n    }\n}\n","import {uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-radio';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        options: {\n            type: Array,\n            default: () => ([])\n        },\n        type: String,\n        unique: {\n            default: () => uniqueId()\n        },\n    },\n    render(h, ctx) {\n        return <ElRadioGroup {...ctx.data}>{ctx.props.options.map((opt, index) => {\n            const props = {...opt};\n            const Type = ctx.props.type === 'button' ? 'ElRadioButton' : 'ElRadio';\n            delete props.value;\n            return <Type {...{props}} key={NAME + Type + index + ctx.unique}/>;\n        }).concat(ctx.chlidren)}</ElRadioGroup>\n    }\n}\n","import {toDefSlot, uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-select';\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        options: {\n            type: Array,\n            default: () => ([])\n        },\n        unique: {\n            default: () => uniqueId()\n        },\n    },\n    render(h, ctx) {\n        return <ElSelect {...ctx.data}>{ctx.props.options.map((props, index) => {\n\n            const slot = props.slot ? toDefSlot(props.slot, h) : [];\n\n            return <ElOption {...{props}}\n                key={NAME + index + ctx.props.unique}>{slot}</ElOption>\n        }).concat(ctx.chlidren)}</ElSelect>;\n    }\n}","import {toArray} from '@form-create/utils';\n\n\nexport default {\n    name: 'fc-elm-tree',\n    props: {\n        ctx: {\n            type: Object,\n            default: () => ({props: {}})\n        },\n        children: {\n            type: Array,\n            default: () => ([])\n        },\n        type: {\n            type: String,\n            default: 'checked'\n        },\n        value: {\n            type: [Array, String, Number],\n            default: () => ([])\n        }\n    },\n    watch: {\n        value() {\n            this.setValue();\n        }\n    },\n    methods: {\n        makeTree() {\n            return <ElTree ref=\"tree\" on-check-change={() => this.updateValue()}\n                on-node-click={() => this.updateValue()} {...this.ctx}>{this.children}</ElTree>;\n        },\n        onChange() {\n            this.updateValue()\n        },\n\n        updateValue() {\n            const type = (this.type).toLocaleLowerCase();\n            let value;\n\n            if (type === 'selected')\n                value = this.$refs.tree.getCurrentKey();\n            else\n                value = this.$refs.tree.getCheckedKeys();\n\n            this.$emit('input', value);\n        },\n        setValue() {\n            const type = (this.type).toLocaleLowerCase();\n\n            if (type === 'selected')\n                this.$refs.tree.setCurrentKey(this.value);\n            else\n                this.$refs.tree.setCheckedKeys(toArray(this.value));\n        }\n    },\n    render() {\n        return this.makeTree();\n    },\n    mounted() {\n        this.setValue();\n        this.updateValue();\n    }\n}","import {hasSlot, toArray, toString, uniqueId} from '@form-create/utils';\nimport {defaultOnHandle} from '../../core/modal';\nimport style from '../../style/index.css';\n\nfunction parseFile(file) {\n    return {\n        url: file,\n        name: getFileName(file)\n    };\n}\n\nfunction getFileName(file) {\n    return toString(file).split('/').pop()\n}\n\nconst NAME = 'fc-elm-upload';\n\nexport default {\n    name: NAME,\n\n    props: {\n        ctx: {\n            type: Object,\n            default: () => ({props: {}})\n        },\n        children: {\n            type: Array,\n            default: () => ([])\n        },\n        onHandle: {\n            type: Function,\n            default(file) {\n                defaultOnHandle(file.url, this.modalTitle)\n            }\n        },\n        uploadType: {\n            type: String,\n            default: 'file'\n        },\n        maxLength: {\n            type: Number,\n            default: 0\n        },\n        allowRemove: {\n            type: Boolean,\n            default: true\n        },\n        modalTitle: {\n            type: String,\n            default: '预览'\n        },\n        handleIcon: [String, Boolean],\n        value: [Array, String]\n    },\n    data() {\n        return {\n            uploadList: [],\n            unique: uniqueId()\n        }\n    },\n    created() {\n        if (this.ctx.props.showFileList === undefined)\n            this.ctx.props.showFileList = false;\n        this.ctx.props.fileList = toArray(this.value).map(parseFile);\n    },\n    watch: {\n        value(n) {\n            if (this.$refs.upload.uploadFiles.every(file => {\n                return !file.status || file.status === 'success';\n            })) {\n                this.$refs.upload.uploadFiles = toArray(n).map(parseFile);\n                this.uploadList = this.$refs.upload.uploadFiles;\n            }\n        },\n        maxLength(n, o) {\n            if (o === 1 || n === 1)\n                this.update();\n        }\n    },\n    methods: {\n        key(unique) {\n            return NAME + unique + this.unique;\n        },\n        isDisabled() {\n            return this.ctx.props.disabled === true;\n        },\n        onRemove(file) {\n            if (this.isDisabled()) return;\n            this.$refs.upload.handleRemove(file);\n        },\n        handleClick(file) {\n            if (this.isDisabled()) return;\n            this.onHandle(file);\n        },\n\n        makeDefaultBtn() {\n            return <div class={style['fc-upload-btn']}>\n                <i class=\"el-icon-upload2\"/>\n            </div>\n        },\n        makeItem(file, index) {\n            return this.uploadType === 'image'\n                ? <img src={file.url} key={this.key('img' + index)}/>\n                : <i class=\"el-icon-tickets\" key={this.key('i' + index)}/>\n        },\n        makeRemoveIcon(file, index) {\n            return <i class=\"el-icon-delete\" on-click={() => this.onRemove(file)} key={this.key('ri' + index)}/>;\n        },\n        makeHandleIcon(file, index) {\n            return <i\n                class={(this.handleIcon === true || this.handleIcon === undefined) ? 'el-icon-view' : this.handleIcon}\n                on-click={() => this.handleClick(file)} key={this.key('hi' + index)}/>;\n        },\n        makeProgress(file, index) {\n            return <ElProgress props={{percentage: file.percentage, type: 'circle', width: 52}} style=\"margin-top:2px;\"\n                key={this.key('pg' + index)}/>\n        },\n        makeIcons(file, index) {\n            const icons = [];\n            if (this.allowRemove || this.handleIcon !== false) {\n                if ((this.uploadType !== 'file' && this.handleIcon !== false) || (this.uploadType === 'file' && this.handleIcon))\n                    icons.push(this.makeHandleIcon(file, index));\n                if (this.allowRemove)\n                    icons.push(this.makeRemoveIcon(file, index));\n\n                return <div class={style['fc-upload-cover']}>{icons}</div>;\n            }\n        },\n        makeFiles() {\n            return this.uploadList.map((file, index) => <div key={this.key(index)}\n                class={style['fc-files']}>{(file.percentage !== undefined && file.status !== 'success') ? this.makeProgress(file, index) : [this.makeItem(file, index), this.makeIcons(file, index)]}</div>);\n        },\n        makeUpload() {\n            return <ElUpload ref=\"upload\"\n                style={{display: 'inline-block'}} {...this.ctx}\n                key={this.key('upload')}>{this.children}</ElUpload>;\n        },\n        initChildren() {\n            if (!hasSlot(this.children, 'default'))\n                this.children.push(this.makeDefaultBtn());\n        },\n        update() {\n            let files = this.$refs.upload.uploadFiles.map((file) => file.url).filter((url) => url !== undefined);\n            this.$emit('input', this.maxLength === 1 ? (files[0] || '') : files);\n        }\n    },\n    render() {\n        const isShow = (!this.maxLength || this.maxLength > this.uploadList.length);\n\n        if (this.$refs.upload) {\n            if (this.ctx.props.showFileList === undefined)\n                this.ctx.props.showFileList = this.$refs.upload.showFileList;\n            this.ctx.props.fileList = this.$refs.upload.fileList;\n        }\n\n        this.initChildren();\n\n        return (\n            <div class={{\n                [style['fc-upload']]: true,\n                [style['fc-hide-btn']]: !isShow\n            }}>{[this.ctx.props.showFileList ? [] : this.makeFiles(), this.makeUpload()]}</div>);\n    },\n    mounted() {\n        this.uploadList = this.$refs.upload.uploadFiles;\n        this.$watch(() => this.$refs.upload.uploadFiles, () => {\n            this.update();\n        }, {deep: true});\n    }\n}","import {copyRules} from '@form-create/core';\n\nconst NAME = 'fc-elm-group';\n\nexport default {\n    name: NAME,\n    props: {\n        rule: Object,\n        rules: Array,\n        max: {\n            type: Number,\n            default: 0\n        },\n        min: {\n            type: Number,\n            default: 0\n        },\n        value: {\n            type: Array,\n            default: () => []\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            config: {\n                submitBtn: false,\n                resetBtn: false\n            },\n            len: 0,\n            cacheRule: {},\n            group$f: {},\n            fieldRule: {}\n        }\n    },\n    computed: {\n        formRule() {\n            if (this.rule) return [this.rule];\n            else if (this.rules) return this.rules;\n            return [];\n        },\n        formData() {\n            return Object.keys(this.fieldRule).map(key => {\n                const keys = Object.keys(this.fieldRule[key]);\n                return this.rule ? keys[0] === undefined ? null : this.fieldRule[key][keys[0]].value : keys.reduce((initial, field) => {\n                    initial[field] = this.fieldRule[key][field].value;\n                    return initial;\n                }, {});\n            })\n        }\n    },\n    watch: {\n        disabled(n) {\n            const lst = this.group$f;\n            Object.keys(lst).forEach(k => {\n                lst[k].disabled(n);\n            })\n        },\n        formData(n) {\n            this.$emit('input', n);\n            this.$emit('change', n);\n        },\n        value(n) {\n            let keys = Object.keys(this.cacheRule), total = keys.length, len = total - n.length;\n            if (len < 0) {\n                for (let i = len; i < 0; i++) {\n                    this.addRule();\n                }\n                for (let i = 0; i < total; i++) {\n                    this.setValue(this.group$f[keys[i]], n[i]);\n                }\n            } else {\n                if (len > 0) {\n                    for (let i = 0; i < len; i++) {\n                        this.removeRule(keys[total - i - 1]);\n                    }\n                    this.subForm();\n                }\n\n                n.forEach((val, i) => {\n                    this.setValue(this.group$f[keys[i]], n[i]);\n                });\n            }\n        }\n    },\n    methods: {\n        setValue($f, value) {\n            if (this.rule) {\n                const fields = $f.fields();\n                if (!fields[0]) return;\n                $f.setValue(fields[0], value);\n            } else {\n                $f.setValue(value);\n            }\n        },\n        addRule(emit) {\n            const rule = this.copyRule();\n            this.$set(this.cacheRule, ++this.len, rule);\n            if (emit)\n                this.$emit('add', rule, Object.keys(this.cacheRule).length - 1);\n        },\n        add$f(i, key, $f) {\n            this.group$f[key] = $f;\n            this.setValue($f, this.value[i]);\n            this.syncData(key, $f);\n            this.subForm();\n            this.$emit('itemMounted', $f, Object.keys(this.cacheRule).indexOf(key));\n        },\n        subForm() {\n            this.$emit('fc.subForm', Object.keys(this.group$f).map(k => this.group$f[k]));\n        },\n        syncData(key, $f) {\n            this.$set(this.fieldRule, key, {});\n            $f.fields().forEach(field => {\n                this.fieldRule[key][field] = $f.getRule(field);\n            });\n        },\n        removeRule(key, emit) {\n            const index = Object.keys(this.cacheRule).indexOf(key);\n            this.$delete(this.cacheRule, key);\n            this.$delete(this.fieldRule, key);\n            this.$delete(this.group$f, key);\n            if (emit)\n                this.$emit('remove', index);\n        },\n        copyRule() {\n            return copyRules(this.formRule);\n        },\n        addIcon(key) {\n            return <i key={`a${key}`} class=\"el-icon-circle-plus-outline\"\n                style={`font-size:28px;cursor:${this.disabled ? 'not-allowed;color:#c9cdd4' : 'pointer'};`}\n                on-click={() => (!this.disabled) && this.addRule(true)}/>;\n        },\n        delIcon(key) {\n            return <i key={`d${key}`} class=\"el-icon-remove-outline\"\n                style={`font-size:28px;cursor:${this.disabled ? 'not-allowed;color:#c9cdd4' : 'pointer;color:#606266'};`}\n                on-click={() => {\n                    if (this.disabled) return;\n                    this.removeRule(key, true);\n                    this.subForm();\n                }}/>;\n        },\n        makeIcon(total, index, key) {\n            if (index === 0) {\n                return [(this.max !== 0 && total >= this.max) ? null : this.addIcon(key), (this.min === 0 || total > this.min) ? this.delIcon(key) : null];\n            } else if (index >= this.min) {\n                return this.delIcon(key);\n            }\n        }\n    },\n    created() {\n        for (let i = 0; i < this.value.length; i++) {\n            this.addRule();\n        }\n\n    },\n    render() {\n        const keys = Object.keys(this.cacheRule);\n        return keys.length === 0 ?\n            <i key={'a_def'} class=\"el-icon-circle-plus-outline\"\n                style={`font-size:28px;vertical-align:middle;color:${this.disabled ? '#c9cdd4;cursor: not-allowed' : '#606266;cursor:pointer'};`}\n                on-click={() => (!this.disabled) && this.addRule(true)}/> :\n            <div key={'con'}>{keys.map((key, index) => {\n                const rule = this.cacheRule[key];\n                return <ElRow align=\"middle\" type=\"flex\" key={key}\n                    style=\"background-color:#f5f7fa;padding:10px;border-radius:5px;margin-bottom:10px;\">\n                    <ElCol span={20}><ElFormItem><FormCreate\n                        on-mounted={($f) => this.add$f(index, key, $f)}\n                        on-on-reload={($f) => this.syncData(key, $f)} rule={rule}\n                        option={this.config}/></ElFormItem></ElCol>\n                    <ElCol span={2} pull={1} push={1}>{this.makeIcon(keys.length, index, key)}</ElCol></ElRow>\n            })}</div>\n    }\n}\n","import checkbox from './checkbox';\nimport frame from './frame';\nimport radio from './radio';\nimport select from './select';\nimport tree from './tree';\nimport upload from './upload';\nimport group from './group';\n\n\nexport default [\n    checkbox,\n    frame,\n    radio,\n    select,\n    tree,\n    upload,\n    group\n]\n","import {BaseParser} from '@form-create/core';\n\nexport default class parser extends BaseParser {\n\n    render(children) {\n        const data = this.$render.inputVData(this, true).get();\n        return this.vNode.checkbox({\n            props: {\n                ctx: data,\n                type: data.props.type,\n                options: this.rule.options,\n                value: this.$handle.getFormData(this),\n                children\n            },\n            on: {\n                input: (n) => {\n                    this.$render.onInput(this, n);\n                }\n            }\n        });\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'checkbox';\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {timeStampToDate} from '@form-create/utils';\n\nexport default class Parser extends BaseParser {\n\n    toFormValue(value) {\n        let isArr = Array.isArray(value), props = this.rule.props, parseValue, type = props.type || 'date';\n        if (['daterange', 'datetimerange', 'dates'].indexOf(type) !== -1) {\n            if (isArr) {\n                parseValue = value.map((time) => !time ? '' : timeStampToDate(time));\n            } else {\n                parseValue = ['', '']\n            }\n        } else if ('date' === type && props.multiple === true) {\n            parseValue = toString(value);\n        } else {\n            parseValue = isArr ? (value[0] || '') : value;\n            parseValue = !parseValue ? '' : timeStampToDate(parseValue);\n        }\n        return parseValue;\n    }\n\n    mounted() {\n        this.toValue = (val) => (this.el.formatToString(val) || '');\n        this.toFormValue = (val) => this.el.parseString(val);\n    }\n}\n","import parser from './parser';\n\nconst name = 'datePicker';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        const data = this.$render.inputVData(this).props('field', this.field);\n\n        return this.vNode.frame(data, children);\n    }\n\n    closeModel() {\n        this.el.closeModel && this.el.closeModel();\n    }\n\n}\n","import parser from './parser';\n\nconst name = 'frame';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nconst name = 'hidden';\n\nclass parser extends BaseParser {\n    render() {\n        return [];\n    }\n}\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {$set} from '@form-create/utils';\n\n\nexport default class Parser extends BaseParser {\n    init() {\n        let {props} = this.rule;\n        if (props.autosize && props.autosize.minRows)\n            $set(props, 'rows', props.autosize.minRows || 2);\n    }\n}\n","import parser from './parser';\n\nconst name = 'input';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nexport default class Parser extends BaseParser {\n    toFormValue(value) {\n        return this.rule.options.filter((opt) => opt.value === value).reduce((initial, opt) => opt.label, '')\n    }\n\n    toValue(parseValue) {\n        return this.rule.options.filter((opt) => opt.label === parseValue).reduce((initial, opt) => opt.value, '')\n    }\n\n    render(children) {\n        return this.vNode.radio(this.$render.inputVData(this).props({\n            'options': this.rule.options,\n        }), children);\n    }\n\n}","import parser from './parser';\n\nconst name = 'radio';\n\nexport default {parser, name};","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        return this.vNode.select(this.$render.inputVData(this).props('options', this.rule.options), children);\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'select';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n    toFormValue(value) {\n        let rule = this.rule, isArr = Array.isArray(value), props = rule.props, min = props.min || 0,\n            parseValue;\n        if (props.range === true) {\n            parseValue = isArr ? value : [min, (parseFloat(value) || min)];\n        } else {\n            parseValue = isArr ? (parseFloat(value[0]) || min) : parseFloat(value);\n        }\n        return parseValue;\n    }\n\n}\n","import parser from './parser';\n\nconst name = 'slider';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nexport default class parser extends BaseParser {\n    render(children) {\n        return this.vNode.switch(this.$render.inputVData(this).get(), children);\n    }\n}\n","import parser from './parser';\n\nconst name = 'switch';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {dateFormat, isDate, timeStampToDate} from '@form-create/utils';\n\n\nexport function getTime(date) {\n    return isDate(date)\n        ? dateFormat('hh:mm:ss', date)\n        : date;\n}\n\nexport function toDate(time) {\n    return new Date('2018/02/14 ' + time);\n}\n\nexport default class Parser extends BaseParser {\n\n    toFormValue(value) {\n        let parseValue, isArr = Array.isArray(value);\n        if (this.rule.props.isRange === true) {\n            if (isArr) {\n                parseValue = value.map((time) => !time ? '' : toDate(getTime(timeStampToDate(time)))).filter(n => !!n);\n                if (parseValue.length !== 2) parseValue = null;\n            } else {\n                parseValue = null;\n            }\n        } else {\n            isArr && (value = value[0]);\n            parseValue = !value ? null : toDate(getTime(timeStampToDate(value)));\n        }\n        return parseValue;\n    }\n\n    mounted() {\n        this.toValue = (val) => this.el.formatToString(val);\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'timePicker';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {isUndef, $set} from '@form-create/utils';\n\nexport default class Parser extends BaseParser {\n\n    init() {\n        const props = this.rule.props;\n        if (isUndef(props.nodeKey)) $set(props, 'nodeKey', 'id');\n        if (isUndef(props.props)) $set(props, 'props', {\n            label: 'title'\n        });\n    }\n\n    render(children) {\n        const data = this.$render.parserToData(this).get();\n        return this.vNode.tree({\n            props: {\n                ctx: data,\n                children,\n                value: this.$handle.getFormData(this),\n                type: data.props.type\n            },\n            ref: this.refName,\n            key: this.key,\n            on: {\n                input: (value) => {\n                    this.$render.onInput(this, value);\n                }\n            }\n        });\n    }\n}\n","import parser from './parser';\n\nconst name = 'tree';\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n\n        const ctx = this.$render.parserToData(this).get();\n        const {key, refName} = this;\n        delete ctx.props.fileList;\n        const props = {\n            uploadType: ctx.props.uploadType,\n            maxLength: ctx.props.limit,\n            modalTitle: ctx.props.modalTitle,\n            handleIcon: ctx.props.handleIcon,\n            onHandle: ctx.props.onHandle,\n            allowRemove: ctx.props.allowRemove,\n            value: this.$handle.getFormData(this),\n            ctx,\n            children\n        };\n        return this.vNode.upload({\n            props,\n            key,\n            ref: refName,\n            on: {\n                input: (n) => {\n                    this.$render.onInput(this, n);\n                }\n            }\n        });\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'upload';\n\n\nexport default {parser, name};\n","import checkbox from './checkbox';\nimport datePicker from './datePicker';\nimport frame from './frame';\nimport hidden from './hidden';\nimport input from './input';\nimport radio from './radio';\nimport select from './select';\nimport slider from './slider';\nimport iswitch from './switch';\nimport timePicker from './timePicker';\nimport tree from './tree';\nimport upload from './upload';\n\nexport default [\n    checkbox,\n    datePicker,\n    frame,\n    hidden,\n    input,\n    radio,\n    select,\n    slider,\n    iswitch,\n    timePicker,\n    tree,\n    upload\n]","export default function getConfig() {\n    return {\n        form: {\n            inline: false,\n            labelPosition: 'right',\n            labelSuffix: undefined,\n            hideRequiredAsterisk: false,\n            labelWidth: '125px',\n            showMessage: true,\n            inlineMessage: false,\n            statusIcon: false,\n            validateOnRuleChange: true,\n            disabled: false,\n            size: undefined,\n        },\n        row: {\n            gutter: 0,\n            type: undefined,\n            align: undefined,\n            justify: undefined,\n            tag: 'div'\n        },\n        info: {\n            type: 'popover',\n            trigger: 'hover',\n            placement: 'top-start',\n            icon: 'el-icon-warning'\n        },\n        submitBtn: {\n            type: 'primary',\n            size: 'medium',\n            plain: false,\n            round: false,\n            circle: false,\n            loading: false,\n            disabled: false,\n            icon: 'el-icon-upload',\n            width: '100%',\n            autofocus: false,\n            nativeType: 'button',\n            innerText: '提交',\n            show: true,\n            col: undefined,\n            click: undefined,\n        },\n        resetBtn: {\n            type: 'default',\n            size: 'medium',\n            plain: false,\n            round: false,\n            circle: false,\n            loading: false,\n            disabled: false,\n            icon: 'el-icon-refresh',\n            width: '100%',\n            autofocus: false,\n            nativeType: 'button',\n            innerText: '重置',\n            show: false,\n            col: undefined,\n            click: undefined,\n        },\n    };\n}\n","export default {\n    modal: 'el-dialog',\n    button: 'el-button',\n    icon: 'i',\n    slider: 'el-slider',\n    rate: 'el-rate',\n    upload: 'fc-elm-upload',\n    cascader: 'el-cascader',\n    colorPicker: 'el-color-picker',\n    timePicker: 'el-time-picker',\n    datePicker: 'el-date-picker',\n    'switch': 'el-switch',\n    select: 'fc-elm-select',\n    checkbox: 'fc-elm-checkbox',\n    radio: 'fc-elm-radio',\n    inputNumber: 'el-input-number',\n    input: 'el-input',\n    formItem: 'el-form-Item',\n    form: 'el-form',\n    frame: 'fc-elm-frame',\n    col: 'el-col',\n    row: 'el-row',\n    tree: 'fc-elm-tree',\n    autoComplete: 'el-autocomplete',\n    group: 'fc-elm-group',\n}\n","import {isFunction, preventDefault, toString, isString, isType} from '@form-create/utils';\nimport {BaseForm} from '@form-create/core';\nimport style from '../style/index.css';\n\nconst upperCaseReg = /[A-Z]/;\n\nexport function isAttr(name, value) {\n    return (!upperCaseReg.test(name) && (isString(value) || isType(value, 'Number')))\n}\n\nfunction isTooltip(info) {\n    return info.type === 'tooltip';\n}\n\nexport default class Form extends BaseForm {\n\n    inputVData(parser) {\n        const props = parser.rule.props || {};\n        parser.vData.attrs(Object.keys(props).reduce((initial, val) => {\n            if (isAttr(val, props[val]))\n                initial[val] = props[val];\n            return initial;\n        }, {}));\n        if (!props.size && this.options.form.size)\n            parser.vData.props('size', this.options.form.size);\n    }\n\n    validate(call) {\n        this.getFormRef().validate((valid) => {\n            call && call(valid);\n        });\n    }\n\n    validateField(field, call) {\n        this.getFormRef().validateField(field, call);\n    }\n\n    resetField(parser) {\n        this.vm.$refs[parser.formItemRefName].resetField();\n    }\n\n    clearValidateState(parser) {\n        const fItem = this.vm.$refs[parser.formItemRefName];\n        if (fItem) {\n            fItem.validateMessage = '';\n            fItem.validateState = '';\n        }\n    }\n\n    beforeRender() {\n        this.propsData = this.vData.props(this.options.form).props({\n            model: this.$handle.formData,\n            rules: this.$handle.validate,\n            key: 'form' + this.unique\n        }).ref(this.refName).nativeOn({submit: preventDefault}).class(this.options.form.className).class('form-create', true).key(this.unique).get();\n    }\n\n    render(vn) {\n        if (vn.length > 0)\n            vn.push(this.makeFormBtn());\n\n        return this.vNode.form(this.propsData, [this.makeRow(vn)]);\n    }\n\n    makeRow(vn) {\n        return this.vNode.row({props: this.options.row || {}, key: 'fr' + this.unique}, vn)\n    }\n\n    container(child, parser) {\n        return this.makeFormItem(parser, child);\n    }\n\n    makeFormItem(parser, child) {\n        let fItemUnique = `fItem${parser.key}${this.unique}`,\n            {rule, field, formItemRefName} = parser,\n            col = this.getGetCol(parser),\n            labelWidth = (!col.labelWidth && !rule.title) ? 0 : col.labelWidth,\n            propsData = this.vData.props({\n                prop: field,\n                // label: rule.title,\n                // labelFor: unique,\n                rules: rule.validate,\n                labelWidth: toString(labelWidth),\n                required: rule.props.required\n            }).key(fItemUnique).ref(formItemRefName).class(rule.className).get(),\n            node = this.vNode.formItem(propsData, [child, this.makeFormPop(parser, fItemUnique)]);\n        return this.propsData.props.inline === true ? node : this.makeCol(col, parser, fItemUnique, [node]);\n    }\n\n    makeFormPop({rule}, unique) {\n        if (rule.title) {\n            const info = this.options.info || {}, svn = [rule.title];\n            if (rule.info) {\n                svn.push(this.vNode.make(isTooltip(info) ? 'el-tooltip' : 'el-popover', {\n                    props: {...info, content: rule.info},\n                    key: `pop${unique}`\n                }, [\n                    this.vNode.icon({\n                        class: [info.icon || 'el-icon-warning'],\n                        slot: isTooltip(info) ? 'default' : 'reference'\n                    })\n                ]));\n            }\n            return this.vNode.make('span', {slot: 'label'}, svn);\n        }\n    }\n\n    makeCol(col, parser, fItemUnique, VNodeFn) {\n        if (col.span === undefined)\n            col.span = 24;\n        return this.vNode.col({\n            props: col, 'class': {\n                [style.__fc_h]: !!parser.rule.hidden,\n                [style.__fc_v]: !!parser.rule.visibility\n            }, key: `${fItemUnique}col1`\n        }, VNodeFn);\n    }\n\n    makeFormBtn() {\n        let btn = [],\n            submitBtnShow = false !== this.vm.buttonProps && false !== this.vm.buttonProps.show,\n            resetBtnShow = false !== this.vm.resetProps && false !== this.vm.resetProps.show;\n        if (submitBtnShow)\n            btn.push(this.makeSubmitBtn(resetBtnShow ? 19 : 24));\n        if (resetBtnShow)\n            btn.push(this.makeResetBtn(4));\n\n        return this.propsData.props.inline === true\n            ? btn\n            : (btn.length ? this.vNode.col({\n                props: {span: 24},\n                key: `${this.unique}col2`\n            }, btn) : []);\n    }\n\n    makeResetBtn(span) {\n        const resetBtn = this.vm.resetProps,\n            props = resetBtn.col || {span: span, push: 1};\n\n        return this.vNode.col({props: props, key: `${this.unique}col3`}, [\n            this.vNode.button({\n                key: `frsbtn${this.unique}`, props: resetBtn, on: {\n                    'click': () => {\n                        const fApi = this.$handle.fCreateApi;\n                        isFunction(resetBtn.click)\n                            ? resetBtn.click(fApi)\n                            : fApi.resetFields();\n                    }\n                }, style: {width: resetBtn.width}\n            }, [resetBtn.innerText])\n        ]);\n    }\n\n    makeSubmitBtn(span) {\n        const submitBtn = this.vm.buttonProps,\n            props = submitBtn.col || {span: span};\n\n        return this.vNode.col({props: props, key: `${this.unique}col4`}, [\n            this.vNode.button({\n                key: `fbtn${this.unique}`, props: submitBtn, on: {\n                    'click': () => {\n                        const fApi = this.$handle.fCreateApi;\n                        isFunction(submitBtn.click)\n                            ? submitBtn.click(fApi)\n                            : fApi.submit();\n                    }\n                }, style: {width: submitBtn.width}\n            }, [submitBtn.innerText])\n        ]);\n    }\n}\n","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'datePicker';\n\nexport default ['year', 'month', 'date', 'dates', 'week', 'datetime', 'datetimeRange', 'dateRange'].reduce((initial, type) => {\n    initial[type] = creatorTypeFactory(name, type.toLowerCase());\n    return initial\n}, {});","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'frame';\n\nconst types = {\n    frameInputs: ['input', 0],\n    frameFiles: ['file', 0],\n    frameImages: ['image', 0],\n    frameInputOne: ['input', 1],\n    frameFileOne: ['file', 1],\n    frameImageOne: ['image', 1]\n};\n\nconst maker = Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, m => m.props({type: types[key][0], maxLength: types[key][1]}));\n    return maker\n}, {});\n\n\nmaker.frameInput = maker.frameInputs;\nmaker.frameFile = maker.frameFiles;\nmaker.frameImage = maker.frameImages;\n\nexport default maker;","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'input';\n\nconst maker = ['password', 'url', 'email', 'text', 'textarea'].reduce((maker, type) => {\n    maker[type] = creatorTypeFactory(name, type);\n    return maker;\n}, {});\n\nmaker.idate = creatorTypeFactory(name, 'date');\n\nexport default maker;","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'select';\n\nexport default {\n    selectMultiple: creatorTypeFactory(name, true, 'multiple'),\n    selectOne: creatorTypeFactory(name, false, 'multiple'),\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'slider';\n\nexport default {\n    sliderRange: creatorTypeFactory(name, true, 'range')\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'timePicker';\n\nexport default {\n    time: creatorTypeFactory(name, (m) => m.props.isRange = false),\n    timeRange: creatorTypeFactory(name, (m) => m.props.isRange = true)\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'tree';\n\nconst types = {'treeSelected': 'selected', 'treeChecked': 'checked'};\n\nexport default Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, types[key]);\n    return maker;\n}, {});","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'upload';\n\nconst types = {\n    image: ['image', 0],\n    file: ['file', 0],\n    uploadFileOne: ['file', 1],\n    uploadImageOne: ['image', 1],\n};\n\nconst maker = Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, m => m.props({uploadType: types[key][0], maxLength: types[key][1]}));\n    return maker\n}, {});\n\nmaker.uploadImage = maker.image;\nmaker.uploadFile = maker.file;\n\nexport default maker;","import {creatorFactory} from '@form-create/core';\nimport datePicker from './datePicker';\nimport frame from './frame';\nimport input from './input';\nimport select from './select';\nimport slider from './slider';\nimport timePicker from './timePicker';\nimport tree from './tree';\nimport upload from './upload';\n\nconst maker = {...datePicker, ...frame, ...input, ...select, ...slider, ...timePicker, ...tree, ...upload},\n    names = ['autoComplete', 'cascader', 'colorPicker', 'datePicker', 'frame', 'inputNumber', 'radio', 'rate'];\n\nnames.forEach(name => {\n    maker[name] = creatorFactory(name);\n});\n\nmaker.auto = maker.autoComplete;\nmaker.number = maker.inputNumber;\nmaker.color = maker.colorPicker;\nmaker.hidden = (field, value) => creatorFactory('hidden')('', field, value);\n\nexport default maker;","import components from '../components';\nimport parsers from '../parsers';\nimport getConfig from './config';\nimport nodes from './nodes';\nimport formRender from './form';\nimport createFormCreate, {VNode} from '@form-create/core';\nimport makers from '../makers';\n\nVNode.use(nodes);\n\nexport const drive = {\n    ui: process.env.UI,\n    version: `${process.env.VERSION}`,\n    formRender,\n    components,\n    parsers,\n    makers,\n    getConfig,\n};\n\nconst {FormCreate, install} = createFormCreate(drive);\n\nif (typeof window !== 'undefined') {\n    window.formCreate = FormCreate;\n    if (window.Vue) {\n        install(window.Vue);\n    }\n}\n\nexport default FormCreate;\n","import FormCreate from './core/index';\n\n\nconst maker = FormCreate.maker;\n\nexport {maker}\n\nexport default FormCreate;\n"],"names":["_extends","Object","assign","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","apply","this","normalMerge","toArrayMerge","functionalMerge","mergeJsxProps","reduce","indexOf","Array","e","concat","f","g","h","i","mergeFn","$set","target","field","value","Vue","set","$del","delete","isValidChildren","children","isArray","_toString","toString","isUndef","v","val","_typeof","JSON","stringify","String","extend","to","_from","key","debounce","fn","wait","timeout","arg","clearTimeout","setTimeout","isType","type","isDate","isPlainObject","isFunction","isString","isBool","toLine","name","line","replace","toLowerCase","substr","toArray","isElement","nodeType","deepExtend","origin","isArr","clone","nst","undefined","deepExtendArgs","lst","forEach","id","uniqueId","toDefSlot","slot","$h","timeStampToDate","timeStamp","date","Date","preventDefault","dateFormat","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","k","test","RegExp","$1","getFullYear","hasSlot","slotName","some","child","data","errMsg","NAME","props","options","default","ctx","watch","update","trueValue","unique","methods","onInput","n","$emit","filter","opt","label","map","_this","option","created","render","_this2","index","Type","chlidren","formCreateName","$FormCreate","FormCreate","components","componentName","rule","required","formData","buttonProps","resetProps","$f","isShow","formCreate","_buttonProps","_resetProps","_refresh","handle","reloadRule","beforeCreate","$options","propsData","api","mounted","beforeDestroy","$render","clearCacheAll","defVData","on","VData","init","_data","_mergeJsxProps","classList","status","merge","class","keys","initial","keyList","objList","obj","vdataField","baseRule","validate","col","control","emit","template","emitPrefix","native","info","creatorFactory","title","Creator","creatorTypeFactory","typeName","maker","keyAttrs","attr","objAttrs","arrAttrs","toJson","getRule","_isVue","__inject","__origin","__emit","parseJson","json","parse","eval","console","error","enumerable","configurable","copyRule","copyRules","rules","r","commonMaker","create","make","createTmp","vm","makerFactory","toMaker","ruleToMaker","defineProperties","find","findField","model","parseVData","domProps","innerHTML","get","getVNode","VNode","setVm","$createElement","nodeName","VNodeFn","Node","context","nodes","toLocaleLowerCase","BaseParser","vData","vNode","originType","isDef","el","refName","formItemRefName","root","ctrlRule","$handle","deleted","formValue","$de","Render","fc","$form","cache","renderList","parser","clear","cacheStatus","refresh","parent","clearCache","vnode","use","parsers","orgChildren","beforeRender","vn","sortList","renderParser","global","toData","compile","getInjectData","setTemplateProps","fCreateApi","$off","$on","setGlobalConfig","form","renderTemplate","setCache","isNoVal","defaultRender","renderChildren","container","getCache","custom","parserToData","ref","subForm","_this3","addSubForm","getFormData","inputVData","__fc__","_this4","removeField","vdata","fApi","$props","Api","tidyFields","fields","all","fieldList","getValue","setValue","changeValue","changeField","getParser","__field__","splice","reload","__origin__","destroy","$el","parentNode","removeChild","$destroy","append","after","isChild","prepend","hidden","hiddenStatus","visibility","visibilityStatus","disabled","trueData","component","customData","bind","properties","submitBtnProps","resetBtnProps","node","updateOptions","onSubmit","sync","hideForm","changeStatus","clearChangeStatus","updateRule","cover","updateRules","updateValidate","updateValidates","validates","method","Error","once","$once","off","trigger","event","args","callback","subLen","state","___this","valid","len","validFn","clearValidateState","sub","validateField","resetFields","resetField","refreshControl","submit","successFn","failFn","clearSub","_this5","clearSubValidateState","getSubForm","btn","loading","show","resetBtn","closeModal","closeModel","Handle","watching","__init","drive","formRender","loadRule","initOrgChildren","_rule","parseOn","parseProps","createParser","parseRule","notField","setParser","bindParser","push","defineProperty","toValue","isChange","setFormData","toFormValue","valueChange","def","defRule","parseArray","parseInjectEvent","margeEmit","emitEvent","parseEmit","injectEvent","inject","self","_fn","unshift","emitKey","config","eventName","fieldKey","run","validateControl","submitBtn","$watch","deep","immediate","controls","getControl","removeControl","_this6","addParserWitch","$refs","defaultValue","mountedParser","onReload","delParser","_this7","$nextTick","unWatch","className","functional","_vue","window","createFormCreate","globalConfig","getConfig","_id","get$FormCreate","margeGlobal","_options","document","querySelector","body","bindAttr","version","ui","$vm","$data","$mount","params","$parent","_opt","appendChild","$formCreate","fragment","mount","remove","makers","install","_installedFormCreate","BaseForm","mCol","pCol","Modal","cb","width","visible","modal","close","onClose","closed","onClosed","content","defaultOnHandle","src","style","attrs","styleInject","css","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","styleSheet","cssText","createTextNode","helper","Boolean","icon","height","maxLength","Number","okBtnText","closeBtnText","modalTitle","handleIcon","allowRemove","onOpen","Function","onOk","onCancel","onLoad","onBeforeRemove","onRemove","onHandle","srcKey","modalVm","fileList","showModel","_vm","path","contentWindow","log","button","click","makeInput","getSrc","readonly","makeGroup","makeBtn","makeItem","makeIcons","icons","makeHandleIcon","makeRemoveIcon","handleClick","handleRemove","makeFiles","makeImages","makeTree","updateValue","onChange","tree","getCurrentKey","getCheckedKeys","setCurrentKey","setCheckedKeys","parseFile","file","url","getFileName","split","pop","uploadType","uploadList","showFileList","upload","uploadFiles","every","isDisabled","makeDefaultBtn","makeProgress","percentage","makeUpload","display","initChildren","files","max","min","cacheRule","group$f","fieldRule","computed","formRule","total","addRule","removeRule","add$f","syncData","$delete","addIcon","delIcon","makeIcon","checkbox","frame","radio","select","group","input","Parser","parseValue","time","multiple","formatToString","parseString","autosize","minRows","range","parseFloat","switch","getTime","toDate","isRange","nodeKey","limit","datePicker","slider","iswitch","timePicker","inline","labelPosition","labelSuffix","hideRequiredAsterisk","labelWidth","showMessage","inlineMessage","statusIcon","validateOnRuleChange","size","row","gutter","align","justify","tag","placement","plain","round","circle","autofocus","nativeType","innerText","rate","cascader","colorPicker","inputNumber","formItem","autoComplete","upperCaseReg","isAttr","isTooltip","Form","getFormRef","fItem","validateMessage","validateState","nativeOn","makeFormBtn","makeRow","makeFormItem","fItemUnique","getGetCol","prop","makeFormPop","makeCol","svn","span","__fc_h","__fc_v","submitBtnShow","resetBtnShow","makeSubmitBtn","makeResetBtn","types","frameInputs","frameFiles","frameImages","frameInputOne","frameFileOne","frameImageOne","m","frameInput","frameFile","frameImage","idate","selectMultiple","selectOne","sliderRange","timeRange","image","uploadFileOne","uploadImageOne","uploadImage","uploadFile","names","auto","number","color","process"],"mappings":"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"}