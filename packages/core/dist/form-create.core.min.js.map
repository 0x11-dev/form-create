{"version":3,"file":"form-create.core.min.js","sources":["../../utils/src/index.js","../src/components/formCreate.js","../src/core/mergeJsxProps.js","../src/factory/vData.js","../src/factory/creator.js","../src/core/util.js","../src/factory/maker.js","../src/factory/vNode.js","../src/factory/parser.js","../src/core/render.js","../src/core/api.js","../src/core/handle.js","../src/components/fragment.jsx","../src/core/index.js","../src/factory/form.js"],"sourcesContent":["import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n\nexport function isValidChildren(children) {\n    return Array.isArray(children) && children.length > 0;\n}\n\nexport const _toString = Object.prototype.toString;\n\nexport function isUndef(v) {\n    return v === undefined || v === null\n}\n\nexport function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n\nexport function extend(to, _from) {\n    for (var key in _from) {\n        $set(to, key, _from[key]);\n    }\n    return to\n}\n\nexport function debounce(fn, wait) {\n    var timeout = null;\n    return function (...arg) {\n        if (timeout !== null)\n            clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...arg), wait);\n    }\n}\n\nexport function isType(arg, type) {\n    return _toString.call(arg) === '[object ' + type + ']'\n}\n\nexport function isDate(arg) {\n    return isType(arg, 'Date');\n}\n\nexport function isPlainObject(arg) {\n    return isType(arg, 'Object');\n}\n\nexport function isFunction(arg) {\n    return isType(arg, 'Function');\n}\n\nexport function isString(arg) {\n    return isType(arg, 'String');\n}\n\nexport function isBool(arg) {\n    return isType(arg, 'Boolean');\n}\n\nexport function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n\nexport function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n)\n}\n\nexport function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ((isUndef(value) || value === '' ? [] : [value])\n        );\n}\n\nexport function isElement(arg) {\n    return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !isPlainObject(arg)\n}\n\nexport function deepExtend(origin, target = {}) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || isPlainObject(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                deepExtend(origin[key], clone);\n            } else {\n                $set(origin, key, clone);\n            }\n        }\n    }\n    return origin\n}\n\nexport function deepExtendArgs(origin, ...lst) {\n    lst.forEach(target => {\n        origin = deepExtend(origin, target);\n    });\n    return origin;\n}\n\nlet id = 0;\n\nexport function uniqueId() {\n    return ++id\n}\n\nexport function toDefSlot(slot, $h) {\n    return [slot && isFunction(slot) ? slot($h) : slot]\n}\n\n\nexport function timeStampToDate(timeStamp) {\n    if (isDate(timeStamp))\n        return timeStamp;\n    else {\n        let date = new Date(timeStamp);\n        return date.toString() === 'Invalid Date' ? timeStamp : date;\n    }\n}\n\nexport function preventDefault(e) {\n    e.preventDefault();\n}\n\nexport function dateFormat(fmt, date = new Date) {\n    let o = {\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n    for (let k in o)\n        if (new RegExp('(' + k + ')').test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1)\n                ? (o[k])\n                : (('00' + o[k]).substr(('' + o[k]).length)));\n    return fmt\n}\n\nexport function hasSlot(children, slotName) {\n    return children.length !== 0 && children.some(child => {\n        if (child.data) {\n            if ((!child.data.slot && slotName === 'default') || (child.data.slot === slotName))\n                return true;\n        } else if (slotName === 'default')\n            return true;\n        return false;\n    })\n}\n\nexport function errMsg(i) {\n\n    return '\\n\\x67\\x69\\x74\\x68\\x75\\x62\\x3a\\x68\\x74\\x74\\x70' +\n        '\\x73\\x3a\\x2f\\x2f\\x67\\x69\\x74\\x68\\x75\\x62\\x2e\\x63\\x6f' +\n        '\\x6d\\x2f\\x78\\x61\\x62\\x6f\\x79\\x2f\\x66\\x6f\\x72\\x6d\\x2d' +\n        '\\x63\\x72\\x65\\x61\\x74\\x65\\n\\x64\\x6f\\x63\\x75\\x6d\\x65' +\n        '\\x6e\\x74\\x3a\\x68\\x74\\x74\\x70\\x3a\\x2f\\x2f\\x77\\x77\\x77' +\n        '\\x2e\\x66\\x6f\\x72\\x6d\\x2d\\x63\\x72\\x65\\x61\\x74\\x65\\x2e' +\n        '\\x63\\x6f\\x6d' + (i || '');\n}\n","import {deepExtend} from '@form-create/utils';\n\nexport const formCreateName = 'FormCreate';\n\nexport default function $FormCreate(FormCreate, components) {\n    return {\n        name: formCreateName,\n        componentName: formCreateName,\n        props: {\n            rule: {\n                type: Array,\n                required: true,\n                default: () => {\n                    return {};\n                }\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                },\n                required: false\n            },\n            value: Object\n        },\n        data: () => {\n            return {\n                formData: undefined,\n                buttonProps: undefined,\n                resetProps: undefined,\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n            };\n        },\n        components,\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _buttonProps(props) {\n                this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n            },\n            _resetProps(props) {\n                this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n            },\n            _refresh() {\n                ++this.unique;\n            }\n        },\n        watch: {\n            option: '_refresh',\n            rule(n) {\n                this.formCreate.handle.reloadRule(n);\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(rule, option);\n            this.formCreate.beforeCreate(this);\n        },\n        created() {\n            this.formCreate.created();\n            this.$f = this.formCreate.api();\n            this.$emit('input', this.$f);\n        },\n        mounted() {\n            const formCreate = this.formCreate;\n\n            formCreate.mounted();\n            this.$emit('input', this.$f);\n\n        },\n        beforeDestroy() {\n            this.formCreate.handle.reloadRule([]);\n            this.formCreate.handle.$render.clearCacheAll();\n        },\n    }\n}\n","const normalMerge = ['attrs', 'props', 'domProps'];\nconst toArrayMerge = ['class', 'style', 'directives'];\nconst functionalMerge = ['on', 'nativeOn'];\n\nconst mergeJsxProps = (objects, initial) =>\n    objects.reduce((a, b) => {\n        for (const key in b) {\n            if (a[key]) {\n                if (normalMerge.indexOf(key) !== -1) {\n                    a[key] = {...a[key], ...b[key]}\n                } else if (toArrayMerge.indexOf(key) !== -1) {\n                    const arrA = a[key] instanceof Array ? a[key] : [a[key]];\n                    const arrB = b[key] instanceof Array ? b[key] : [b[key]];\n                    a[key] = [...arrA, ...arrB]\n                } else if (functionalMerge.indexOf(key) !== -1) {\n                    for (const event in b[key]) {\n                        if (a[key][event]) {\n                            const arrA = a[key][event] instanceof Array ? a[key][event] : [a[key][event]];\n                            const arrB = b[key][event] instanceof Array ? b[key][event] : [b[key][event]];\n                            a[key][event] = [...arrA, ...arrB]\n                        } else {\n                            a[key][event] = b[key][event]\n                        }\n                    }\n                } else if (key === 'hook') {\n                    for (let hook in b[key]) {\n                        if (a[key][hook]) {\n                            a[key][hook] = mergeFn(a[key][hook], b[key][hook])\n                        } else {\n                            a[key][hook] = b[key][hook]\n                        }\n                    }\n                } else {\n                    a[key] = b[key]\n                }\n            } else {\n                a[key] = b[key]\n            }\n        }\n        return a\n    }, initial);\n\nconst mergeFn = (fn1, fn2) =>\n    function () {\n        fn1 && fn1.apply(this, arguments);\n        fn2 && fn2.apply(this, arguments);\n    };\n\nexport default mergeJsxProps\n","import {isPlainObject, isUndef, toString} from '@form-create/utils';\nimport mergeJsxProps from '../core/mergeJsxProps';\n\nfunction defVData() {\n    return {\n        // class: {},\n        // style: {},\n        // attrs: {},\n        props: {},\n        // domProps: {},\n        on: {},\n        // nativeOn: {},\n        // directives: [],\n        // scopedSlots: {},\n        // slot: undefined,\n        // key: undefined,\n        // ref: undefined\n    };\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    merge(props) {\n        mergeJsxProps([props], this._data);\n        return this;\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            this.merge({class: classList});\n        } else if (isPlainObject(classList)) {\n            this.merge(classList);\n        } else {\n            this.merge({class: {[toString(classList)]: !!status}});\n        }\n\n        return this;\n    }\n\n    init() {\n        this._data = defVData();\n        return this;\n    }\n\n    get() {\n        const data = Object.keys(this._data).reduce((initial, key) => {\n            const value = this._data[key];\n            if (value === undefined) return initial;\n            if (Array.isArray(value) && !value.length) return initial;\n            if (isPlainObject(value) && !Object.keys(value).length && key !== 'props') return initial;\n\n            initial[key] = value;\n            return initial;\n        }, {});\n        this.init();\n        return data;\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style', 'directives'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        this.merge({[key]: val});\n        return this;\n    };\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n        if (isPlainObject(obj)) {\n            this.merge({[key]: obj})\n        } else {\n            this.merge({[key]: {[toString(obj)]: val}})\n        }\n\n        return this;\n    };\n});\n\nexport const vdataField = objList.concat(keyList, 'class');\n","import {$set, extend, isFunction, isPlainObject} from '@form-create/utils';\nimport VData from './vData';\n\nfunction baseRule() {\n    return {\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        control: [],\n        emit: [],\n        template: undefined,\n        emitPrefix: undefined,\n        native: undefined,\n        info: undefined,\n    };\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props);\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type)) type(maker);\n        else maker.props(typeName, type);\n        return maker;\n    };\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n        extend(this._data, baseRule());\n        extend(this._data, {type, title, field, value});\n        if (isPlainObject(props)) this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this;\n    }\n\n    getRule() {\n        return this._data;\n    }\n\n    event(...args) {\n        this.on(...args);\n        return this;\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'value', 'name', 'title', 'native', 'info', 'hidden', 'visibility', 'inject', 'model'];\n\nkeyAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (value) {\n        $set(this._data, attr, value);\n        return this;\n    };\n});\n\nconst objAttrs = ['col'];\n\nobjAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this._data, attr, extend(this._data[attr], opt));\n        return this;\n    };\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit', 'control'];\n\narrAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this._data, attr, this._data[attr].concat(opt));\n        return this;\n    };\n});\n","import Creator from '../factory/creator';\nimport {deepExtendArgs, isFunction, isString, isUndef} from '@form-create/utils';\n\nexport function toJson(obj) {\n    return JSON.stringify(obj, function (key, val) {\n        if (val instanceof Creator) {\n            return val.getRule();\n        }\n\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== 'function') {\n            return val;\n        }\n        if (val.__inject)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n\n        return '' + val;\n    });\n}\n\n\nexport function parseJson(json) {\n    return JSON.parse(json, function (k, v) {\n        if (isUndef(v)) return v;\n        if (v.indexOf && v.indexOf('function') > -1) {\n            try {\n                return eval('(function(){return ' + v + ' })()')\n            } catch (e) {\n                console.error(`[form-create]解析失败:${v}`);\n                return undefined;\n            }\n        }\n        return v;\n    });\n}\n\nexport function enumerable(value) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false\n    }\n}\n\nexport function copyRule(rule) {\n    return copyRules([rule])[0];\n}\n\nexport function copyRules(rules) {\n    return rules.map(rule => {\n        if (isString(rule)) return rule;\n        const isCreator = isFunction(rule.getRule);\n        const data = deepExtendArgs({}, (isCreator ? rule._data : rule));\n        if (isCreator) {\n            const creator = new Creator();\n            creator._data = data;\n            return creator;\n        } else\n            return data;\n    })\n}\n","import Creator, {creatorFactory} from './creator';\nimport {parseJson, enumerable} from '../core/util';\nimport {extend, isPlainObject, isString, isValidChildren} from '@form-create/utils';\n\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    let maker = {};\n\n    extend(maker, {\n        create,\n        createTmp\n    });\n    maker.template = createTmp;\n    maker.parse = parse;\n\n    return maker;\n}\n\nfunction parse(rule, toMaker = false) {\n    if (isString(rule)) rule = parseJson(rule);\n\n    if (rule instanceof Creator) return toMaker ? rule : rule.getRule();\n    if (isPlainObject(rule)) {\n        const maker = ruleToMaker(rule);\n        return toMaker ? maker : maker.getRule();\n    } else if (!Array.isArray(rule)) return rule;\n    else {\n        const rules = rule.map(r => parse(r, toMaker));\n        Object.defineProperties(rules, {\n            find: enumerable(findField),\n            model: enumerable(model)\n        });\n\n        return rules;\n    }\n}\n\nfunction findField(field, origin) {\n    let children = [];\n    for (let i in this) {\n        const rule = this[i] instanceof Creator ? this[i]._data : this[i];\n        if (rule.field === field) return origin === true ? rule : this[i];\n        if (isValidChildren(rule.children)) children = children.concat(rule.children);\n    }\n    if (children.length > 0) return findField.call(children, field);\n}\n\nfunction model(formData) {\n    Object.keys(formData).forEach(field => {\n        const rule = this.find(field, true);\n        if (rule) rule.value = formData[field];\n    });\n}\n\nfunction ruleToMaker(rule) {\n    const maker = new Creator();\n    Object.keys(rule).forEach(key => {\n        maker._data[key] = rule[key];\n    });\n    return maker;\n}\n","import {isFunction, isString, toString} from '@form-create/utils';\n\nfunction parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data;\n}\n\nfunction getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || []);\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        if (vm)\n            this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node;\n    }\n\n    static use(nodes) {\n        Object.keys(nodes).forEach((k) => {\n            VNode.prototype[toString(k).toLocaleLowerCase()] = VNode.prototype[k] = function (data, VNodeFn) {\n                return this.make(nodes[k], data, VNodeFn);\n            };\n        });\n    }\n}\n\nVNode.use({fragment: 'fcFragment'});\n","import VData from './vData';\nimport {toString, uniqueId} from '@form-create/utils';\nimport VNode from './vNode';\n\nexport default class BaseParser {\n\n    constructor(handle, rule, id) {\n        this.rule = rule;\n        this.vData = new VData;\n        this.vNode = new VNode();\n        this.id = id;\n        this.watch = [];\n        this.originType = rule.type;\n        this.type = toString(rule.type).toLocaleLowerCase();\n        this.isDef = true;\n        this.el = undefined;\n\n        if (!rule.field) {\n            this.field = '_def_' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n        this.name = rule.name;\n\n        this.key = 'key_' + id;\n        this.refName = '__' + this.field + this.id;\n        this.formItemRefName = 'fi' + this.refName;\n        this.root = [];\n        this.ctrlRule = null;\n        this.modelEvent = 'input';\n\n        this.update(handle);\n        this.init();\n    }\n\n    update(handle) {\n        this.$handle = handle;\n        this.$render = handle.$render;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.vNode.setVm(this.vm);\n        this.deleted = false;\n    }\n\n    init() {\n    }\n\n    toFormValue(value) {\n        return value\n    }\n\n    toValue(formValue) {\n        return formValue;\n    }\n}\n","import {_vue as Vue} from './index';\nimport {debounce, errMsg, isFunction, isString, isUndef, isValidChildren} from '@form-create/utils';\nimport VNode from '../factory/vNode';\nimport VData, {vdataField} from '../factory/vData';\n\n\nconst $de = debounce((fn) => fn(), 1);\n\nexport default class Render {\n    constructor(handle) {\n        this.$handle = handle;\n        this.fc = handle.fc;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.$form = handle.$form;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.cache = {};\n        this.renderList = {};\n    }\n\n    clearCache(parser, clear = true) {\n        if (!this.cache[parser.id]) return;\n        if (this.cacheStatus(parser))\n            this.$handle.refresh();\n        const parent = this.cache[parser.id].parent;\n        this.cache[parser.id] = null;\n        if (parent && clear)\n            this.clearCache(parent, clear);\n    }\n\n    clearCacheAll() {\n        this.cache = {};\n    }\n\n    setCache(parser, vnode, parent) {\n        this.cache[parser.id] = {\n            vnode,\n            use: false,\n            parent\n        };\n    }\n\n    cacheStatus(parser) {\n        return this.cache[parser.id] && (this.cache[parser.id].use === true || this.cache[parser.id].parent);\n    }\n\n    getCache(parser) {\n        const cache = this.cache[parser.id];\n        cache.use = true;\n        return cache.vnode;\n    }\n\n    initOrgChildren() {\n        const parsers = this.$handle.parsers;\n        this.orgChildren = Object.keys(parsers).reduce((initial, id) => {\n            const children = parsers[id].rule.children;\n            initial[id] = isValidChildren(children) ? [...children] : [];\n\n            return initial;\n        }, {});\n    }\n\n    run() {\n        if (!this.vm.isShow)\n            return;\n\n        this.$form.beforeRender();\n\n        const vn = this.$handle.sortList.map((id) => {\n            let parser = this.$handle.parsers[id];\n            if (parser.type === 'hidden') return;\n            return this.renderParser(parser);\n        }).filter((val) => val !== undefined);\n\n        return this.$form.render(vn);\n    }\n\n    setGlobalConfig(parser) {\n        if (!this.options.global) return;\n        const global = this.options.global;\n\n        if (global['*']) {\n            this.toData(parser, global['*']);\n        }\n        if (global[parser.type]) {\n            this.toData(parser, global[parser.type]);\n        } else if (global[parser.originType]) {\n            this.toData(parser, global[parser.originType]);\n        }\n    }\n\n    renderTemplate(parser) {\n        const {id, rule, key} = parser;\n        if (isUndef(Vue.compile)) {\n            console.error('使用的 Vue 版本不支持 compile' + errMsg());\n            return [];\n        }\n\n        if (!this.renderList[id]) {\n            let vm = rule.vm;\n            if (isUndef(rule.vm))\n                vm = new Vue;\n            else if (isFunction(rule.vm))\n                vm = rule.vm(this.$handle.getInjectData(rule));\n\n            this.renderList[id] = {\n                vm,\n                template: Vue.compile(rule.template)\n            };\n\n        }\n\n        const {vm, template} = this.renderList[id];\n\n        setTemplateProps(vm, parser, this.$handle.fCreateApi);\n\n        vm.$off('input');\n        vm.$on('input', (value) => {\n            this.onInput(parser, value);\n        });\n\n        const vn = template.render.call(vm);\n\n        if (isUndef(vn.data)) vn.data = {};\n        vn.key = key;\n        return vn;\n    }\n\n    renderParser(parser, parent) {\n        if (!this.cache[parser.id] || parser.type === 'template') {\n\n            parser.vData.get();\n            this.setGlobalConfig(parser);\n\n            let {type, rule} = parser, form = this.$form, vn;\n\n            if (type === 'template' && rule.template) {\n                vn = this.renderTemplate(parser);\n\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            } else if (!this.$handle.isNoVal(parser)) {\n                const children = this.renderChildren(parser);\n                vn = parser.render ? parser.render(children) : this.defaultRender(parser, children);\n            } else {\n                vn = this.defaultRender(parser, this.renderChildren(parser));\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            }\n            if (rule.native !== true)\n                vn = form.container(vn, parser);\n            this.setCache(parser, vn, parent);\n            return vn;\n        }\n\n        return this.getCache(parser);\n    }\n\n    toData(parser, data) {\n        vdataField.forEach((key) => {\n            if (data[key] !== undefined)\n                parser.vData[key](data[key]);\n        });\n\n        return parser.vData;\n    }\n\n    parserToData(parser) {\n        return this.toData(parser, parser.rule);\n    }\n\n    inputVData(parser, custom) {\n        const {refName, key} = parser;\n\n        this.parserToData(parser);\n\n        let data = parser.vData\n            .ref(refName).key('fc_item' + key).props('formCreate', this.$handle.fCreateApi)\n            .on('fc.subForm', (subForm) => this.$handle.addSubForm(parser, subForm));\n\n        if (!custom)\n            data.on(this.$handle.modelEvent(parser), (value) => {\n                this.onInput(parser, value);\n            }).props('value', this.$handle.getFormData(parser));\n\n        this.$form.inputVData && this.$form.inputVData(parser, custom);\n\n        return data;\n    }\n\n    onInput(parser, value) {\n        this.$handle.onInput(parser, value);\n    }\n\n    renderChildren(parser) {\n        const {children} = parser.rule, orgChildren = this.orgChildren[parser.id];\n\n        if (!isValidChildren(children)) {\n            orgChildren.forEach(child => {\n                if (!isString(child) && child.__fc__) {\n                    this.$handle.removeField(child.__fc__);\n                }\n            });\n            this.orgChildren[parser.id] = [];\n            return [];\n        }\n\n        this.orgChildren[parser.id].forEach(child => {\n            if (children.indexOf(child) === -1 && !isString(child) && child.__fc__) {\n                this.$handle.removeField(child.__fc__);\n            }\n        });\n\n        return children.map(child => {\n            if (isString(child)) return child;\n            if (child.__fc__) {\n                return this.renderParser(child.__fc__, parser);\n            }\n            if (child.type)\n                $de(() => this.$handle.reloadRule());\n        });\n\n    }\n\n    defaultRender(parser, children) {\n        const vdata = this.inputVData(parser);\n        if (this.vNode[parser.type])\n            return this.vNode[parser.type](vdata, children);\n        if (this.vNode[parser.originType])\n            return this.vNode[parser.originType](vdata, children);\n        return this.vNode.make(parser.originType, vdata, children);\n    }\n}\n\nfunction setTemplateProps(vm, parser, fApi) {\n    if (!vm.$props)\n        return;\n    const {rule} = parser;\n    const keys = Object.keys(vm.$props);\n    keys.forEach(key => {\n        if (rule.props[key] !== undefined)\n            vm.$props[key] = rule.props[key];\n    });\n\n    if (keys.indexOf('value') !== -1) {\n        vm.$props.value = parser.rule.value;\n    }\n    vm.$props.formCreate = fApi;\n}\n","import {$set, deepExtend, errMsg, isFunction, isPlainObject} from '@form-create/utils';\nimport {toJson} from './util';\n\n\nexport default function Api(h) {\n\n    function tidyFields(fields, all = false) {\n        if (!fields)\n            fields = all ? Object.keys(h.fieldList) : h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    return {\n        formData() {\n            const parsers = h.fieldList;\n\n            return Object.keys(parsers).reduce((initial, id) => {\n                const parser = parsers[id];\n                initial[parser.field] = deepExtend({}, {value: parser.rule.value}).value;\n                return initial;\n            }, {});\n        },\n        getValue(field) {\n            const parser = h.fieldList[field];\n            if (!parser) return;\n            return deepExtend({}, {value: parser.rule.value}).value;\n        },\n        setValue(field, value) {\n            let formData = field;\n            if (!isPlainObject(field))\n                formData = {[field]: value};\n            Object.keys(formData).forEach(key => {\n                const parser = h.fieldList[key];\n                if (!parser) return;\n                parser.rule.value = formData[key];\n            });\n        },\n        changeValue(field, value) {\n            this.setValue(field, value);\n        },\n        changeField(field, value) {\n            this.setValue(field, value);\n        },\n        removeField(field) {\n            let parser = h.getParser(field);\n            if (!parser)\n                return;\n            let index = parser.root.indexOf(parser.rule.__origin__);\n            if (index === -1)\n                return;\n            parser.root.splice(index, 1);\n            if (h.sortList.indexOf(parser.id) === -1)\n                this.reload();\n\n            return parser.rule.__origin__;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = h.sortList.length, rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                    index = parser.rule.children.length;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                    rules = parser.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = 0, rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                    rules = parser.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index, 0, rule);\n        },\n        hidden(hidden, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'hidden', !!hidden);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.hidden;\n        },\n        visibility(visibility, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'visibility', !!visibility);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        visibilityStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.visibility;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.vm.$set(parser.rule.props, 'disabled', !!disabled);\n            });\n        },\n        model() {\n            return Object.keys(h.trueData).reduce((initial, key) => {\n                initial[key] = h.trueData[key].rule;\n                return initial;\n            }, {});\n        },\n        component() {\n            return Object.keys(h.customData).reduce((initial, key) => {\n                initial[key] = h.customData[key].rule;\n                return initial;\n            }, {});\n        },\n        bind() {\n            let bind = {}, properties = {};\n            Object.keys(h.fieldList).forEach((field) => {\n                const parser = h.fieldList[field];\n                properties[field] = {\n                    get() {\n                        return parser.rule.value;\n                    },\n                    set(value) {\n                        parser.rule.value = value;\n                    },\n                    enumerable: true,\n                    configurable: true\n                };\n            });\n            Object.defineProperties(bind, properties);\n            return bind;\n        },\n        submitBtnProps: (props = {}) => {\n            h.vm._buttonProps(props);\n        },\n        resetBtnProps: (props = {}) => {\n            h.vm._resetProps(props);\n        },\n        set: (node, field, value) => {\n            h.vm.$set(node, field, value);\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            deepExtend(h.options, options);\n            this.refresh(true);\n        },\n        onSubmit(fn) {\n            this.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            const parser = h.getParser(field);\n            if (parser) {\n                h.$render.clearCache(parser, true);\n                h.refresh();\n            }\n        },\n        refresh: (clear) => {\n            if (clear)\n                h.$render.clearCacheAll();\n            h.refresh();\n        },\n        hideForm: (isShow) => {\n            h.vm.isShow = !isShow;\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule: (id, rule, cover) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                cover ? Object.keys(rule).forEach(key => {\n                    parser.rule[key] = rule[key];\n                }) : deepExtend(parser.rule, rule);\n                return parser.rule.__origin__;\n            }\n        },\n        getRule: (id) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                return parser.rule;\n            }\n        },\n        updateRules(rules, cover) {\n            Object.keys(rules).forEach(id => {\n                this.updateRule(id, rules[id], cover);\n            })\n        },\n        updateValidate(id, validate, merge) {\n            const parser = h.getParser(id);\n            if (parser) {\n                parser.rule.validate = merge ? parser.rule.validate.concat(validate) : validate;\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                this.updateValidate(id, validates[id], merge);\n            })\n        },\n        method(id, name) {\n            const el = this.el(id);\n            if (!el || !el[name])\n                throw new Error('方法不存在' + errMsg());\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        toJson() {\n            return toJson(this.rule);\n        },\n        on(...args) {\n            h.vm.$on(...args);\n        },\n        once(...args) {\n            h.vm.$once(...args);\n        },\n        off(...args) {\n            h.vm.$off(...args);\n        },\n        trigger(id, event, ...args) {\n            const el = this.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const parser = h.getParser(id);\n            if (parser) return parser.el;\n        },\n        validate(callback) {\n            let state = false;\n            let subForm = {\n                ...{\n                    ___this: {\n                        validate(call) {\n                            h.$form.validate((valid) => {\n                                call && call(valid);\n                            });\n                        }\n                    }\n                }, ...h.subForm\n            };\n            let keys = Object.keys(subForm), len = keys.length, subLen;\n\n            const validFn = (valid, field) => {\n                if (valid) {\n                    if (subLen > 1) subLen--;\n                    else if (len > 1) len--;\n                    else callback(true);\n                } else {\n                    if (!state) {\n                        callback(false);\n                        state = true;\n                    }\n                    field && this.clearValidateState(field, false);\n                }\n            };\n\n            keys.forEach(field => {\n                let sub = subForm[field];\n                if (Array.isArray(sub)) {\n                    subLen = sub.length;\n                    sub.forEach(form => {\n                        form.validate((v) => validFn(v, field))\n                    })\n                } else if (sub) {\n                    subLen = 1;\n                    sub.validate(validFn)\n                }\n\n            });\n\n        },\n        validateField: (field, callback) => {\n            if (!h.fieldList[field])\n                return;\n            h.$form.validateField(field, callback);\n        },\n        resetFields(fields) {\n            let parsers = h.fieldList;\n            tidyFields(fields, true).forEach(field => {\n                let parser = parsers[field];\n                if (!parser) return;\n\n                if (parser.type === 'hidden') return;\n                h.$form.resetField(parser);\n                h.refreshControl(parser);\n                h.$render.clearCache(parser, true);\n            });\n        },\n        submit(successFn, failFn) {\n            this.validate((valid) => {\n                if (valid) {\n                    let formData = this.formData();\n                    if (isFunction(successFn))\n                        successFn(formData, this);\n                    else {\n                        h.options.onSubmit && h.options.onSubmit(formData, this);\n                        h.fc.$emit('on-submit', formData, this);\n                    }\n                } else {\n                    failFn && failFn(this)\n                }\n            });\n        },\n        clearValidateState(fields, clearSub = true) {\n            tidyFields(fields).forEach(field => {\n                if (clearSub) this.clearSubValidateState(field);\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.$form.clearValidateState(parser);\n            });\n        },\n        clearSubValidateState(fields) {\n            tidyFields(fields).forEach(field => {\n                const subForm = h.subForm[field];\n                if (subForm) {\n                    if (Array.isArray(subForm)) {\n                        subForm.forEach(form => {\n                            form.clearValidateState();\n                        })\n                    } else if (subForm) {\n                        subForm.clearValidateState();\n                    }\n                }\n            })\n        },\n        getSubForm(field) {\n            return h.subForm[field];\n        },\n        btn: {\n            loading: (loading = true) => {\n                h.vm._buttonProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._buttonProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._buttonProps({show: !!isShow});\n            }\n        },\n        resetBtn: {\n            loading: (loading = true) => {\n                h.vm._resetProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._resetProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._resetProps({show: !!isShow});\n            }\n        },\n        closeModal: (field) => {\n            const parser = h.fieldList[field];\n            parser && parser.closeModel && parser.closeModel();\n        }\n    };\n}\n","import {\n    $del,\n    $set, deepExtend,\n    errMsg,\n    extend,\n    isString,\n    isUndef,\n    isValidChildren,\n    isPlainObject,\n    toLine,\n    toString,\n    uniqueId,\n    isFunction\n} from '@form-create/utils';\nimport BaseParser from '../factory/parser';\nimport Render from './render';\nimport Api from './api';\nimport {copyRule, enumerable} from './util';\n\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport default class Handle {\n\n    constructor(fc) {\n        const {vm, rules, options} = fc;\n\n        this.watching = false;\n        this.vm = vm;\n        this.fc = fc;\n        this.options = options;\n\n        this.validate = {};\n        this.formData = {};\n        this.subForm = {};\n\n        this.fCreateApi = undefined;\n\n        this.__init(rules);\n        this.$form = new fc.drive.formRender(this);\n        this.$render = new Render(this);\n\n        this.loadRule(this.rules, false);\n\n        this.$render.initOrgChildren();\n\n        this.$form.init();\n    }\n\n    __init(rules) {\n        this.fieldList = {};\n        this.trueData = {};\n        this.parsers = {};\n        this.customData = {};\n        this.sortList = [];\n        this.rules = rules;\n        this.origin = [...this.rules];\n        this.changeStatus = false;\n    }\n\n    modelEvent(parser) {\n        const modelList = this.fc.modelEvents;\n        return modelList[parser.type] || modelList[parser.originType] || parser.rule.model || parser.modelEvent;\n    }\n\n    loadRule(rules, child) {\n        rules.map((_rule, index) => {\n            if (child && isString(_rule)) return;\n\n            if (!_rule.type)\n                return console.error('未定义生成规则的 type 字段' + errMsg());\n\n            let parser;\n\n            if (_rule.__fc__) {\n                parser = _rule.__fc__;\n\n                //规则在其他 form-create 中使用,自动浅拷贝\n                if (!parser.deleted && (parser.vm !== this.vm || this.parsers[parser.id])) {\n                    _rule = copyRule(_rule);\n                    rules[index] = _rule;\n                    parser = this.createParser(this.parseRule(_rule));\n                } else {\n                    parser.update(this);\n                    let rule = parser.rule;\n                    this.parseOn(rule);\n                    this.parseProps(rule);\n                }\n            } else {\n                parser = this.createParser(this.parseRule(_rule));\n            }\n\n            let children = parser.rule.children, rule = parser.rule;\n            if (!this.notField(parser.field))\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            this.setParser(parser);\n\n            if (!_rule.__fc__) {\n                bindParser(_rule, parser);\n            }\n            if (isValidChildren(children)) {\n                this.loadRule(children, true);\n            }\n\n            if (!child) {\n                this.sortList.push(parser.id);\n            }\n\n            if (!this.isNoVal(parser))\n                Object.defineProperty(parser.rule, 'value', this.valueHandle(parser));\n\n            return parser;\n        }).filter(h => h).forEach(h => {\n            h.root = rules;\n        });\n    }\n\n    valueHandle(parser) {\n        return {\n            enumerable: true,\n            get: () => {\n                return parser.toValue(this.getFormData(parser));\n            },\n            set: (value) => {\n                if (this.isChange(parser, value)) {\n                    this.$render.clearCache(parser, true);\n                    this.setFormData(parser, parser.toFormValue(value));\n                    this.valueChange(parser, value);\n                    this.refresh();\n                }\n            }\n        };\n    }\n\n    createParser(rule) {\n        const id = '' + uniqueId(), parsers = this.fc.parsers, type = toString(rule.type).toLocaleLowerCase();\n\n        const Parser = (parsers[type]) ? parsers[type] : BaseParser;\n\n        return new Parser(this, rule, id);\n    }\n\n    parseRule(_rule) {\n        const def = defRule(), rule = getRule(_rule);\n\n        Object.defineProperties(rule, {\n            __origin__: enumerable(_rule)\n        });\n\n        Object.keys(def).forEach(k => {\n            if (isUndef(rule[k])) $set(rule, k, def[k]);\n        });\n\n        if (rule.field && this.options.formData[rule.field] !== undefined)\n            rule.value = this.options.formData[rule.field];\n\n        rule.options = parseArray(rule.options);\n        this.parseOn(rule);\n        this.parseProps(rule);\n\n        return rule;\n    }\n\n    parseOn(rule) {\n        this.parseInjectEvent(rule, rule.on || {});\n        if (!this.watching) {\n            this.margeEmit(rule);\n        }\n    }\n\n    margeEmit(rule) {\n        const emitEvent = this.parseEmit(rule);\n        if (Object.keys(emitEvent).length > 0) extend(rule.on, emitEvent);\n    }\n\n    parseProps(rule) {\n        this.parseInjectEvent(rule, rule.props || {});\n    }\n\n    parseInjectEvent(rule, on) {\n        if (this.options.injectEvent || rule.inject)\n            Object.keys(on).forEach(k => {\n                if (isFunction(on[k]))\n                    on[k] = this.inject(rule, on[k])\n            });\n        return on;\n    }\n\n    getInjectData(self, inject) {\n        const {option, rule} = this.vm.$options.propsData;\n        return {\n            $f: this.fCreateApi,\n            rule,\n            self: self.__origin__,\n            option,\n            inject: inject || rule.inject || {}\n        };\n    }\n\n    inject(self, _fn, inject) {\n        if (_fn.__inject) {\n            if (this.watching)\n                return _fn;\n            _fn = _fn.__origin;\n        }\n\n        const h = this;\n\n        const fn = function (...args) {\n            args.unshift(h.getInjectData(self, inject));\n            return _fn(...args);\n        };\n        fn.__inject = true;\n        fn.__origin = _fn;\n        return fn;\n    }\n\n    parseEmit(rule) {\n        let event = {}, {emit, emitPrefix, field, name} = rule;\n\n        if (!Array.isArray(emit)) return event;\n        const emitKey = emitPrefix ? emitPrefix : (field || name);\n        if (!emitKey) return event;\n\n        emit.forEach(config => {\n            let inject, eventName = config;\n            if (isPlainObject(config)) {\n                eventName = config.name;\n                inject = config.inject;\n            }\n            if (!eventName) return;\n\n            const fieldKey = toLine(`${emitKey}-${eventName}`).replace('_', '-');\n\n            const fn = (...arg) => {\n                this.vm.$emit(fieldKey, ...arg);\n            };\n            fn.__emit = true;\n            event[eventName] = (this.options.injectEvent || config.inject !== undefined) ? this.inject(rule, fn, inject) : fn;\n        });\n\n        return event;\n    }\n\n    run() {\n        if (this.vm.unique > 0)\n            return this.$render.run();\n        else {\n            this.vm.unique = 1;\n            return [];\n        }\n    }\n\n    setParser(parser) {\n        let {id, field, name, rule} = parser;\n        if (this.parsers[id])\n            return;\n        this.parsers[id] = parser;\n\n        if (name)\n            $set(this.customData, name, parser);\n\n        if (this.isNoVal(parser)) return;\n        this.fieldList[field] = parser;\n        $set(this.formData, field, parser.toFormValue(rule.value));\n        $set(this.validate, field, rule.validate || []);\n        $set(this.trueData, field, parser);\n    }\n\n    addSubForm(parser, subForm) {\n        this.subForm[parser.field] = subForm;\n    }\n\n    notField(field) {\n        return this.fieldList[field] === undefined;\n    }\n\n    isChange(parser, value) {\n        return JSON.stringify(parser.rule.value) !== JSON.stringify(value);\n    }\n\n    valueChange(parser) {\n        this.validateControl(parser);\n    }\n\n    onInput(parser, value) {\n        let val;\n        if (!this.isNoVal(parser) && this.isChange(parser, val = parser.toValue(value))) {\n            this.$render.clearCache(parser);\n            this.setFormData(parser, value);\n            this.changeStatus = true;\n            this.valueChange(parser);\n            this.vm.$emit('change', parser.field, val, this.fCreateApi);\n        }\n    }\n\n    getParser(id) {\n        if (this.fieldList[id])\n            return this.fieldList[id];\n        else if (this.customData[id])\n            return this.customData[id];\n        else if (this.parsers[id])\n            return this.parsers[id];\n    }\n\n    created() {\n        const vm = this.vm;\n\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'formData', this.formData);\n\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = Api(this);\n        this.fCreateApi.rule = this.rules;\n        this.fCreateApi.config = this.options;\n        if (this.fCreateApi.form) {\n            const form = this.fCreateApi.form;\n            Object.keys(form).forEach((field) => {\n                delete form[field];\n            })\n        } else {\n            Object.defineProperty(this.fCreateApi, 'form', {\n                value: {},\n                writable: false,\n                enumerable: true\n            });\n        }\n        Object.defineProperties(this.fCreateApi.form, Object.keys(this.fCreateApi.formData()).reduce((initial, field) => {\n            const parser = this.getParser(field);\n            const handle = this.valueHandle(parser);\n            handle.configurable = true;\n            initial[field] = handle;\n            return initial;\n        }, {}));\n    }\n\n    addParserWitch(parser) {\n        const vm = this.vm;\n\n        Object.keys(parser.rule).forEach((key) => {\n            if (['field', 'type', 'value', 'vm', 'template', 'name', 'config', 'control'].indexOf(key) !== -1 || parser.rule[key] === undefined) return;\n            try {\n                parser.watch.push(vm.$watch(() => parser.rule[key], (n, o) => {\n                    if (o === undefined) return;\n                    this.watching = true;\n                    if (key === 'validate')\n                        this.validate[parser.field] = n;\n                    else if (key === 'props')\n                        this.parseProps(parser.rule);\n                    else if (key === 'on')\n                        this.parseOn(parser.rule);\n                    else if (key === 'emit')\n                        this.margeEmit(parser.rule);\n\n                    this.$render.clearCache(parser);\n                    this.watching = false;\n                }, {deep: key !== 'children', immediate: true}));\n            } catch (e) {\n                //\n            }\n        });\n    }\n\n    refreshControl(parser) {\n        if (!this.isNoVal(parser) && parser.rule.control) {\n            this.validateControl(parser);\n        }\n    }\n\n\n    validateControl(parser) {\n        const controls = getControl(parser), len = controls.length, ctrlRule = parser.ctrlRule;\n        if (!len) return;\n        for (let i = 0; i < len; i++) {\n            const control = controls[i], validate = control.handle || (val => val === control.value);\n            if (validate(parser.rule.value)) {\n                if (ctrlRule) {\n                    if (ctrlRule.children === control.rule)\n                        return;\n                    else\n                        removeControl(parser);\n                }\n                const rule = {\n                    type: 'fcFragment',\n                    native: true,\n                    children: control.rule\n                };\n                parser.root.splice(parser.root.indexOf(parser.rule.__origin__) + 1, 0, rule);\n                parser.ctrlRule = rule;\n                this.vm.$emit('control', parser.rule.__origin__, this.fCreateApi);\n                this.refresh();\n                return;\n            }\n        }\n        if (ctrlRule) {\n            removeControl(parser);\n            this.vm.$emit('control', parser.rule.__origin__, this.fCreateApi);\n            this.refresh();\n        }\n    }\n\n    mountedParser() {\n        const vm = this.vm;\n        Object.keys(this.parsers).forEach((id) => {\n            let parser = this.parsers[id];\n            if (parser.watch.length === 0) this.addParserWitch(parser);\n            this.refreshControl(parser);\n            parser.el = vm.$refs[parser.refName] || {};\n\n            if (parser.defaultValue === undefined)\n                parser.defaultValue = deepExtend({}, {value: parser.rule.value}).value;\n\n            parser.mounted && parser.mounted();\n        });\n    }\n\n    mounted() {\n        const mounted = this.options.mounted;\n\n        this.mountedParser();\n\n        mounted && mounted(this.fCreateApi);\n        this.fc.$emit('mounted', this.fCreateApi);\n    }\n\n    reload() {\n        const onReload = this.options.onReload;\n\n        this.mountedParser();\n\n        onReload && onReload(this.fCreateApi);\n        this.fc.$emit('on-reload', this.fCreateApi);\n    }\n\n    removeField(parser, value) {\n        const {id, field} = parser, index = this.sortList.indexOf(id);\n\n        delParser(parser, value);\n        $del(this.parsers, id);\n\n        if (index !== -1) {\n            this.sortList.splice(index, 1);\n        }\n\n        if (!this.fieldList[field]) {\n            $del(this.validate, field);\n            $del(this.formData, field);\n            $del(this.customData, field);\n            $del(this.fieldList, field);\n            $del(this.trueData, field);\n        }\n\n        if (this.subForm[parser.field])\n            $del(this.subForm, field);\n\n        return parser;\n    }\n\n    refresh() {\n        this.vm._refresh();\n    }\n\n    reloadRule(rules) {\n        const vm = this.vm;\n        if (!rules) return this.reloadRule(this.rules);\n        if (!this.origin.length) this.fCreateApi.refresh();\n        this.origin = [...rules];\n\n        const parsers = {...this.parsers};\n        const formData = this.fCreateApi.formData();\n        this.__init(rules);\n        this.loadRule(rules, false);\n        Object.keys(parsers).filter(id => this.parsers[id] === undefined)\n            .forEach(id => this.removeField(parsers[id], formData[parsers[id].field]));\n        this.$render.initOrgChildren();\n        this.formData = {...this.formData};\n        this.created();\n\n        vm.$f = this.fCreateApi;\n        this.$render.clearCacheAll();\n        this.refresh();\n\n        vm.$nextTick(() => {\n            this.reload();\n        });\n\n    }\n\n    setFormData(parser, value) {\n        $set(this.formData, parser.field, value);\n    }\n\n    getFormData(parser) {\n        return this.formData[parser.field];\n    }\n\n    fields() {\n        return Object.keys(this.formData);\n    }\n\n    isNoVal(parser) {\n        return !parser.isDef;\n    }\n\n}\n\nexport function delParser(parser, value) {\n    if (parser.ctrlRule)\n        removeControl(parser);\n    parser.watch.forEach((unWatch) => unWatch());\n    parser.watch = [];\n    parser.deleted = true;\n    parser.root = [];\n    Object.defineProperty(parser.rule, 'value', {\n        value\n    });\n}\n\nfunction parseArray(validate) {\n    return Array.isArray(validate) ? validate : [];\n}\n\nfunction getControl(parser) {\n    const control = parser.rule.control || [];\n    if (isPlainObject(control)) return [control];\n    else return control;\n}\n\nfunction removeControl(parser) {\n    const index = parser.root.indexOf(parser.ctrlRule);\n    if (index !== -1)\n        parser.root.splice(index, 1);\n    parser.ctrlRule = null;\n}\n\n\nfunction defRule() {\n    return {\n        validate: [],\n        col: {},\n        emit: [],\n        props: {},\n        on: {},\n        options: [],\n        title: undefined,\n        value: null,\n        field: '',\n        name: undefined,\n        className: undefined\n    };\n}\n\nfunction bindParser(rule, parser) {\n    Object.defineProperties(rule, {\n        __field__: enumerable(parser.field),\n        __fc__: enumerable(parser)\n    });\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        children: Array\n    },\n    render(h, ctx) {\n        return ctx.children\n    }\n}\n","import {\n    $set,\n    deepExtend,\n    extend,\n    isBool,\n    isElement,\n    toString,\n    isPlainObject\n} from '@form-create/utils';\nimport $FormCreate from '../components/formCreate';\nimport {formCreateName} from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from './handle';\nimport {creatorFactory} from '../factory/creator';\nimport BaseParser from '../factory/parser';\nimport {parseJson, copyRule, copyRules} from './util';\nimport fragment from '../components/fragment';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nexport default function createFormCreate(drive) {\n\n    const components = {\n            [fragment.name]: fragment\n        }, parsers = {}, maker = makerFactory(), globalConfig = drive.getConfig(), data = {},\n        modelEvents = {};\n\n    function setParser(id, parser) {\n        id = toString(id);\n        parsers[id.toLocaleLowerCase()] = parser;\n        FormCreate.maker[id] = creatorFactory(id);\n    }\n\n    function setModel(id, model) {\n        modelEvents[id.toLocaleLowerCase()] = model;\n    }\n\n    function createParser() {\n        return class Parser extends BaseParser {\n        }\n    }\n\n    function component(id, component) {\n        id = toString(id);\n        const _id = id.toLocaleLowerCase();\n        if (_id === 'form-create' || _id === 'formcreate')\n            return get$FormCreate();\n        if (component === undefined)\n            return components[id];\n        else\n            components[id] = component;\n    }\n\n    function margeGlobal(config, _options) {\n        if (isBool(_options.submitBtn))\n            _options.submitBtn = {show: _options.submitBtn};\n\n        if (isBool(_options.resetBtn))\n            _options.resetBtn = {show: _options.resetBtn};\n\n        let options = deepExtend(config, _options);\n\n        $set(options, 'el', !options.el\n            ? window.document.body\n            : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n            ));\n\n        return options;\n    }\n\n    function get$FormCreate() {\n        return _vue.extend($FormCreate(FormCreate, components));\n    }\n\n\n    function bindAttr(formCreate) {\n        extend(formCreate, {\n            version: drive.version,\n            ui: drive.ui,\n            maker,\n            component,\n            setParser,\n            createParser,\n            data,\n            copyRule,\n            copyRules,\n            $form() {\n                return get$FormCreate();\n            },\n            parseJson(json) {\n                return parseJson(json);\n            }\n        });\n    }\n\n    function install(Vue, options) {\n        if (Vue._installedFormCreate === true) return;\n        Vue._installedFormCreate = true;\n\n        if (options && isPlainObject(options))\n            margeGlobal(globalConfig, options);\n\n        Vue.use(FormCreate);\n    }\n\n    function create(rules, option) {\n        const $vm = new _vue({\n            data() {\n                return {rule: rules, option: isElement(option) ? {el: option} : option};\n            },\n            render() {\n                return <form-create ref='fc' props={this.$data}/>\n            }\n        });\n        $vm.$mount();\n        return $vm;\n    }\n\n    class FormCreate {\n        constructor(rules, options = {}) {\n            this.fCreateApi = undefined;\n            this.drive = drive;\n            this.parsers = parsers;\n            this.modelEvents = modelEvents;\n            this.vm = undefined;\n            this.rules = Array.isArray(rules) ? rules : [];\n            this.options = margeGlobal(deepExtend({formData: {}}, globalConfig), options);\n        }\n\n        beforeCreate(vm) {\n            this.vm = vm;\n            this.handle = new Handle(this);\n        }\n\n        created() {\n            this.handle.created();\n        }\n\n        api() {\n            return this.handle.fCreateApi;\n        }\n\n        render() {\n            return this.handle.run();\n        }\n\n        mounted() {\n            this.handle.mounted();\n        }\n\n        $emit(eventName, ...params) {\n            if (this.$parent)\n                this.$parent.$emit(`fc:${eventName}`, ...params);\n\n            this.vm.$emit(eventName, ...params);\n        }\n\n        static create(rules, _opt = {}, parent) {\n\n            let $vm = create(rules, _opt);\n\n            const _this = $vm.$refs.fc.formCreate;\n            _this.parent = parent;\n            _this.options.el.appendChild($vm.$el);\n\n            return _this.handle.fCreateApi;\n        }\n\n        static install(Vue) {\n            const $formCreate = function (rules, opt = {}) {\n                return FormCreate.create(rules, opt, this);\n            };\n\n            bindAttr($formCreate);\n\n            Vue.prototype.$formCreate = $formCreate;\n\n            Vue.component(formCreateName, get$FormCreate());\n            Vue.component(fragment.name, _vue.extend(fragment));\n            _vue = Vue;\n        }\n\n        static init(rules, _opt = {}) {\n            let $vm = create(rules, _opt), formCreate = $vm.$refs.fc.formCreate;\n\n            return {\n                mount($el) {\n                    if ($el && isElement($el))\n                        formCreate.options.el = $el;\n                    formCreate.options.el.appendChild($vm.$el);\n                    return formCreate.handle.fCreateApi;\n                },\n                remove() {\n                    formCreate.options.el.removeChild($vm.$el);\n                },\n                destroy() {\n                    this.remove();\n                    $vm.$destroy();\n                },\n                $f: formCreate.handle.fCreateApi\n            };\n        }\n    }\n\n    bindAttr(FormCreate);\n\n\n    drive.components.forEach(component => {\n        FormCreate.component(component.name, component);\n    });\n\n    drive.parsers.forEach(({name, parser}) => {\n        FormCreate.setParser(name, parser);\n    });\n\n    Object.keys(drive.makers).forEach(name => {\n        FormCreate.maker[name] = drive.makers[name];\n    });\n\n    if (drive.modelEvents) {\n        Object.keys(drive.modelEvents).forEach((name) => setModel(name, drive.modelEvents[name]));\n    }\n\n    return {\n        FormCreate,\n        install\n    };\n}\n","import VData from './vData';\nimport VNode from './vNode';\nimport {deepExtendArgs, uniqueId} from '@form-create/utils';\n\n\nexport default class BaseForm {\n\n    constructor(handle) {\n        this.$handle = handle;\n        this.vm = handle.vm;\n        this.drive = this.$handle.fc.drive;\n        this.options = handle.options;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.unique = uniqueId();\n        this.refName = `cForm${this.unique}`;\n    }\n\n    getFormRef() {\n        return this.vm.$refs[this.refName];\n    }\n\n    init() {\n        this.$render = this.$handle.$render;\n    }\n\n    getGetCol(parser) {\n        let col = parser.rule.col || {}, mCol = {}, pCol = {}, global = this.options.global;\n\n        if (!global)\n            return col;\n\n        if (global['*']) {\n            mCol = global['*'].col || {};\n        }\n\n        if (global[parser.type]) {\n            pCol = global[parser.type].col || {};\n        } else if (global[parser.originType]) {\n            pCol = global[parser.originType].col || {};\n        }\n        col = deepExtendArgs({}, mCol, pCol, col);\n        return col;\n    }\n\n    beforeRender() {\n\n    }\n\n    render() {\n\n    }\n\n    inputVData() {\n    }\n}\n"],"names":["$set","target","field","value","Vue","set","$del","delete","isValidChildren","children","Array","isArray","length","_toString","Object","prototype","toString","isUndef","v","val","_typeof","JSON","stringify","String","extend","to","_from","key","debounce","fn","wait","timeout","arg","clearTimeout","setTimeout","isType","type","call","isPlainObject","isFunction","isString","isBool","toLine","name","line","replace","toLowerCase","indexOf","substr","isElement","nodeType","deepExtend","origin","isArr","hasOwnProperty","clone","nst","undefined","deepExtendArgs","lst","forEach","id","uniqueId","errMsg","i","formCreateName","$FormCreate","FormCreate","components","componentName","props","rule","required","default","option","data","formData","buttonProps","resetProps","$f","isShow","unique","render","this","formCreate","methods","_buttonProps","_resetProps","_refresh","watch","n","handle","reloadRule","beforeCreate","$options","propsData","created","api","$emit","mounted","beforeDestroy","$render","clearCacheAll","normalMerge","toArrayMerge","functionalMerge","mergeJsxProps","objects","initial","reduce","a","b","arrA","arrB","event","hook","mergeFn","fn1","fn2","apply","arguments","defVData","on","VData","init","_data","classList","status","merge","class","keys","_this","keyList","objList","obj","vdataField","concat","baseRule","validate","options","col","control","emit","template","emitPrefix","native","info","creatorFactory","title","Creator","creatorTypeFactory","typeName","maker","keyAttrs","attr","objAttrs","opt","arrAttrs","toJson","getRule","_isVue","__inject","__origin","__emit","parseJson","json","parse","k","eval","e","console","error","enumerable","configurable","copyRule","copyRules","rules","map","isCreator","creator","commonMaker","create","make","createTmp","vm","makerFactory","toMaker","ruleToMaker","r","defineProperties","find","findField","model","parseVData","domProps","innerHTML","get","getVNode","VNode","setVm","$h","$createElement","nodeName","VNodeFn","Node","context","nodes","toLocaleLowerCase","use","fragment","BaseParser","vData","vNode","originType","isDef","el","refName","formItemRefName","root","ctrlRule","modelEvent","update","$handle","deleted","formValue","$de","Render","fc","$form","cache","renderList","parser","clear","cacheStatus","refresh","parent","clearCache","vnode","parsers","orgChildren","beforeRender","vn","sortList","renderParser","filter","global","toData","compile","getInjectData","setTemplateProps","fCreateApi","$off","$on","_this2","onInput","setGlobalConfig","form","renderTemplate","setCache","isNoVal","defaultRender","renderChildren","container","getCache","custom","parserToData","ref","subForm","_this3","addSubForm","getFormData","inputVData","child","__fc__","_this4","removeField","vdata","fApi","$props","Api","h","tidyFields","fields","all","fieldList","getValue","setValue","changeValue","changeField","getParser","index","__origin__","splice","reload","destroy","$el","parentNode","removeChild","$destroy","append","after","isChild","prepend","hidden","hiddenStatus","visibility","visibilityStatus","disabled","trueData","component","customData","bind","properties","submitBtnProps","resetBtnProps","node","updateOptions","onSubmit","sync","hideForm","changeStatus","clearChangeStatus","updateRule","cover","updateRules","updateValidate","updateValidates","validates","method","Error","once","$once","off","trigger","args","callback","subLen","state","___this","valid","len","validFn","clearValidateState","sub","validateField","resetFields","resetField","refreshControl","submit","successFn","failFn","clearSub","_this5","clearSubValidateState","getSubForm","btn","loading","show","resetBtn","closeModal","closeModel","Handle","watching","__init","drive","formRender","loadRule","initOrgChildren","modelList","modelEvents","_rule","parseOn","parseProps","createParser","parseRule","notField","setParser","bindParser","push","defineProperty","valueHandle","toValue","isChange","setFormData","toFormValue","valueChange","def","defRule","parseArray","parseInjectEvent","margeEmit","emitEvent","parseEmit","injectEvent","inject","self","_fn","unshift","emitKey","config","eventName","fieldKey","run","validateControl","submitBtn","writable","$watch","o","_this6","deep","immediate","controls","getControl","removeControl","_this7","_this8","addParserWitch","$refs","defaultValue","mountedParser","onReload","delParser","_this9","$nextTick","unWatch","className","__field__","NAME","functional","ctx","_vue","window","createFormCreate","globalConfig","getConfig","_id","get$FormCreate","margeGlobal","_options","document","querySelector","body","bindAttr","version","ui","$vm","$data","$mount","params","$parent","_opt","appendChild","$formCreate","mount","remove","makers","install","_installedFormCreate","BaseForm","mCol","pCol"],"mappings":"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"}