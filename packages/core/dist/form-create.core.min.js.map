{"version":3,"file":"form-create.core.min.js","sources":["../../utils/src/index.js","../src/components/formCreate.js","../src/factory/vData.js","../src/factory/creator.js","../src/core/util.js","../src/factory/maker.js","../src/factory/vNode.js","../src/factory/parser.js","../src/core/render.js","../src/core/api.js","../src/core/handle.js","../src/components/fragment.jsx","../src/core/index.js","../src/factory/form.js"],"sourcesContent":["import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n\nexport function isValidChildren(children) {\n    return Array.isArray(children) && children.length > 0;\n}\n\nexport const _toString = Object.prototype.toString;\n\nexport function isUndef(v) {\n    return v === undefined || v === null\n}\n\nexport function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n\nexport function extend(to, _from) {\n    for (var key in _from) {\n        $set(to, key, _from[key]);\n    }\n    return to\n}\n\nexport function debounce(fn, wait) {\n    var timeout = null;\n    return function (...arg) {\n        if (timeout !== null)\n            clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...arg), wait);\n    }\n}\n\nexport function isType(arg, type) {\n    return _toString.call(arg) === '[object ' + type + ']'\n}\n\nexport function isDate(arg) {\n    return isType(arg, 'Date');\n}\n\nexport function isPlainObject(arg) {\n    return isType(arg, 'Object');\n}\n\nexport function isFunction(arg) {\n    return isType(arg, 'Function');\n}\n\nexport function isString(arg) {\n    return isType(arg, 'String');\n}\n\nexport function isBool(arg) {\n    return isType(arg, 'Boolean');\n}\n\nexport function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n\nexport function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n)\n}\n\nexport function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ((isUndef(value) || value === '' ? [] : [value])\n        );\n}\n\nexport function isElement(arg) {\n    return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !isPlainObject(arg)\n}\n\nexport function deepExtend(origin, target = {}) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || isPlainObject(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                deepExtend(origin[key], clone);\n            } else {\n                $set(origin, key, clone);\n            }\n        }\n    }\n    return origin\n}\n\nexport function deepExtendArgs(origin, ...lst) {\n    lst.forEach(target => {\n        origin = deepExtend(origin, target);\n    });\n    return origin;\n}\n\nlet id = 0;\n\nexport function uniqueId() {\n    return ++id\n}\n\nexport function toDefSlot(slot, $h) {\n    return [slot && isFunction(slot) ? slot($h) : slot]\n}\n\n\nexport function timeStampToDate(timeStamp) {\n    if (isDate(timeStamp))\n        return timeStamp;\n    else {\n        let date = new Date(timeStamp);\n        return date.toString() === 'Invalid Date' ? timeStamp : date;\n    }\n}\n\nexport function preventDefault(e) {\n    e.preventDefault();\n}\n\nexport function dateFormat(fmt, date = new Date) {\n    let o = {\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n    for (let k in o)\n        if (new RegExp('(' + k + ')').test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1)\n                ? (o[k])\n                : (('00' + o[k]).substr(('' + o[k]).length)));\n    return fmt\n}\n\nexport function hasSlot(children, slotName) {\n    return children.length !== 0 && children.some(child => {\n        if (child.data) {\n            if ((!child.data.slot && slotName === 'default') || (child.data.slot === slotName))\n                return true;\n        } else if (slotName === 'default')\n            return true;\n        return false;\n    })\n}\n\nexport function errMsg(i) {\n\n    return '\\n\\x67\\x69\\x74\\x68\\x75\\x62\\x3a\\x68\\x74\\x74\\x70' +\n        '\\x73\\x3a\\x2f\\x2f\\x67\\x69\\x74\\x68\\x75\\x62\\x2e\\x63\\x6f' +\n        '\\x6d\\x2f\\x78\\x61\\x62\\x6f\\x79\\x2f\\x66\\x6f\\x72\\x6d\\x2d' +\n        '\\x63\\x72\\x65\\x61\\x74\\x65\\n\\x64\\x6f\\x63\\x75\\x6d\\x65' +\n        '\\x6e\\x74\\x3a\\x68\\x74\\x74\\x70\\x3a\\x2f\\x2f\\x77\\x77\\x77' +\n        '\\x2e\\x66\\x6f\\x72\\x6d\\x2d\\x63\\x72\\x65\\x61\\x74\\x65\\x2e' +\n        '\\x63\\x6f\\x6d' + (i || '');\n}\n","import {deepExtend} from '@form-create/utils';\n\nexport const formCreateName = 'FormCreate';\n\nexport default function $FormCreate(FormCreate, components) {\n    return {\n        name: formCreateName,\n        componentName: formCreateName,\n        props: {\n            rule: {\n                type: Array,\n                required: true,\n                default: () => {\n                    return {};\n                }\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                },\n                required: false\n            },\n            value: Object\n        },\n        data: () => {\n            return {\n                formData: undefined,\n                buttonProps: undefined,\n                resetProps: undefined,\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n            };\n        },\n        components,\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _buttonProps(props) {\n                this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n            },\n            _resetProps(props) {\n                this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n            },\n            _refresh() {\n                ++this.unique;\n            }\n        },\n        watch: {\n            option: '_refresh',\n            rule(n) {\n                this.formCreate.handle.reloadRule(n);\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(rule, option);\n            this.formCreate.beforeCreate(this);\n        },\n        created() {\n            this.formCreate.created();\n            this.$f = this.formCreate.api();\n            this.$emit('input', this.$f);\n        },\n        mounted() {\n            const formCreate = this.formCreate;\n\n            formCreate.mounted();\n            this.$emit('input', this.$f);\n\n        },\n        beforeDestroy() {\n            this.formCreate.handle.reloadRule([]);\n            this.formCreate.handle.$render.clearCacheAll();\n        },\n    }\n}\n","import {isPlainObject, isUndef, toString} from '@form-create/utils';\nimport _mergeJsxProps from '@vue/babel-helper-vue-jsx-merge-props';\n\nfunction defVData() {\n    return {\n        // class: {},\n        // style: {},\n        // attrs: {},\n        props: {},\n        // domProps: {},\n        on: {},\n        // nativeOn: {},\n        // directives: [],\n        // scopedSlots: {},\n        // slot: undefined,\n        // key: undefined,\n        // ref: undefined\n    };\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    merge(props) {\n        this._data = _mergeJsxProps([this._data, props])\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            this.merge({class: classList});\n        } else if (isPlainObject(classList)) {\n            this.merge(classList);\n        } else {\n            this.merge({class: {[toString(classList)]: !!status}});\n        }\n\n        return this;\n    }\n\n    init() {\n        this._data = defVData();\n        return this;\n    }\n\n    get() {\n        const data = Object.keys(this._data).reduce((initial, key) => {\n            const value = this._data[key];\n            if (value === undefined) return initial;\n            if (Array.isArray(value) && !value.length) return initial;\n            if (isPlainObject(value) && !Object.keys(value).length && key !== 'props') return initial;\n\n            initial[key] = value;\n            return initial;\n        }, {});\n        this.init();\n        return data;\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style', 'directives'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        this.merge({[key]: val});\n        return this;\n    };\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n        if (isPlainObject(obj)) {\n            this.merge({[key]: obj})\n        } else {\n            this.merge({[key]: {[toString(obj)]: val}})\n        }\n\n        return this;\n    };\n});\n\nexport const vdataField = objList.concat(keyList, 'class');\n","import {$set, extend, isFunction, isPlainObject} from '@form-create/utils';\nimport VData from './vData';\n\nfunction baseRule() {\n    return {\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        control: [],\n        emit: [],\n        template: undefined,\n        emitPrefix: undefined,\n        native: undefined,\n        info: undefined,\n    };\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props);\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type)) type(maker);\n        else maker.props(typeName, type);\n        return maker;\n    };\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n        extend(this._data, baseRule());\n        extend(this._data, {type, title, field, value});\n        if (isPlainObject(props)) this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this;\n    }\n\n    getRule() {\n        return this._data;\n    }\n\n    event(...args) {\n        this.on(...args);\n        return this;\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'value', 'name', 'title', 'native', 'info', 'hidden', 'visibility'];\n\nkeyAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (value) {\n        $set(this._data, attr, value);\n        return this;\n    };\n});\n\nconst objAttrs = ['col'];\n\nobjAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this._data, attr, extend(this._data[attr], opt));\n        return this;\n    };\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit', 'control'];\n\narrAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this._data, attr, this._data[attr].concat(opt));\n        return this;\n    };\n});\n","import Creator from '../factory/creator';\nimport {isFunction, isString, isUndef, isValidChildren} from '@form-create/utils';\n\nexport function toJson(obj) {\n    return JSON.stringify(obj, function (key, val) {\n        if (val instanceof Creator) {\n            return val.getRule();\n        }\n\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== 'function') {\n            return val;\n        }\n        if (val.__inject)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n\n        return '' + val;\n    });\n}\n\n\nexport function parseJson(json) {\n    return JSON.parse(json, function (k, v) {\n        if (isUndef(v)) return v;\n        if (v.indexOf && v.indexOf('function') > -1) {\n            try {\n                return eval('(function(){return ' + v + ' })()')\n            } catch (e) {\n                console.error(`[form-create]解析失败:${v}`);\n                return undefined;\n            }\n        }\n        return v;\n    });\n}\n\nexport function enumerable(value) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false\n    }\n}\n\nexport function copyRule(rule) {\n    return copyRules([rule])[0];\n}\n\nexport function copyRules(rules) {\n    return rules.map(rule => {\n        if (isString(rule)) return rule;\n        let r;\n        if (isFunction(rule.getRule)) {\n            r = new Creator();\n            r._data = {...rule._data};\n            if (r._data.field && r._data.value === undefined)\n                r.value(null);\n            if (isValidChildren(r._data.children)) {\n                r._data.children = copyRules(r._data.children);\n            }\n        } else {\n            r = {...rule};\n            if (r.field && r.value === undefined) r.value = null;\n            if (isValidChildren(r.children))\n                r.children = copyRules(r.children);\n        }\n        return r;\n    })\n}\n","import Creator, {creatorFactory} from './creator';\nimport {parseJson, enumerable} from '../core/util';\nimport {extend, isPlainObject, isString, isValidChildren} from '@form-create/utils';\n\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    let maker = {};\n\n    extend(maker, {\n        create,\n        createTmp\n    });\n    maker.template = createTmp;\n    maker.parse = parse;\n\n    return maker;\n}\n\nfunction parse(rule, toMaker = false) {\n    if (isString(rule)) rule = parseJson(rule);\n\n    if (rule instanceof Creator) return toMaker ? rule : rule.getRule();\n    if (isPlainObject(rule)) {\n        const maker = ruleToMaker(rule);\n        return toMaker ? maker : maker.getRule();\n    } else if (!Array.isArray(rule)) return rule;\n    else {\n        const rules = rule.map(r => parse(r, toMaker));\n        Object.defineProperties(rules, {\n            find: enumerable(findField),\n            model: enumerable(model)\n        });\n\n        return rules;\n    }\n}\n\nfunction findField(field, origin) {\n    let children = [];\n    for (let i in this) {\n        const rule = this[i] instanceof Creator ? this[i]._data : this[i];\n        if (rule.field === field) return origin === true ? rule : this[i];\n        if (isValidChildren(rule.children)) children = children.concat(rule.children);\n    }\n    if (children.length > 0) return findField.call(children, field);\n}\n\nfunction model(formData) {\n    Object.keys(formData).forEach(field => {\n        const rule = this.find(field, true);\n        if (rule) rule.value = formData[field];\n    });\n}\n\nfunction ruleToMaker(rule) {\n    const maker = new Creator();\n    Object.keys(rule).forEach(key => {\n        maker._data[key] = rule[key];\n    });\n    return maker;\n}\n","import {isFunction, isString, toString} from '@form-create/utils';\n\nfunction parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data;\n}\n\nfunction getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || []);\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        if (vm)\n            this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node;\n    }\n\n    static use(nodes) {\n        Object.keys(nodes).forEach((k) => {\n            VNode.prototype[toString(k).toLocaleLowerCase()] = VNode.prototype[k] = function (data, VNodeFn) {\n                return this.make(nodes[k], data, VNodeFn);\n            };\n        });\n    }\n}\n","import VData from './vData';\nimport {toString, uniqueId} from '@form-create/utils';\nimport VNode from './vNode';\n\nexport default class BaseParser {\n\n    constructor(handle, rule, id) {\n        this.rule = rule;\n        this.vData = new VData;\n        this.vNode = new VNode();\n        this.id = id;\n        this.watch = [];\n        this.originType = rule.type;\n        this.type = toString(rule.type).toLocaleLowerCase();\n        this.isDef = true;\n        this.el = undefined;\n\n        if (!rule.field) {\n            this.field = '_def_' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n        this.name = rule.name;\n\n        this.key = 'key_' + id;\n        this.refName = '__' + this.field + this.id;\n        this.formItemRefName = 'fi' + this.refName;\n        this.root = [];\n        this.ctrlRule = null;\n\n        this.update(handle);\n        this.init();\n    }\n\n    update(handle) {\n        this.$handle = handle;\n        this.$render = handle.$render;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.vNode.setVm(this.vm);\n        this.deleted = false;\n    }\n\n    init() {\n    }\n\n    toFormValue(value) {\n        return value\n    }\n\n    toValue(formValue) {\n        return formValue;\n    }\n}\n","import {_vue as Vue} from './index';\nimport {debounce, errMsg, isFunction, isString, isUndef, isValidChildren} from '@form-create/utils';\nimport VNode from '../factory/vNode';\nimport VData, {vdataField} from '../factory/vData';\n\n\nconst $de = debounce((fn) => fn(), 1);\n\nexport default class Render {\n    constructor(handle) {\n        this.$handle = handle;\n        this.fc = handle.fc;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.$form = handle.$form;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.cache = {};\n        this.renderList = {};\n    }\n\n    clearCache(parser, clear = true) {\n        if (!this.cache[parser.id]) return;\n        if (this.cacheStatus(parser))\n            this.$handle.refresh();\n        const parent = this.cache[parser.id].parent;\n        this.cache[parser.id] = null;\n        if (parent && clear)\n            this.clearCache(parent, clear);\n    }\n\n    clearCacheAll() {\n        this.cache = {};\n    }\n\n    setCache(parser, vnode, parent) {\n        this.cache[parser.id] = {\n            vnode,\n            use: false,\n            parent\n        };\n    }\n\n    cacheStatus(parser) {\n        return this.cache[parser.id] && (this.cache[parser.id].use === true || this.cache[parser.id].parent);\n    }\n\n    getCache(parser) {\n        const cache = this.cache[parser.id];\n        cache.use = true;\n        return cache.vnode;\n    }\n\n    initOrgChildren() {\n        const parsers = this.$handle.parsers;\n        this.orgChildren = Object.keys(parsers).reduce((initial, id) => {\n            const children = parsers[id].rule.children;\n            initial[id] = isValidChildren(children) ? [...children] : [];\n\n            return initial;\n        }, {});\n    }\n\n    run() {\n        if (!this.vm.isShow)\n            return;\n\n        this.$form.beforeRender();\n\n        const vn = this.$handle.sortList.map((id) => {\n            let parser = this.$handle.parsers[id];\n            if (parser.type === 'hidden') return;\n            return this.renderParser(parser);\n        }).filter((val) => val !== undefined);\n\n        return this.$form.render(vn);\n    }\n\n    setGlobalConfig(parser) {\n        if (!this.options.global) return;\n        const global = this.options.global;\n\n        if (global['*']) {\n            this.toData(parser, global['*']);\n        }\n        if (global[parser.type]) {\n            this.toData(parser, global[parser.type]);\n        } else if (global[parser.originType]) {\n            this.toData(parser, global[parser.originType]);\n        }\n    }\n\n    renderTemplate(parser) {\n        const {id, rule, key} = parser;\n        if (isUndef(Vue.compile)) {\n            console.error('使用的 Vue 版本不支持 compile' + errMsg());\n            return [];\n        }\n\n        if (!this.renderList[id]) {\n            let vm = rule.vm;\n            if (isUndef(rule.vm))\n                vm = new Vue;\n            else if (isFunction(rule.vm))\n                vm = rule.vm(this.$handle.getInjectData(rule));\n\n            this.renderList[id] = {\n                vm,\n                template: Vue.compile(rule.template)\n            };\n\n        }\n\n        const {vm, template} = this.renderList[id];\n\n        setTemplateProps(vm, parser, this.$handle.fCreateApi);\n\n        vm.$off('input');\n        vm.$on('input', (value) => {\n            this.onInput(parser, value);\n        });\n\n        const vn = template.render.call(vm);\n\n        if (isUndef(vn.data)) vn.data = {};\n        vn.key = key;\n        return vn;\n    }\n\n    renderParser(parser, parent) {\n        if (!this.cache[parser.id] || parser.type === 'template') {\n\n            parser.vData.get();\n            this.setGlobalConfig(parser);\n\n            let {type, rule} = parser, form = this.$form, vn;\n\n            if (type === 'template' && rule.template) {\n                vn = this.renderTemplate(parser);\n\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            } else if (!this.$handle.isNoVal(parser)) {\n                const children = this.renderChildren(parser);\n                vn = parser.render ? parser.render(children) : this.defaultRender(parser, children);\n            } else {\n                vn = this.defaultRender(parser, this.renderChildren(parser));\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            }\n            if (rule.native !== true)\n                vn = form.container(vn, parser);\n            this.setCache(parser, vn, parent);\n            return vn;\n        }\n\n        return this.getCache(parser);\n    }\n\n    toData(parser, data) {\n        vdataField.forEach((key) => {\n            if (data[key] !== undefined)\n                parser.vData[key](data[key]);\n        });\n\n        return parser.vData;\n    }\n\n    parserToData(parser) {\n        return this.toData(parser, parser.rule);\n    }\n\n    inputVData(parser, custom) {\n        const {refName, key} = parser;\n\n        this.parserToData(parser);\n\n        let data = parser.vData\n            .ref(refName).key('fc_item' + key).props('formCreate', this.$handle.fCreateApi)\n            .on('fc.subForm', (subForm) => this.$handle.addSubForm(parser, subForm));\n\n        if (!custom)\n            data.on('input', (value) => {\n                this.onInput(parser, value);\n            }).props('value', this.$handle.getFormData(parser));\n\n        this.$form.inputVData && this.$form.inputVData(parser, custom);\n\n        return data;\n    }\n\n    onInput(parser, value) {\n        this.$handle.onInput(parser, value);\n    }\n\n    renderChildren(parser) {\n        const {children} = parser.rule, orgChildren = this.orgChildren[parser.id];\n\n        if (!isValidChildren(children)) {\n            orgChildren.forEach(child => {\n                if (!isString(child) && child.__fc__) {\n                    this.$handle.removeField(child.__fc__);\n                }\n            });\n            this.orgChildren[parser.id] = [];\n            return [];\n        }\n\n        this.orgChildren[parser.id].forEach(child => {\n            if (children.indexOf(child) === -1 && !isString(child) && child.__fc__) {\n                this.$handle.removeField(child.__fc__);\n            }\n        });\n\n        return children.map(child => {\n            if (isString(child)) return child;\n            if (child.__fc__) {\n                return this.renderParser(child.__fc__, parser);\n            }\n            if (child.type)\n                $de(() => this.$handle.reloadRule());\n        });\n\n    }\n\n    defaultRender(parser, children) {\n        const vdata = this.inputVData(parser);\n        if (this.vNode[parser.type])\n            return this.vNode[parser.type](vdata, children);\n        if (this.vNode[parser.originType])\n            return this.vNode[parser.originType](vdata, children);\n        return this.vNode.make(parser.originType, vdata, children);\n    }\n}\n\nfunction setTemplateProps(vm, parser, fApi) {\n    if (!vm.$props)\n        return;\n    const {rule} = parser;\n    const keys = Object.keys(vm.$props);\n    keys.forEach(key => {\n        if (rule.props[key] !== undefined)\n            vm.$props[key] = rule.props[key];\n    });\n\n    if (keys.indexOf('value') !== -1) {\n        vm.$props.value = parser.rule.value;\n    }\n    vm.$props.formCreate = fApi;\n}\n","import {$set, deepExtend, errMsg, isFunction, isPlainObject} from '@form-create/utils';\nimport {toJson} from './util';\n\n\nexport default function Api(h) {\n\n    function tidyFields(fields, all = false) {\n        if (!fields)\n            fields = all ? Object.keys(h.fieldList) : h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    return {\n        formData() {\n            const parsers = h.fieldList;\n\n            return Object.keys(parsers).reduce((initial, id) => {\n                const parser = parsers[id];\n                initial[parser.field] = deepExtend({}, {value: parser.rule.value}).value;\n                return initial;\n            }, {});\n        },\n        getValue(field) {\n            const parser = h.fieldList[field];\n            if (!parser) return;\n            return deepExtend({}, {value: parser.rule.value}).value;\n        },\n        setValue(field, value) {\n            let formData = field;\n            if (!isPlainObject(field))\n                formData = {[field]: value};\n            Object.keys(formData).forEach(key => {\n                const parser = h.fieldList[key];\n                if (!parser) return;\n                parser.rule.value = formData[key];\n            });\n        },\n        changeValue(field, value) {\n            this.setValue(field, value);\n        },\n        changeField(field, value) {\n            this.setValue(field, value);\n        },\n        removeField(field) {\n            let parser = h.getParser(field);\n            if (!parser)\n                return;\n            let fields = parser.root.map(rule => rule.__field__), index = fields.indexOf(field);\n            if (index === -1)\n                return;\n            parser.root.splice(index, 1);\n            if (h.sortList.indexOf(parser.id) === -1)\n                this.reload();\n\n            return parser.rule.__origin__;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = h.sortList.length, rules = h.rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                    index = parser.rule.children.length;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                }\n            }\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = 0, rules = h.rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                }\n            }\n            rules.splice(index, 0, rule);\n        },\n        hidden(hidden, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'hidden', !!hidden);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.hidden;\n        },\n        visibility(visibility, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'visibility', !!visibility);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        visibilityStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.visibility;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.vm.$set(parser.rule.props, 'disabled', !!disabled);\n            });\n        },\n        model() {\n            return Object.keys(h.trueData).reduce((initial, key) => {\n                initial[key] = h.trueData[key].rule;\n                return initial;\n            }, {});\n        },\n        component() {\n            return Object.keys(h.customData).reduce((initial, key) => {\n                initial[key] = h.customData[key].rule;\n                return initial;\n            }, {});\n        },\n        bind() {\n            let bind = {}, properties = {};\n            Object.keys(h.fieldList).forEach((field) => {\n                const parser = h.fieldList[field];\n                properties[field] = {\n                    get() {\n                        return parser.rule.value;\n                    },\n                    set(value) {\n                        parser.rule.value = value;\n                    },\n                    enumerable: true,\n                    configurable: true\n                };\n            });\n            Object.defineProperties(bind, properties);\n            return bind;\n        },\n        submitBtnProps: (props = {}) => {\n            h.vm._buttonProps(props);\n        },\n        resetBtnProps: (props = {}) => {\n            h.vm._resetProps(props);\n        },\n        set: (node, field, value) => {\n            h.vm.$set(node, field, value);\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            deepExtend(h.options, options);\n            this.refresh(true);\n        },\n        onSubmit(fn) {\n            this.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            const parser = h.getParser(field);\n            if (parser) {\n                h.$render.clearCache(parser, true);\n                h.refresh();\n            }\n        },\n        refresh: (clear) => {\n            if (clear)\n                h.$render.clearCacheAll();\n            h.refresh();\n        },\n        hideForm: (isShow) => {\n            h.vm.isShow = !isShow;\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule: (id, rule, cover) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                cover ? Object.keys(rule).forEach(key => {\n                    parser.rule[key] = rule[key];\n                }) : deepExtend(parser.rule, rule);\n                return parser.rule.__origin__;\n            }\n        },\n        getRule: (id) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                return parser.rule;\n            }\n        },\n        updateRules(rules, cover) {\n            Object.keys(rules).forEach(id => {\n                this.updateRule(id, rules[id], cover);\n            })\n        },\n        updateValidate(id, validate, merge) {\n            const parser = h.getParser(id);\n            if (parser) {\n                parser.rule.validate = merge ? parser.rule.validate.concat(validate) : validate;\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                this.updateValidate(id, validates[id], merge);\n            })\n        },\n        method(id, name) {\n            const el = this.el(id);\n            if (!el || !el[name])\n                throw new Error('方法不存在' + errMsg());\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        toJson() {\n            return toJson(this.rule);\n        },\n        on(...args) {\n            h.vm.$on(...args);\n        },\n        once(...args) {\n            h.vm.$once(...args);\n        },\n        off(...args) {\n            h.vm.$off(...args);\n        },\n        trigger(id, event, ...args) {\n            const el = this.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const parser = h.getParser(id);\n            if (parser) return parser.el;\n        },\n        validate(callback) {\n            let state = false;\n            let subForm = {\n                ...{\n                    ___this: {\n                        validate(call) {\n                            h.$form.validate((valid) => {\n                                call && call(valid);\n                            });\n                        }\n                    }\n                }, ...h.subForm\n            };\n            let keys = Object.keys(subForm), len = keys.length, subLen;\n\n            const validFn = (valid, field) => {\n                if (valid) {\n                    if (subLen > 1) subLen--;\n                    else if (len > 1) len--;\n                    else callback(true);\n                } else {\n                    if (!state) {\n                        callback(false);\n                        state = true;\n                    }\n                    field && this.clearValidateState(field, false);\n                }\n            };\n\n            keys.forEach(field => {\n                let sub = subForm[field];\n                if (Array.isArray(sub)) {\n                    subLen = sub.length;\n                    sub.forEach(form => {\n                        form.validate((v) => validFn(v, field))\n                    })\n                } else if (sub) {\n                    subLen = 1;\n                    sub.validate(validFn)\n                }\n\n            });\n\n        },\n        validateField: (field, callback) => {\n            if (!h.fieldList[field])\n                return;\n            h.$form.validateField(field, callback);\n        },\n        resetFields(fields) {\n            let parsers = h.fieldList;\n            tidyFields(fields, true).forEach(field => {\n                let parser = parsers[field];\n                if (!parser) return;\n\n                if (parser.type === 'hidden') return;\n                h.$form.resetField(parser);\n                h.refreshControl(parser);\n                h.$render.clearCache(parser, true);\n            });\n        },\n        submit(successFn, failFn) {\n            this.validate((valid) => {\n                if (valid) {\n                    let formData = this.formData();\n                    if (isFunction(successFn))\n                        successFn(formData, this);\n                    else {\n                        h.options.onSubmit && h.options.onSubmit(formData, this);\n                        h.fc.$emit('on-submit', formData, this);\n                    }\n                } else {\n                    failFn && failFn(this)\n                }\n            });\n        },\n        clearValidateState(fields, clearSub = true) {\n            tidyFields(fields).forEach(field => {\n                if (clearSub) this.clearSubValidateState(field);\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.$form.clearValidateState(parser);\n            });\n        },\n        clearSubValidateState(fields) {\n            tidyFields(fields).forEach(field => {\n                const subForm = h.subForm[field];\n                if (subForm) {\n                    if (Array.isArray(subForm)) {\n                        subForm.forEach(form => {\n                            form.clearValidateState();\n                        })\n                    } else if (subForm) {\n                        subForm.clearValidateState();\n                    }\n                }\n            })\n        },\n        getSubForm(field) {\n            return h.subForm[field];\n        },\n        btn: {\n            loading: (loading = true) => {\n                h.vm._buttonProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._buttonProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._buttonProps({show: !!isShow});\n            }\n        },\n        resetBtn: {\n            loading: (loading = true) => {\n                h.vm._resetProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._resetProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._resetProps({show: !!isShow});\n            }\n        },\n        closeModal: (field) => {\n            const parser = h.fieldList[field];\n            parser && parser.closeModel && parser.closeModel();\n        }\n    };\n}\n","import {\n    $del,\n    $set, deepExtend,\n    errMsg,\n    extend,\n    isString,\n    isUndef,\n    isValidChildren,\n    isPlainObject,\n    toLine,\n    toString,\n    uniqueId,\n    isFunction\n} from '@form-create/utils';\nimport BaseParser from '../factory/parser';\nimport Render from './render';\nimport Api from './api';\nimport {copyRule, enumerable} from './util';\n\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport default class Handle {\n\n    constructor(fc) {\n        const {vm, rules, options} = fc;\n\n        this.watching = false;\n        this.vm = vm;\n        this.fc = fc;\n        this.options = options;\n\n        this.validate = {};\n        this.formData = {};\n        this.subForm = {};\n\n        this.fCreateApi = undefined;\n\n        this.__init(rules);\n        this.$form = new fc.drive.formRender(this);\n        this.$render = new Render(this);\n\n        this.loadRule(this.rules, false);\n\n        this.$render.initOrgChildren();\n\n        this.$form.init();\n    }\n\n    __init(rules) {\n        this.fieldList = {};\n        this.trueData = {};\n        this.parsers = {};\n        this.customData = {};\n        this.sortList = [];\n        this.rules = rules;\n        this.origin = [...this.rules];\n        this.changeStatus = false;\n    }\n\n    loadRule(rules, child) {\n        rules.map((_rule, index) => {\n            if (child && isString(_rule)) return;\n\n            if (!_rule.type)\n                return console.error('未定义生成规则的 type 字段' + errMsg());\n\n            let parser;\n\n            if (_rule.__fc__) {\n                parser = _rule.__fc__;\n\n                //规则在其他 form-create 中使用,自动浅拷贝\n                if (parser.vm !== this.vm && !parser.deleted) {\n                    _rule = copyRule(_rule);\n                    rules[index] = _rule;\n                    parser = this.createParser(this.parseRule(_rule));\n                } else {\n                    parser.update(this);\n                    let rule = parser.rule;\n                    this.parseOn(rule);\n                    this.parseProps(rule);\n                }\n            } else {\n                parser = this.createParser(this.parseRule(_rule));\n            }\n\n            let children = parser.rule.children, rule = parser.rule;\n            if (!this.notField(parser.field))\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            this.setParser(parser);\n\n            if (!_rule.__fc__) {\n                bindParser(_rule, parser);\n            }\n            if (isValidChildren(children)) {\n                this.loadRule(children, true);\n            }\n\n            if (!child) {\n                this.sortList.push(parser.id);\n            }\n\n            if (!this.isNoVal(parser))\n                Object.defineProperty(parser.rule, 'value', {\n                    get: () => {\n                        return parser.toValue(this.getFormData(parser));\n                    },\n                    set: (value) => {\n                        if (this.isChange(parser, value)) {\n                            this.$render.clearCache(parser, true);\n                            this.setFormData(parser, parser.toFormValue(value));\n                            this.valueChange(parser);\n                            this.refresh();\n                        }\n                    }\n                });\n\n            return parser;\n        }).filter(h => h).forEach(h => {\n            h.root = rules;\n        });\n    }\n\n    createParser(rule) {\n        const id = '' + uniqueId(), parsers = this.fc.parsers, type = toString(rule.type).toLocaleLowerCase();\n\n        const Parser = (parsers[type]) ? parsers[type] : BaseParser;\n\n        return new Parser(this, rule, id);\n    }\n\n    parseRule(_rule) {\n        const def = defRule(), rule = getRule(_rule);\n\n        Object.defineProperties(rule, {\n            __origin__: enumerable(_rule)\n        });\n\n        Object.keys(def).forEach(k => {\n            if (isUndef(rule[k])) $set(rule, k, def[k]);\n        });\n\n        if (rule.field && this.options.formData[rule.field] !== undefined)\n            rule.value = this.options.formData[rule.field];\n\n        rule.options = parseArray(rule.options);\n        this.parseOn(rule);\n        this.parseProps(rule);\n\n        return rule;\n    }\n\n    parseOn(rule) {\n        this.parseInjectEvent(rule, rule.on || {});\n        if (!this.watching) {\n            this.margeEmit(rule);\n        }\n    }\n\n    margeEmit(rule) {\n        const emitEvent = this.parseEmit(rule);\n        if (Object.keys(emitEvent).length > 0) extend(rule.on, emitEvent);\n    }\n\n    parseProps(rule) {\n        this.parseInjectEvent(rule, rule.props || {});\n    }\n\n    parseInjectEvent(rule, on) {\n        if (this.options.injectEvent || rule.inject)\n            Object.keys(on).forEach(k => {\n                if (isFunction(on[k]))\n                    on[k] = this.inject(rule, on[k])\n            });\n        return on;\n    }\n\n    getInjectData(self, inject) {\n        const {option, rule} = this.vm.$options.propsData;\n        return {\n            $f: this.fCreateApi,\n            rule,\n            self: self.__origin__,\n            option,\n            inject: inject || rule.inject || {}\n        };\n    }\n\n    inject(self, _fn, inject) {\n        if (_fn.__inject) {\n            if (this.watching)\n                return _fn;\n            _fn = _fn.__origin;\n        }\n\n        const h = this;\n\n        const fn = function (...args) {\n            args.unshift(h.getInjectData(self, inject));\n            return _fn(...args);\n        };\n        fn.__inject = true;\n        fn.__origin = _fn;\n        return fn;\n    }\n\n    parseEmit(rule) {\n        let event = {}, {emit, emitPrefix, field, name} = rule;\n\n        if (!Array.isArray(emit)) return event;\n        const emitKey = emitPrefix ? emitPrefix : (field || name);\n        if (!emitKey) return event;\n\n        emit.forEach(config => {\n            let inject, eventName = config;\n            if (isPlainObject(config)) {\n                eventName = config.name;\n                inject = config.inject;\n            }\n            if (!eventName) return;\n\n            const fieldKey = toLine(`${emitKey}-${eventName}`).replace('_', '-');\n\n            const fn = (...arg) => {\n                this.vm.$emit(fieldKey, ...arg);\n            };\n            fn.__emit = true;\n            event[eventName] = (this.options.injectEvent || config.inject !== undefined) ? this.inject(rule, fn, inject) : fn;\n        });\n\n        return event;\n    }\n\n    run() {\n        if (this.vm.unique > 0)\n            return this.$render.run();\n        else {\n            this.vm.unique = 1;\n            return [];\n        }\n    }\n\n    setParser(parser) {\n        let {id, field, name, rule} = parser;\n        if (this.parsers[id])\n            return;\n        this.parsers[id] = parser;\n\n        if (name)\n            $set(this.customData, name, parser);\n\n        if (this.isNoVal(parser)) return;\n        this.fieldList[field] = parser;\n        $set(this.formData, field, parser.toFormValue(rule.value));\n        $set(this.validate, field, rule.validate || []);\n        $set(this.trueData, field, parser);\n    }\n\n    addSubForm(parser, subForm) {\n        this.subForm[parser.field] = subForm;\n    }\n\n    notField(field) {\n        return this.fieldList[field] === undefined;\n    }\n\n    isChange(parser, value) {\n        return JSON.stringify(parser.rule.value) !== JSON.stringify(value);\n    }\n\n    valueChange(parser) {\n        this.validateControl(parser);\n    }\n\n    onInput(parser, value) {\n        let val;\n        if (!this.isNoVal(parser) && this.isChange(parser, val = parser.toValue(value))) {\n            this.$render.clearCache(parser);\n            this.setFormData(parser, value);\n            this.changeStatus = true;\n            this.valueChange(parser);\n            this.vm.$emit('change', parser.field, val);\n        }\n    }\n\n    getParser(id) {\n        if (this.fieldList[id])\n            return this.fieldList[id];\n        else if (this.customData[id])\n            return this.customData[id];\n        else if (this.parsers[id])\n            return this.parsers[id];\n    }\n\n    created() {\n        const vm = this.vm;\n\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'formData', this.formData);\n\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = Api(this);\n        this.fCreateApi.rule = this.rules;\n        this.fCreateApi.config = this.options;\n    }\n\n\n    addParserWitch(parser) {\n        const vm = this.vm;\n\n        Object.keys(parser.rule).forEach((key) => {\n            if (['field', 'type', 'value', 'vm', 'template', 'name', 'config', 'control'].indexOf(key) !== -1 || parser.rule[key] === undefined) return;\n            try {\n                parser.watch.push(vm.$watch(() => parser.rule[key], (n, o) => {\n                    if (o === undefined) return;\n                    this.watching = true;\n                    if (key === 'validate')\n                        this.validate[parser.field] = n;\n                    else if (key === 'props')\n                        this.parseProps(parser.rule);\n                    else if (key === 'on')\n                        this.parseOn(parser.rule);\n                    else if (key === 'emit')\n                        this.margeEmit(parser.rule);\n\n                    this.$render.clearCache(parser);\n                    this.watching = false;\n                }, {deep: key !== 'children', immediate: true}));\n            } catch (e) {\n                //\n            }\n        });\n    }\n\n    refreshControl(parser) {\n        if (!this.isNoVal(parser) && parser.rule.control) {\n            this.validateControl(parser);\n        }\n    }\n\n\n    validateControl(parser) {\n        const controls = getControl(parser), len = controls.length, ctrlRule = parser.ctrlRule;\n        if (!len) return;\n        for (let i = 0; i < len; i++) {\n            const control = controls[i], validate = control.handle || (val => val === control.value);\n            if (validate(parser.rule.value)) {\n                if (ctrlRule) {\n                    if (ctrlRule.children === control.rule)\n                        return;\n                    else\n                        removeControl(parser);\n                }\n                const rule = {\n                    type: 'fcFragment',\n                    native: true,\n                    children: control.rule\n                };\n                parser.root.splice(parser.root.indexOf(parser.rule.__origin__) + 1, 0, rule);\n                parser.ctrlRule = rule;\n                this.refresh();\n                return;\n            }\n        }\n        if (ctrlRule) {\n            removeControl(parser);\n            this.refresh();\n        }\n    }\n\n    mountedParser() {\n        const vm = this.vm;\n        Object.keys(this.parsers).forEach((id) => {\n            let parser = this.parsers[id];\n            if (parser.watch.length === 0) this.addParserWitch(parser);\n            this.refreshControl(parser);\n            parser.el = vm.$refs[parser.refName] || {};\n\n            if (parser.defaultValue === undefined)\n                parser.defaultValue = deepExtend({}, {value: parser.rule.value}).value;\n\n            parser.mounted && parser.mounted();\n        });\n    }\n\n    mounted() {\n        const mounted = this.options.mounted;\n\n        this.mountedParser();\n\n        mounted && mounted(this.fCreateApi);\n        this.fc.$emit('mounted', this.fCreateApi);\n    }\n\n    reload() {\n        const onReload = this.options.onReload;\n\n        this.mountedParser();\n\n        onReload && onReload(this.fCreateApi);\n        this.fc.$emit('on-reload', this.fCreateApi);\n    }\n\n    removeField(parser, value) {\n        const {id, field} = parser, index = this.sortList.indexOf(id);\n\n        delParser(parser, value);\n        $del(this.parsers, id);\n\n        if (index !== -1) {\n            this.sortList.splice(index, 1);\n        }\n\n        if (!this.fieldList[field]) {\n            $del(this.validate, field);\n            $del(this.formData, field);\n            $del(this.customData, field);\n            $del(this.fieldList, field);\n            $del(this.trueData, field);\n        }\n\n        if (this.subForm[parser.field])\n            $del(this.subForm, field);\n\n        return parser;\n    }\n\n    refresh() {\n        this.vm._refresh();\n    }\n\n    reloadRule(rules) {\n        const vm = this.vm;\n        if (!rules) return this.reloadRule(this.rules);\n        if (!this.origin.length) this.fCreateApi.refresh();\n        this.origin = [...rules];\n\n        const parsers = {...this.parsers};\n        const formData = this.fCreateApi.formData();\n        this.__init(rules);\n        this.loadRule(rules, false);\n        Object.keys(parsers).filter(id => this.parsers[id] === undefined)\n            .forEach(id => this.removeField(parsers[id], formData[parsers[id].field]));\n        this.$render.initOrgChildren();\n        this.formData = {...this.formData};\n        this.created();\n\n        vm.$f = this.fCreateApi;\n        this.$render.clearCacheAll();\n        this.refresh();\n\n        vm.$nextTick(() => {\n            this.reload();\n        });\n\n    }\n\n    setFormData(parser, value) {\n        $set(this.formData, parser.field, value);\n    }\n\n    getFormData(parser) {\n        return this.formData[parser.field];\n    }\n\n    fields() {\n        return Object.keys(this.formData);\n    }\n\n    isNoVal(parser) {\n        return !parser.isDef;\n    }\n\n}\n\nexport function delParser(parser, value) {\n    if (parser.ctrlRule)\n        removeControl(parser);\n    parser.watch.forEach((unWatch) => unWatch());\n    parser.watch = [];\n    parser.deleted = true;\n    parser.root = [];\n    Object.defineProperty(parser.rule, 'value', {\n        value\n    });\n}\n\nfunction parseArray(validate) {\n    return Array.isArray(validate) ? validate : [];\n}\n\nfunction getControl(parser) {\n    const control = parser.rule.control || [];\n    if (isPlainObject(control)) return [control];\n    else return control;\n}\n\nfunction removeControl(parser) {\n    const index = parser.root.indexOf(parser.ctrlRule);\n    if (index !== -1)\n        parser.root.splice(index, 1);\n    parser.ctrlRule = null;\n}\n\n\nfunction defRule() {\n    return {\n        validate: [],\n        col: {},\n        emit: [],\n        props: {},\n        on: {},\n        options: [],\n        title: undefined,\n        value: null,\n        field: '',\n        name: undefined,\n        className: undefined\n    };\n}\n\nfunction bindParser(rule, parser) {\n    Object.defineProperties(rule, {\n        __field__: enumerable(parser.field),\n        __fc__: enumerable(parser)\n    });\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        children: Array\n    },\n    render(h, ctx) {\n        return ctx.children\n    }\n}\n","import {\n    $set,\n    deepExtend,\n    extend,\n    isBool,\n    isElement,\n    toString,\n    isPlainObject\n} from '@form-create/utils';\nimport $FormCreate from '../components/formCreate';\nimport {formCreateName} from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from './handle';\nimport {creatorFactory} from '../factory/creator';\nimport BaseParser from '../factory/parser';\nimport {parseJson, copyRule, copyRules} from './util';\nimport fragment from '../components/fragment';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nexport default function createFormCreate(drive) {\n\n    const components = {}, parsers = {}, maker = makerFactory(), globalConfig = drive.getConfig(), data = {};\n\n    function setParser(id, parser) {\n        id = toString(id);\n        parsers[id.toLocaleLowerCase()] = parser;\n        FormCreate.maker[id] = creatorFactory(id);\n    }\n\n    function createParser() {\n        return class Parser extends BaseParser {\n        }\n    }\n\n    function component(id, component) {\n        id = toString(id);\n        const _id = id.toLocaleLowerCase();\n        if (_id === 'form-create' || _id === 'formcreate')\n            return get$FormCreate();\n        if (component === undefined)\n            return components[id];\n        else\n            components[id] = component;\n    }\n\n    function margeGlobal(config, _options) {\n        if (isBool(_options.submitBtn))\n            _options.submitBtn = {show: _options.submitBtn};\n\n        if (isBool(_options.resetBtn))\n            _options.resetBtn = {show: _options.resetBtn};\n\n        let options = deepExtend(config, _options);\n\n        $set(options, 'el', !options.el\n            ? window.document.body\n            : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n            ));\n\n        return options;\n    }\n\n    function get$FormCreate() {\n        return _vue.extend($FormCreate(FormCreate, components));\n    }\n\n\n    function bindAttr(formCreate) {\n        extend(formCreate, {\n            version: drive.version,\n            ui: drive.ui,\n            maker,\n            component,\n            setParser,\n            createParser,\n            data,\n            copyRule,\n            copyRules,\n            $form() {\n                return get$FormCreate();\n            },\n            parseJson(json) {\n                return parseJson(json);\n            }\n        });\n    }\n\n    function install(Vue, options) {\n        if (Vue._installedFormCreate === true) return;\n        Vue._installedFormCreate = true;\n\n        if (options && isPlainObject(options))\n            margeGlobal(globalConfig, options);\n\n        Vue.use(FormCreate);\n    }\n\n    function create(rules, option) {\n        const $vm = new _vue({\n            data() {\n                return {rule: rules, option: isElement(option) ? {el: option} : option};\n            },\n            render() {\n                return <form-create ref='fc' props={this.$data}/>\n            }\n        });\n        $vm.$mount();\n        return $vm;\n    }\n\n    class FormCreate {\n        constructor(rules, options = {}) {\n            this.fCreateApi = undefined;\n            this.drive = drive;\n            this.parsers = parsers;\n            this.vm = undefined;\n            this.rules = Array.isArray(rules) ? rules : [];\n            this.options = margeGlobal(deepExtend({formData: {}}, globalConfig), options);\n        }\n\n        beforeCreate(vm) {\n            this.vm = vm;\n            this.handle = new Handle(this);\n        }\n\n        created() {\n            this.handle.created();\n        }\n\n        api() {\n            return this.handle.fCreateApi;\n        }\n\n        render() {\n            return this.handle.run();\n        }\n\n        mounted() {\n            this.handle.mounted();\n        }\n\n        $emit(eventName, ...params) {\n            if (this.$parent)\n                this.$parent.$emit(`fc:${eventName}`, ...params);\n\n            this.vm.$emit(eventName, ...params);\n        }\n\n        static create(rules, _opt = {}, parent) {\n\n            let $vm = create(rules, _opt);\n\n            const _this = $vm.$refs.fc.formCreate;\n            _this.parent = parent;\n            _this.options.el.appendChild($vm.$el);\n\n            return _this.handle.fCreateApi;\n        }\n\n        static install(Vue) {\n            const $formCreate = function (rules, opt = {}) {\n                return FormCreate.create(rules, opt, this);\n            };\n\n            bindAttr($formCreate);\n\n            Vue.prototype.$formCreate = $formCreate;\n\n            Vue.component(formCreateName, get$FormCreate());\n            Vue.component(fragment.name, _vue.extend(fragment));\n            _vue = Vue;\n        }\n\n        static init(rules, _opt = {}) {\n            let $vm = create(rules, _opt), formCreate = $vm.$refs.fc.formCreate;\n\n            return {\n                mount($el) {\n                    if ($el && isElement($el))\n                        formCreate.options.el = $el;\n                    formCreate.options.el.appendChild($vm.$el);\n                    return formCreate.handle.fCreateApi;\n                },\n                remove() {\n                    formCreate.options.el.removeChild($vm.$el);\n                },\n                destroy() {\n                    this.remove();\n                    $vm.$destroy();\n                },\n                $f: formCreate.handle.fCreateApi\n            };\n        }\n    }\n\n    bindAttr(FormCreate);\n\n\n    drive.components.forEach(component => {\n        FormCreate.component(component.name, component);\n    });\n\n    drive.parsers.forEach(({name, parser}) => {\n        FormCreate.setParser(name, parser);\n    });\n\n    Object.keys(drive.makers).forEach(name => {\n        FormCreate.maker[name] = drive.makers[name];\n    });\n\n    return {\n        FormCreate,\n        install\n    };\n}\n","import VData from './vData';\nimport VNode from './vNode';\nimport {deepExtendArgs, uniqueId} from '@form-create/utils';\n\n\nexport default class BaseForm {\n\n    constructor(handle) {\n        this.$handle = handle;\n        this.vm = handle.vm;\n        this.drive = this.$handle.fc.drive;\n        this.options = handle.options;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.unique = uniqueId();\n        this.refName = `cForm${this.unique}`;\n    }\n\n    getFormRef() {\n        return this.vm.$refs[this.refName];\n    }\n\n    init() {\n        this.$render = this.$handle.$render;\n    }\n\n    getGetCol(parser) {\n        let col = parser.rule.col || {}, mCol = {}, pCol = {}, global = this.options.global;\n\n        if (!global)\n            return col;\n\n        if (global['*']) {\n            mCol = global['*'].col || {};\n        }\n\n        if (global[parser.type]) {\n            pCol = global[parser.type].col || {};\n        } else if (global[parser.originType]) {\n            pCol = global[parser.originType].col || {};\n        }\n        col = deepExtendArgs({}, mCol, pCol, col);\n        return col;\n    }\n\n    beforeRender() {\n\n    }\n\n    render() {\n\n    }\n\n    inputVData() {\n    }\n}\n"],"names":["$set","target","field","value","Vue","set","$del","delete","isValidChildren","children","Array","isArray","length","_toString","Object","prototype","toString","isUndef","v","val","_typeof","JSON","stringify","String","extend","to","_from","key","debounce","fn","wait","timeout","arg","clearTimeout","setTimeout","isType","type","call","isPlainObject","isFunction","isString","isBool","toLine","name","line","replace","toLowerCase","indexOf","substr","isElement","nodeType","deepExtend","origin","isArr","hasOwnProperty","clone","nst","undefined","deepExtendArgs","lst","forEach","id","uniqueId","errMsg","i","formCreateName","$FormCreate","FormCreate","components","componentName","props","rule","required","default","option","data","formData","buttonProps","resetProps","$f","isShow","unique","render","this","formCreate","methods","_buttonProps","_resetProps","_refresh","watch","n","handle","reloadRule","beforeCreate","$options","propsData","created","api","$emit","mounted","beforeDestroy","$render","clearCacheAll","defVData","on","VData","init","_data","_mergeJsxProps","classList","status","merge","class","keys","reduce","initial","_this","keyList","objList","obj","vdataField","concat","baseRule","validate","options","col","control","emit","template","emitPrefix","native","info","creatorFactory","title","Creator","creatorTypeFactory","typeName","maker","keyAttrs","attr","objAttrs","opt","arrAttrs","toJson","getRule","_isVue","__inject","__origin","__emit","parseJson","json","parse","k","eval","e","console","error","enumerable","configurable","copyRule","copyRules","rules","map","r","commonMaker","create","make","createTmp","vm","makerFactory","toMaker","ruleToMaker","defineProperties","find","findField","model","parseVData","domProps","innerHTML","get","getVNode","VNode","setVm","$h","$createElement","nodeName","VNodeFn","Node","context","nodes","toLocaleLowerCase","BaseParser","vData","vNode","originType","isDef","el","refName","formItemRefName","root","ctrlRule","update","$handle","deleted","formValue","$de","Render","fc","$form","cache","renderList","parser","clear","cacheStatus","refresh","parent","clearCache","vnode","use","parsers","orgChildren","beforeRender","vn","sortList","renderParser","filter","global","toData","compile","getInjectData","setTemplateProps","fCreateApi","$off","$on","_this2","onInput","setGlobalConfig","form","renderTemplate","setCache","isNoVal","defaultRender","renderChildren","container","getCache","custom","parserToData","ref","subForm","_this3","addSubForm","getFormData","inputVData","child","__fc__","_this4","removeField","vdata","fApi","$props","Api","h","tidyFields","fields","all","fieldList","getValue","setValue","changeValue","changeField","getParser","index","__field__","splice","reload","__origin__","destroy","$el","parentNode","removeChild","$destroy","append","after","isChild","prepend","hidden","hiddenStatus","visibility","visibilityStatus","disabled","trueData","component","customData","bind","properties","submitBtnProps","resetBtnProps","node","updateOptions","onSubmit","sync","hideForm","changeStatus","clearChangeStatus","updateRule","cover","updateRules","updateValidate","updateValidates","validates","method","Error","once","$once","off","trigger","event","args","callback","subLen","state","___this","valid","len","validFn","clearValidateState","sub","validateField","resetFields","resetField","refreshControl","submit","successFn","failFn","clearSub","_this5","clearSubValidateState","getSubForm","btn","loading","show","resetBtn","closeModal","closeModel","Handle","watching","__init","drive","formRender","loadRule","initOrgChildren","_rule","parseOn","parseProps","createParser","parseRule","notField","setParser","bindParser","push","defineProperty","toValue","isChange","setFormData","toFormValue","valueChange","def","defRule","parseArray","parseInjectEvent","margeEmit","emitEvent","parseEmit","injectEvent","inject","self","_fn","unshift","emitKey","config","eventName","fieldKey","run","validateControl","submitBtn","$watch","o","deep","immediate","controls","getControl","removeControl","_this6","addParserWitch","$refs","defaultValue","mountedParser","onReload","delParser","_this7","$nextTick","unWatch","className","NAME","functional","ctx","_vue","window","createFormCreate","globalConfig","getConfig","_id","get$FormCreate","margeGlobal","_options","document","querySelector","body","bindAttr","version","ui","$vm","$data","$mount","params","$parent","_opt","appendChild","$formCreate","fragment","mount","remove","makers","install","_installedFormCreate","BaseForm","mCol","pCol"],"mappings":"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"}