{"version":3,"file":"form-create.core.min.js","sources":["../../utils/src/index.js","../src/components/formCreate.js","../src/factory/vData.js","../src/factory/creator.js","../src/factory/maker.js","../src/factory/vNode.js","../src/factory/parser.js","../src/core/render.js","../src/core/handle.js","../src/core/index.js","../src/factory/form.js"],"sourcesContent":["import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n\nexport function isValidChildren(children) {\n    return Array.isArray(children) && children.length > 0;\n}\n\nexport const _toString = Object.prototype.toString;\n\nexport function isUndef(v) {\n    return v === undefined || v === null\n}\n\nexport function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n\nexport function extend(to, _from) {\n    for (var key in _from) {\n        $set(to, key, _from[key]);\n    }\n    return to\n}\n\nexport function debounce(fn, wait) {\n    var timeout = null;\n    return function (...arg) {\n        if (timeout !== null)\n            clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...arg), wait);\n    }\n}\n\nexport function isType(arg, type) {\n    return _toString.call(arg) === '[object ' + type + ']'\n}\n\nexport function isDate(arg) {\n    return isType(arg, 'Date');\n}\n\nexport function isPlainObject(arg) {\n    return isType(arg, 'Object');\n}\n\nexport function isFunction(arg) {\n    return isType(arg, 'Function');\n}\n\nexport function isString(arg) {\n    return isType(arg, 'String');\n}\n\nexport function isBool(arg) {\n    return isType(arg, 'Boolean');\n}\n\nexport function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n\nexport function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n)\n}\n\nexport function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ((isUndef(value) ? [] : [value])\n        );\n}\n\nexport function isElement(arg) {\n    return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !isPlainObject(arg)\n}\n\nexport function deepExtend(origin, target = {}) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || isPlainObject(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                deepExtend(origin[key], clone);\n            } else {\n                $set(origin, key, clone);\n            }\n        }\n    }\n    return origin\n}\n\nlet id = 0;\n\nexport function uniqueId() {\n    return ++id\n}\n\nexport function toDefSlot(slot, $h) {\n    return [slot && isFunction(slot) ? slot($h) : slot]\n}\n\n\nexport function timeStampToDate(timeStamp) {\n    if (isDate(timeStamp))\n        return timeStamp;\n    else {\n        let date = new Date(timeStamp);\n        return date.toString() === 'Invalid Date' ? timeStamp : date;\n    }\n}\n\nexport function preventDefault(e) {\n    e.preventDefault();\n}\n\nexport function dateFormat(fmt, date = new Date) {\n    let o = {\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n    for (let k in o)\n        if (new RegExp('(' + k + ')').test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1)\n                ? (o[k])\n                : (('00' + o[k]).substr(('' + o[k]).length)));\n    return fmt\n}\n\nexport function hasSlot(children, slotName) {\n    return children.length !== 0 && children.some(child => {\n        if (child.data) {\n            if ((!child.data.slot && slotName === 'default') || (child.data.slot === slotName))\n                return true;\n        } else if (slotName === 'default')\n            return true;\n        return false;\n    })\n}\n\nexport function errMsg(i) {\n\n    return '\\n\\x67\\x69\\x74\\x68\\x75\\x62\\x3a\\x68\\x74\\x74\\x70' +\n        '\\x73\\x3a\\x2f\\x2f\\x67\\x69\\x74\\x68\\x75\\x62\\x2e\\x63\\x6f' +\n        '\\x6d\\x2f\\x78\\x61\\x62\\x6f\\x79\\x2f\\x66\\x6f\\x72\\x6d\\x2d' +\n        '\\x63\\x72\\x65\\x61\\x74\\x65\\n\\x64\\x6f\\x63\\x75\\x6d\\x65' +\n        '\\x6e\\x74\\x3a\\x68\\x74\\x74\\x70\\x3a\\x2f\\x2f\\x77\\x77\\x77' +\n        '\\x2e\\x66\\x6f\\x72\\x6d\\x2d\\x63\\x72\\x65\\x61\\x74\\x65\\x2e' +\n        '\\x63\\x6f\\x6d' + (i || '');\n}","import {deepExtend} from '@form-create/utils';\n\nexport const formCreateName = 'FormCreate';\n\nexport default function $FormCreate(FormCreate, components) {\n    return {\n        name: formCreateName,\n        props: {\n            rule: {\n                type: Array,\n                required: true,\n                default: () => {\n                    return {};\n                }\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                },\n                required: false\n            },\n            value: Object\n        },\n        data: () => {\n            return {\n                formData: undefined,\n                buttonProps: undefined,\n                resetProps: undefined,\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n            };\n        },\n        components,\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _buttonProps(props) {\n                this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n            },\n            _resetProps(props) {\n                this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n            },\n            _refresh() {\n                this.unique += 1;\n            }\n        },\n        watch: {\n            option: '_refresh',\n            rule(n) {\n                this.formCreate.handle.reloadRule(n);\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(rule, option);\n            this.formCreate.beforeCreate(this);\n        },\n        created() {\n            this.formCreate.created();\n            this.$f = this.formCreate.api();\n            this.$emit('input', this.$f);\n        },\n        mounted() {\n            const formCreate = this.formCreate;\n\n            formCreate.mounted();\n            this.$emit('input', this.$f);\n\n        },\n        beforeDestroy() {\n            this.formCreate.handle.reloadRule([]);\n            this.formCreate.handle.$render.clearCacheAll();\n        },\n    }\n}","import {$set, extend, isPlainObject, isUndef, toArray, toString} from '@form-create/utils';\n\nfunction defVData() {\n    return {\n        class: {},\n        style: {},\n        attrs: {},\n        props: {},\n        domProps: {},\n        on: {},\n        nativeOn: {},\n        directives: [],\n        scopedSlots: {},\n        slot: undefined,\n        key: undefined,\n        ref: undefined\n    };\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            classList.forEach((cls) => {\n                $set(this._data.class, toString(cls), true);\n            });\n        } else if (isPlainObject(classList)) {\n            $set(this._data, 'class', extend(this._data.class, classList));\n        } else {\n            $set(this._data.class, toString(classList), status === undefined ? true : status);\n        }\n\n        return this;\n    }\n\n    directives(directives) {\n        if (isUndef(directives)) return this;\n        $set(this._data, 'directives', this._data.directives.concat(toArray(directives)));\n        return this;\n    }\n\n    init() {\n        this._data = defVData();\n        return this;\n    }\n\n    get() {\n        const data = Object.keys(this._data).reduce((initial, key) => {\n            const value = this._data[key];\n            if (value === undefined) return initial;\n            if (Array.isArray(value) && !value.length) return initial;\n            if (!Object.keys(value).length) return initial;\n\n            initial[key] = value;\n            return initial;\n        }, {});\n        this.init();\n        return data;\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        $set(this._data, key, val);\n        return this;\n    };\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n\n        if (isPlainObject(obj)) {\n            $set(this._data, key, extend(this._data[key], obj));\n        } else {\n            $set(this._data[key], toString(obj), val);\n        }\n\n        return this;\n    };\n});\n\n","import {$set, extend, isFunction, isPlainObject} from '@form-create/utils';\nimport VData from './vData';\n\nfunction baseRule() {\n    return {\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        emit: [],\n        template: undefined,\n        emitPrefix: undefined\n    };\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props);\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type)) type(maker);\n        else maker.props(typeName, type);\n        return maker;\n    };\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n        extend(this._data, baseRule());\n        extend(this._data, {type, title, field, value});\n        if (isPlainObject(props)) this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this;\n    }\n\n    getRule() {\n        return this._data;\n    }\n\n    event(...args) {\n        this.on(...args);\n        return this;\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'defaultSlot', 'value', 'name', 'title'];\n\nkeyAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (value) {\n        $set(this._data, attr, value);\n        return this;\n    };\n});\n\nconst objAttrs = ['col'];\n\nobjAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this._data, attr, extend(this._data[attr], opt));\n        return this;\n    };\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit'];\n\narrAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this._data, attr, this._data[attr].concat(opt));\n        return this;\n    };\n});\n","import Creator, {creatorFactory} from './creator';\nimport {extend, isPlainObject, isString, isValidChildren} from '@form-create/utils';\n\nexport default function makerFactory() {\n    let maker = {};\n\n\n    const commonMaker = creatorFactory('');\n\n    extend(maker, {\n        create(type, field, title) {\n            let make = commonMaker('', field);\n            make._data.type = type;\n            make._data.title = title;\n            return make;\n        },\n        createTmp(template, vm, field, title) {\n            let make = commonMaker('', field);\n            make._data.type = 'template';\n            make._data.template = template;\n            make._data.title = title;\n            make._data.vm = vm;\n            return make;\n        }\n    });\n    maker.template = maker.createTmp;\n    maker.parse = parse;\n\n    return maker;\n}\n\nfunction parse(rule, toMaker = false) {\n    if (isString(rule)) rule = JSON.parse(rule);\n\n    if (rule instanceof Creator) return toMaker ? rule : rule.getRule();\n    if (isPlainObject(rule)) {\n        const maker = ruleToMaker(rule);\n        return toMaker ? maker : maker.getRule();\n    } else if (!Array.isArray(rule)) return rule;\n    else {\n        const rules = rule.map(r => parse(r, toMaker));\n        Object.defineProperty(rules, 'find', {\n            value: findField,\n            enumerable: false,\n            configurable: false\n        });\n\n        return rules;\n    }\n}\n\nfunction findField(field) {\n    let children = [];\n    for (let i in this) {\n        const rule = this[i] instanceof Creator ? this[i].rule : this[i];\n        if (rule.field === field) return this[i];\n        if (isValidChildren(rule.children)) children = children.concat(rule.children);\n    }\n    if (children.length > 0) return findField.call(children, field);\n}\n\nfunction ruleToMaker(rule) {\n    const maker = new Creator();\n    Object.keys(rule).forEach(key => {\n        maker._data[key] = rule[key];\n    });\n    return maker;\n}\n","import {isFunction, isString} from '@form-create/utils';\n\nfunction parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data;\n}\n\nfunction getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || []);\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        if (vm)\n            this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node;\n    }\n\n    static use(nodes) {\n        Object.keys(nodes).forEach((k) => {\n            VNode.prototype[k] = function (data, VNodeFn) {\n                return this.make(nodes[k], data, VNodeFn);\n            };\n        });\n    }\n}\n","import VData from './vData';\nimport {toString, uniqueId} from '@form-create/utils';\nimport VNode from './vNode';\n\nexport default class BaseParser {\n\n    constructor(handle, rule, id) {\n        this.rule = rule;\n        this.vData = new VData;\n        this.vNode = new VNode();\n        this.id = id;\n        this.watch = [];\n        this.type = toString(rule.type);\n        this.isDef = true;\n        this.el = undefined;\n\n        if (!rule.field) {\n            this.field = '_def_' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n        this.name = rule.name;\n\n        this.unique = 'fc_' + id;\n        this.key = 'key_' + id;\n        this.refName = '__' + this.field + this.id;\n        this.formItemRefName = 'fi' + this.refName;\n\n        this.update(handle);\n        this.init();\n    }\n\n    update(handle) {\n        this.$handle = handle;\n        this.$render = handle.$render;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.vNode.setVm(this.vm);\n        this.deleted = false;\n    }\n\n    init() {\n    }\n\n    toFormValue(value) {\n        return value\n    }\n\n    toValue(formValue) {\n        return formValue;\n    }\n}","import {_vue as Vue} from './index';\nimport {debounce, errMsg, isString, isUndef, isValidChildren} from '@form-create/utils';\nimport VNode from '../factory/vNode';\nimport VData from '../factory/vData';\n\n\nconst $de = debounce((fn) => fn(), 1);\n\nexport default class Render {\n    constructor(handle) {\n        this.$handle = handle;\n        this.fc = handle.fc;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.form = handle.$form;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.cache = {};\n        this.renderList = {};\n    }\n\n    clearCache(parser, clear = true) {\n        if (!this.cache[parser.id]) return;\n        if (this.cacheStatus(parser))\n            this.$handle.refresh();\n        const parent = this.cache[parser.id].parent;\n        this.cache[parser.id] = null;\n        if (parent && clear)\n            this.clearCache(parent, clear);\n    }\n\n    clearCacheAll() {\n        this.cache = {};\n    }\n\n    setCache(parser, vnode, parent) {\n        this.cache[parser.id] = {\n            vnode,\n            use: false,\n            parent\n        };\n    }\n\n    cacheStatus(parser) {\n        return this.cache[parser.id] && (this.cache[parser.id].use === true || this.cache[parser.id].parent);\n    }\n\n    getCache(parser) {\n        const cache = this.cache[parser.id];\n        cache.use = true;\n        return cache.vnode;\n    }\n\n    initOrgChildren() {\n        const parsers = this.$handle.parsers;\n        this.orgChildren = Object.keys(parsers).reduce((initial, id) => {\n            const children = parsers[id].rule.children;\n            initial[id] = isValidChildren(children) ? [...children] : [];\n\n            return initial;\n        }, {});\n    }\n\n    run() {\n        if (!this.vm.isShow)\n            return;\n\n        this.form.beforeRender();\n\n        const vn = this.$handle.sortList.map((id) => {\n            let parser = this.$handle.parsers[id];\n            if (parser.type === 'hidden') return;\n            return this.renderParser(parser);\n        }).filter((val) => val !== undefined);\n\n        return this.form.render(vn);\n    }\n\n    setGlobalConfig(parser) {\n        if (!this.options.global) return;\n\n        if (this.options.global['*']) {\n            this.toData(parser, this.options.global['*']);\n        }\n        if (this.options.global[parser.type]) {\n            this.toData(parser, this.options.global[parser.type]);\n        }\n    }\n\n    renderTemplate(parser) {\n        const {id, rule, key} = parser;\n        if (Vue.compile === undefined) {\n            console.error('使用的 Vue 版本不支持 compile' + errMsg());\n            return [];\n        }\n\n        if (!this.renderList[id]) {\n            if (isUndef(rule.vm)) rule.vm = new Vue;\n            this.renderList[id] = Vue.compile(rule.template);\n\n        }\n\n        setTemplateProps(parser);\n\n        rule.vm.$off('input');\n        rule.vm.$on('input', (value) => {\n            this.onInput(parser, value);\n        });\n\n        const vn = this.renderList[id].render.call(rule.vm);\n\n        if (vn.data === undefined) vn.data = {};\n        vn.key = key;\n        return vn;\n    }\n\n    renderParser(parser, parent) {\n        parser.vData.get();\n        this.setGlobalConfig(parser);\n\n        if (!this.cache[parser.id] || parser.type === 'template') {\n            let {type, rule} = parser, form = this.form, vn;\n\n            if (type === 'template' && rule.template) {\n                vn = this.renderTemplate(parser);\n\n                if (parent) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            } else if (!this.$handle.isNoVal(parser)) {\n                const children = this.renderChildren(parser);\n                vn = parser.render ? parser.render(children) : this.defaultRender(parser, children);\n            } else {\n                vn = this.vNode.make(type, this.inputVData(parser), this.renderChildren(parser));\n                if (parent) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            }\n            const cache = form.container(vn, parser);\n            this.setCache(parser, cache, parent);\n            return cache;\n        }\n\n        return this.getCache(parser);\n    }\n\n    toData(parser, data) {\n        Object.keys(parser.vData._data).forEach((key) => {\n            if (data[key] !== undefined)\n                parser.vData[key](data[key]);\n        });\n\n        return parser.vData;\n    }\n\n    parserToData(parser) {\n        return this.toData(parser, parser.rule);\n    }\n\n    inputVData(parser, custom) {\n        const {refName, key, rule} = parser;\n\n        this.parserToData(parser);\n\n        let data = parser.vData\n            .ref(refName).key('fc_item' + key);\n\n        if (!custom)\n            data.on('input', (value) => {\n                this.onInput(parser, value);\n            }).props('value', this.$handle.getFormData(parser));\n\n        if (isUndef(rule.props.size))\n            data.props('size', this.$handle.options.form.size);\n\n        return data;\n    }\n\n    onInput(parser, value) {\n        this.$handle.onInput(parser, value);\n    }\n\n    renderChildren(parser) {\n        const {children} = parser.rule, orgChildren = this.orgChildren[parser.id];\n\n        if (!isValidChildren(children)) {\n            orgChildren.forEach(child => {\n                if (!isString(child) && child.__fc__) {\n                    this.$handle.removeField(child.__fc__);\n                }\n            });\n            this.orgChildren[parser.id] = [];\n            return [];\n        }\n\n        this.orgChildren[parser.id].forEach(child => {\n            if (children.indexOf(child) === -1 && !isString(child) && child.__fc__) {\n                this.$handle.removeField(child.__fc__);\n            }\n        });\n\n        return children.map(child => {\n            if (isString(child)) return child;\n\n            if (child.__fc__) {\n                return this.renderParser(child.__fc__, parser);\n            }\n\n            $de(() => this.$handle.reloadRule());\n        });\n\n    }\n\n    defaultRender(parser, children) {\n        return this.vNode[parser.type] ? this.vNode[parser.type](this.inputVData(parser), children) : this.vNode.make(parser.type, this.inputVData(parser), children);\n    }\n}\n\nfunction setTemplateProps(parser) {\n    const {rule} = parser;\n    if (!rule.vm.$props)\n        return;\n    const keys = Object.keys(rule.vm.$props);\n    keys.forEach(key => {\n        if (rule.props[key] !== undefined)\n            rule.vm.$props[key] = rule.props[key];\n    });\n\n    if (keys.indexOf('value') !== -1) {\n        rule.vm.$props.value = parser.rule.value;\n    }\n}","import {\n    $del,\n    $set, deepExtend,\n    errMsg,\n    extend,\n    isString,\n    isUndef,\n    isValidChildren,\n    toLine,\n    toString,\n    uniqueId,\n    isFunction\n} from '@form-create/utils';\nimport BaseParser from '../factory/parser';\nimport Render from './render';\n\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport default class Handle {\n\n    constructor(fc) {\n        const {vm, rules, options} = fc;\n\n        this.vm = vm;\n        this.fc = fc;\n        this.id = uniqueId();\n        this.options = options;\n\n        this.validate = {};\n        this.formData = {};\n\n        this.fCreateApi = undefined;\n\n        this.__init(rules);\n        this.$form = new fc.drive.formRender(this, this.id);\n        this.$render = new Render(this);\n\n        this.loadRule(this.rules, false);\n\n        this.$render.initOrgChildren();\n\n        this.$form.init();\n    }\n\n    __init(rules) {\n        this.fieldList = {};\n        this.trueData = {};\n        this.parsers = {};\n        this.customData = {};\n        this.sortList = [];\n        this.rules = rules;\n        this.origin = [...this.rules];\n    }\n\n    loadRule(rules, child) {\n        rules.map((_rule) => {\n            if (child && isString(_rule)) return;\n\n            if (!_rule.type)\n                return console.error('未定义生成规则的 type 字段' + errMsg());\n\n            let parser;\n\n            if (_rule.__fc__) {\n                parser = _rule.__fc__;\n\n                if (parser.vm !== this.vm && !parser.deleted)\n                    return console.error(`${_rule.type}规则正在其他的 <form-create> 中使用` + errMsg());\n                parser.update(this);\n            } else {\n                parser = this.createParser(this.parseRule(_rule));\n            }\n\n            let children = parser.rule.children, rule = parser.rule;\n            if (!this.notField(parser.field))\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            this.setParser(parser);\n\n            if (!_rule.__fc__) {\n                bindParser(_rule, parser);\n            }\n            if (isValidChildren(children)) {\n                this.loadRule(children, true);\n            }\n\n            if (!child) {\n                this.sortList.push(parser.id);\n            }\n\n            if (!this.isNoVal(parser))\n                Object.defineProperty(parser.rule, 'value', {\n                    get: () => {\n                        return parser.toValue(this.getFormData(parser));\n                    },\n                    set: (value) => {\n                        if (this.isChange(parser, value)) {\n                            this.$render.clearCache(parser, true);\n                            this.setFormData(parser, parser.toFormValue(value));\n                        }\n                    }\n                });\n\n            return parser;\n        }).filter(h => h).forEach(h => {\n            h.root = rules;\n        });\n    }\n\n    createParser(rule) {\n        const id = this.id + '' + uniqueId(), parsers = this.fc.parsers, type = toString(rule.type).toLocaleLowerCase();\n\n        const Parser = (parsers[type]) ? parsers[type] : BaseParser;\n\n        return new Parser(this, rule, id);\n    }\n\n    parseRule(_rule) {\n        const def = defRule(), rule = getRule(_rule);\n        Object.keys(def).forEach(k => {\n            if (isUndef(rule[k])) $set(rule, k, def[k]);\n        });\n        const parseRule = {\n            options: parseArray(rule.options)\n        };\n\n        parseRule.on = parseOn(rule.on, this.parseEmit(rule));\n\n        Object.keys(parseRule).forEach(k => {\n            $set(rule, k, parseRule[k]);\n        });\n\n        // if (isUndef(rule.props.elementId)) $set(rule.props, 'elementId', this.unique);\n        return rule;\n    }\n\n    parseEmit(rule) {\n        let event = {}, {emit, emitPrefix, field} = rule;\n\n        if (!Array.isArray(emit)) return event;\n\n        emit.forEach(eventName => {\n            const emitKey = emitPrefix ? emitPrefix : field;\n            const fieldKey = toLine(`${emitKey}-${eventName}`).replace('_', '-');\n\n            event[eventName] = (...arg) => {\n                this.vm.$emit(fieldKey, ...arg);\n            };\n        });\n\n        return event;\n    }\n\n    run() {\n        if (this.vm.unique > 0)\n            return this.$render.run();\n        else {\n            this.vm.unique = 1;\n            return [];\n        }\n    }\n\n    setParser(parser) {\n        let {id, field, name, rule} = parser;\n        if (this.parsers[id])\n            return;\n        this.parsers[id] = parser;\n\n        if (this.isNoVal(parser)) {\n            if (name)\n                $set(this.customData, name, parser);\n            return;\n        }\n        this.fieldList[field] = parser;\n        $set(this.formData, field, parser.toFormValue(rule.value));\n        $set(this.validate, field, rule.validate || []);\n        $set(this.trueData, field, parser);\n    }\n\n    notField(id) {\n        return this.parsers[id] === undefined;\n    }\n\n    isChange(parser, value) {\n        return JSON.stringify(parser.rule.value) !== JSON.stringify(value);\n    }\n\n    onInput(parser, value) {\n        if (!this.isNoVal(parser) && this.isChange(parser, parser.toValue(value))) {\n            this.$render.clearCache(parser);\n            this.setFormData(parser, value);\n        }\n    }\n\n    getParser(id) {\n        if (this.fieldList[id])\n            return this.fieldList[id];\n        else if (this.customData[id])\n            return this.customData[id];\n        else if (this.parsers[id])\n            return this.parsers[id];\n    }\n\n    created() {\n        const vm = this.vm;\n\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'formData', this.formData);\n\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = this.fc.drive.getGlobalApi(this);\n        this.fCreateApi.rule = this.rules;\n        this.fCreateApi.config = this.options;\n    }\n\n\n    addParserWitch(parser) {\n        const vm = this.vm;\n\n        Object.keys(parser.rule).forEach((key) => {\n            if (['field', 'type', 'value', 'vm', 'template', 'name', 'config', 'children'].indexOf(key) !== -1 || parser.rule[key] === undefined) return;\n            parser.watch.push(vm.$watch(() => parser.rule[key], (n, o) => {\n                if (o === undefined) return;\n                this.$render.clearCache(parser);\n            }, {deep: true, immediate: true}));\n\n        });\n\n        parser.watch.push(vm.$watch(() => parser.rule.children, (n, o) => {\n            if (o === undefined) return;\n            this.$render.clearCache(parser, true);\n        }));\n    }\n\n    mountedParser() {\n        const vm = this.vm;\n        Object.keys(this.parsers).forEach((id) => {\n            let parser = this.parsers[id];\n            if (parser.watch.length === 0) this.addParserWitch(parser);\n\n            parser.el = vm.$refs[parser.refName] || {};\n\n            if (parser.defaultValue === undefined)\n                parser.defaultValue = deepExtend({}, {value: parser.rule.value}).value;\n\n            parser.mounted && parser.mounted();\n        });\n    }\n\n    mounted() {\n        const mounted = this.options.mounted;\n\n        this.mountedParser();\n\n        mounted && mounted(this.fCreateApi);\n        this.fc.$emit('mounted', this.fCreateApi);\n    }\n\n    reload() {\n        const onReload = this.options.onReload;\n\n        this.mountedParser();\n\n        onReload && onReload(this.fCreateApi);\n        this.fc.$emit('reload', this.fCreateApi);\n    }\n\n    removeField(parser) {\n        const {id, field} = parser, index = this.sortList.indexOf(id);\n\n        delParser(parser);\n        $del(this.parsers, id);\n        $del(this.validate, field);\n\n        if (index !== -1) {\n            this.sortList.splice(index, 1);\n        }\n        $del(this.formData, field);\n        $del(this.customData, field);\n        $del(this.fieldList, field);\n        $del(this.trueData, field);\n    }\n\n    refresh() {\n        this.vm._refresh();\n    }\n\n    reloadRule(rules) {\n        const vm = this.vm;\n        if (!rules) return this.reloadRule(this.rules);\n        if (!this.origin.length) this.fCreateApi.refresh();\n        this.origin = [...rules];\n\n        const parsers = {...this.parsers};\n        this.__init(rules);\n        this.loadRule(rules, false);\n        Object.keys(parsers).filter(id => this.parsers[id] === undefined)\n            .forEach(id => this.removeField(parsers[id]));\n        this.$render.initOrgChildren();\n        this.created();\n\n        vm.$nextTick(() => {\n            this.reload();\n        });\n\n        vm.$f = this.fCreateApi;\n        this.$render.clearCacheAll();\n        this.refresh();\n    }\n\n    setFormData(parser, value) {\n        this.formData[parser.field] = value;\n    }\n\n    getFormData(parser) {\n        return this.formData[parser.field];\n    }\n\n    fields() {\n        return Object.keys(this.formData);\n    }\n\n    isNoVal(parser) {\n        return !parser.isDef;\n    }\n\n}\n\nexport function delParser(parser) {\n    parser.watch.forEach((unWatch) => unWatch());\n    parser.watch = [];\n    parser.deleted = true;\n    Object.defineProperty(parser.rule, 'value', {\n        value: extend({}, {value: parser.rule.value}).value\n    });\n}\n\nfunction parseOn(on, emitEvent) {\n    if (Object.keys(emitEvent).length > 0) extend(on, emitEvent);\n    return on;\n}\n\nfunction parseArray(validate) {\n    return Array.isArray(validate) ? validate : [];\n}\n\n\nfunction defRule() {\n    return {\n        validate: [],\n        col: {},\n        emit: [],\n        props: {},\n        on: {},\n        options: [],\n        title: '',\n        value: '',\n        field: '',\n        name: '',\n        className: ''\n    };\n}\n\nfunction bindParser(rule, parser) {\n    Object.defineProperties(rule, {\n        __field__: {\n            value: parser.field,\n            enumerable: false,\n            configurable: false\n        },\n        __fc__: {\n            value: parser,\n            enumerable: false,\n            configurable: false\n        }\n    });\n}","import {\n    $set,\n    deepExtend,\n    extend,\n    isBool,\n    isElement,\n    toString,\n    isPlainObject,\n} from '@form-create/utils';\nimport $FormCreate from '../components/formCreate';\nimport {formCreateName} from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from './handle';\nimport {creatorFactory} from '../factory/creator';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nexport default function createFormCreate(drive) {\n\n    const components = {}, parsers = {}, maker = makerFactory(), globalConfig = drive.getConfig();\n\n    function setParser(id, parser) {\n        id = toString(id);\n        parsers[id.toLocaleLowerCase()] = parser;\n        FormCreate.maker[id] = creatorFactory(id);\n    }\n\n    function component(id, component) {\n        id = toString(id);\n        const _id = id.toLocaleLowerCase();\n        if (_id === 'form-create' || _id === 'formcreate')\n            return _vue.extend($FormCreate(FormCreate, components));\n        if (component === undefined)\n            return components[toString(id)];\n        else\n            components[toString(id)] = component;\n    }\n\n    function margeGlobal(config, _options) {\n        if (isBool(_options.sumbitBtn))\n            _options.sumbitBtn = {show: _options.sumbitBtn};\n\n        if (isBool(_options.resetBtn))\n            _options.resetBtn = {show: _options.resetBtn};\n\n        let options = deepExtend(config, _options);\n\n        $set(options, 'el', !options.el\n            ? window.document.body\n            : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n            ));\n\n        return options;\n    }\n\n    function bindAttr(FormCreate) {\n        extend(FormCreate, {\n            version: drive.version,\n            ui: drive.ui,\n            maker,\n            component,\n            setParser,\n            $formCreate() {\n                return $FormCreate(FormCreate, components);\n            }\n        });\n    }\n\n    function install(Vue, options) {\n        if (Vue._installedFormCreate === true) return;\n        Vue._installedFormCreate = true;\n\n        if (options && isPlainObject(options))\n            margeGlobal(globalConfig, options);\n\n        Vue.use(FormCreate);\n    }\n\n    function create(rules, option) {\n        const $vm = new _vue({\n            data() {\n                return {rule: rules, option: isElement(option) ? {el: option} : option};\n            },\n            render() {\n                return <form-create ref='fc' props={this.$data}/>\n            }\n        });\n        $vm.$mount();\n        return $vm;\n    }\n\n    class FormCreate {\n        constructor(rules, options = {}) {\n            this.fCreateApi = undefined;\n            this.drive = drive;\n            this.parsers = parsers;\n            this.vm = undefined;\n            this.rules = Array.isArray(rules) ? rules : [];\n            this.options = margeGlobal(deepExtend({}, globalConfig), options);\n        }\n\n        beforeCreate(vm) {\n            this.vm = vm;\n            this.handle = new Handle(this);\n        }\n\n        created() {\n            this.handle.created();\n        }\n\n        api() {\n            return this.handle.fCreateApi;\n        }\n\n        render() {\n            return this.handle.run();\n        }\n\n        mounted() {\n            this.handle.mounted();\n        }\n\n        $emit(eventName, ...params) {\n            if (this.$parent)\n                this.$parent.$emit(`fc:${eventName}`, ...params);\n\n            this.vm.$emit(eventName, ...params);\n        }\n\n        static create(rules, _opt = {}, parent) {\n\n            let $vm = create(rules, _opt);\n\n            const _this = $vm.$refs.fc.formCreate;\n            _this.parent = parent;\n            _this.options.el.appendChild($vm.$el);\n\n            return _this.handle.fCreateApi;\n        }\n\n        static install(Vue) {\n            const $formCreate = function (rules, opt = {}) {\n                return FormCreate.create(rules, opt, this);\n            };\n\n            bindAttr($formCreate);\n\n            Vue.prototype.$formCreate = $formCreate;\n\n            Vue.component(formCreateName, Vue.extend($FormCreate(FormCreate, components)));\n            _vue = Vue;\n        }\n\n        static init(rules, _opt = {}) {\n            let $vm = create(rules, _opt), formCreate = $vm.$refs.fc.formCreate;\n\n            return {\n                mount($el) {\n                    if ($el && isElement($el))\n                        formCreate.options.el = $el;\n                    formCreate.options.el.appendChild($vm.$el);\n                    return formCreate.handle.fCreateApi;\n                },\n                remove() {\n                    formCreate.options.el.removeChild($vm.$el);\n                },\n                $f: formCreate.handle.fCreateApi\n            };\n        }\n    }\n\n    bindAttr(FormCreate);\n\n\n    drive.components.forEach(component => {\n        FormCreate.component(component.name, component);\n    });\n\n    drive.parsers.forEach(({name, parser}) => {\n        FormCreate.setParser(name, parser);\n    });\n\n    Object.keys(drive.makers).forEach(name => {\n        FormCreate.maker[name] = drive.makers[name];\n    });\n\n    return {\n        FormCreate,\n        install\n    };\n}","import VData from './vData';\nimport VNode from './vNode';\nimport {deepExtend} from '@form-create/utils';\n\n\nexport default class BaseForm {\n\n    constructor(handle) {\n        this.$handle = handle;\n        this.vm = handle.vm;\n        this.drive = this.$handle.fc.drive;\n        this.options = handle.options;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.unique = handle.id;\n    }\n\n    init() {\n        this.$render = this.$handle.$render;\n    }\n\n    getGetCol(parser) {\n        let col = parser.rule.col || {}, mCol = {}, pCol = {};\n\n        if (!this.options.global)\n            return col;\n\n        if (this.options.global['*']) {\n            mCol = this.options.global['*'].col || {};\n        }\n\n        if (this.options.global[parser.type]) {\n            pCol = this.options.global[parser.type].col || {};\n        }\n        col = deepExtend(deepExtend(deepExtend({}, mCol), pCol), col);\n        return col;\n    }\n\n    beforeRender() {\n\n    }\n\n    render() {\n\n    }\n}\n"],"names":["$set","target","field","value","Vue","set","$del","delete","isValidChildren","children","Array","isArray","length","_toString","Object","prototype","toString","isUndef","v","val","_typeof","JSON","stringify","String","extend","to","_from","key","isType","arg","type","call","isPlainObject","isFunction","isString","isBool","isElement","nodeType","deepExtend","origin","isArr","hasOwnProperty","clone","nst","undefined","id","uniqueId","errMsg","i","formCreateName","$FormCreate","FormCreate","components","name","props","rule","required","default","option","data","formData","buttonProps","resetProps","$f","isShow","unique","render","this","formCreate","methods","_buttonProps","_resetProps","_refresh","watch","n","handle","reloadRule","beforeCreate","$options","propsData","created","api","$emit","mounted","beforeDestroy","$render","clearCacheAll","VData","init","classList","status","forEach","cls","_this","_data","class","directives","concat","style","attrs","domProps","on","nativeOn","scopedSlots","slot","ref","keys","reduce","initial","_this2","creatorFactory","title","Creator","creatorTypeFactory","typeName","maker","obj","validate","options","col","emit","template","emitPrefix","attr","opt","makerFactory","commonMaker","create","make","createTmp","vm","parse","toMaker","getRule","ruleToMaker","rules","map","r","defineProperty","findField","enumerable","configurable","fn","wait","timeout","VNode","setVm","$h","$createElement","nodeName","VNodeFn","Node","innerHTML","get","parseVData","context","nodes","k","BaseParser","vData","vNode","isDef","el","refName","formItemRefName","update","$handle","deleted","formValue","$de","clearTimeout","setTimeout","Render","fc","form","$form","cache","renderList","parser","clear","cacheStatus","refresh","parent","clearCache","vnode","use","parsers","orgChildren","beforeRender","vn","sortList","renderParser","filter","global","toData","compile","console","error","$props","indexOf","setTemplateProps","$off","$on","onInput","setGlobalConfig","renderTemplate","setCache","isNoVal","inputVData","renderChildren","defaultRender","container","getCache","custom","parserToData","_this3","getFormData","size","child","__fc__","_this4","removeField","Handle","fCreateApi","__init","drive","formRender","loadRule","initOrgChildren","fieldList","trueData","customData","_rule","createParser","parseRule","notField","setParser","defineProperties","__field__","bindParser","push","toValue","isChange","setFormData","toFormValue","h","root","toLocaleLowerCase","def","className","emitEvent","parseOn","parseEmit","event","eventName","line","fieldKey","replace","toLowerCase","substr","run","submitBtn","resetBtn","getGlobalApi","config","$watch","o","deep","immediate","addParserWitch","$refs","defaultValue","mountedParser","onReload","index","unWatch","delParser","splice","_this5","$nextTick","reload","_vue","window","BaseForm","mCol","pCol","globalConfig","getConfig","component","_id","margeGlobal","_options","sumbitBtn","show","document","querySelector","body","bindAttr","version","ui","$formCreate","$vm","$data","$mount","params","$parent","_opt","appendChild","$el","mount","remove","removeChild","makers","install","_installedFormCreate"],"mappings":";;;;;;s9CAEO,SAASA,EAAKC,EAAQC,EAAOC,GAChCC,EAAIC,IAAIJ,EAAQC,EAAOC,GAGpB,SAASG,EAAKL,EAAQC,GACzBE,EAAIG,OAAON,EAAQC,GAGhB,SAASM,EAAgBC,UACrBC,MAAMC,QAAQF,IAAaA,EAASG,OAAS,EAGxD,IAAaC,EAAYC,OAAOC,UAAUC,SAEnC,SAASC,EAAQC,UACbA,MAAAA,EAGJ,SAASF,EAASG,UACP,MAAPA,EACD,GACe,WAAfC,EAAOD,GACHE,KAAKC,UAAUH,EAAK,KAAM,GAC1BI,OAAOJ,GAGd,SAASK,EAAOC,EAAIC,OAClB,IAAIC,KAAOD,EACZ1B,EAAKyB,EAAIE,EAAKD,EAAMC,WAEjBF,EAYJ,SAASG,EAAOC,EAAKC,UACjBjB,EAAUkB,KAAKF,KAAS,WAAaC,EAAO,IAOhD,SAASE,EAAcH,UACnBD,EAAOC,EAAK,UAGhB,SAASI,EAAWJ,UAChBD,EAAOC,EAAK,YAGhB,SAASK,EAASL,UACdD,EAAOC,EAAK,UAGhB,SAASM,EAAON,UACZD,EAAOC,EAAK,WAqBhB,SAASO,EAAUP,SACA,WAAfT,EAAOS,IAA4B,OAARA,GAAiC,IAAjBA,EAAIQ,WAAmBL,EAAcH,GAGpF,SAASS,EAAWC,OAAQtC,yDAAS,GACpCuC,GAAQ,MACP,IAAIb,KAAO1B,KACRa,OAAOC,UAAU0B,eAAeV,KAAK9B,EAAQ0B,GAAM,KAC/Ce,EAAQzC,EAAO0B,OACda,EAAQ9B,MAAMC,QAAQ+B,KAAWV,EAAcU,GAAQ,KACpDC,OAAsBC,IAAhBL,EAAOZ,GACba,GACAA,GAAQ,EACRG,GAAO3C,EAAKuC,EAAQZ,EAAK,KAEzBgB,GAAO3C,EAAKuC,EAAQZ,EAAK,IAE7BW,EAAWC,EAAOZ,GAAMe,QAExB1C,EAAKuC,EAAQZ,EAAKe,UAIvBH,EAGX,IAAIM,EAAK,EAET,SAAgBC,YACHD,EAoDN,SAASE,EAAOC,SAEZ,sFAMeA,GAAK,IC7KxB,IAAMC,EAAiB,aAEf,SAASC,EAAYC,EAAYC,SACrC,CACHC,KAAMJ,EACNK,MAAO,CACHC,KAAM,CACFzB,KAAMpB,MACN8C,UAAU,EACVC,QAAS,iBACE,KAGfC,OAAQ,CACJ5B,KAAMhB,OACN2C,QAAS,iBACE,IAEXD,UAAU,GAEdrD,MAAOW,QAEX6C,KAAM,iBACK,CACHC,cAAUhB,EACViB,iBAAajB,EACbkB,gBAAYlB,EACZmB,QAAInB,EACJoB,QAAQ,EACRC,OAAQ,IAGhBb,WAAAA,EACAc,yBACWC,KAAKC,WAAWF,UAE3BG,QAAS,CACLC,sBAAahB,QACJtD,KAAKmE,KAAM,cAAe7B,EAAW6B,KAAKN,YAAaP,KAEhEiB,qBAAYjB,QACHtD,KAAKmE,KAAM,aAAc7B,EAAW6B,KAAKL,WAAYR,KAE9DkB,yBACSP,QAAU,IAGvBQ,MAAO,CACHf,OAAQ,WACRH,cAAKmB,QACIN,WAAWO,OAAOC,WAAWF,KAG1CG,8BAC2BV,KAAKW,SAASC,UAA9BxB,IAAAA,KAAMG,IAAAA,YACRU,WAAa,IAAIjB,EAAWI,EAAMG,QAClCU,WAAWS,aAAaV,OAEjCa,wBACSZ,WAAWY,eACXjB,GAAKI,KAAKC,WAAWa,WACrBC,MAAM,QAASf,KAAKJ,KAE7BoB,mBACuBhB,KAAKC,WAEbe,eACND,MAAM,QAASf,KAAKJ,KAG7BqB,8BACShB,WAAWO,OAAOC,WAAW,SAC7BR,WAAWO,OAAOU,QAAQC,sBCvDtBC,yCAGRC,+CAGHC,cAAWC,oEACTzE,EAAQwE,GAAmBtB,MAE3BzD,MAAMC,QAAQ8E,GACdA,EAAUE,QAAQ,SAACC,GACf5F,EAAK6F,EAAKC,MAAMC,MAAO/E,EAAS4E,IAAM,KAEnC5D,EAAcyD,GACrBzF,EAAKmE,KAAK2B,MAAO,QAAStE,EAAO2C,KAAK2B,MAAMC,MAAON,IAEnDzF,EAAKmE,KAAK2B,MAAMC,MAAO/E,EAASyE,QAAuB7C,IAAX8C,GAA8BA,GAGvEvB,yCAGA6B,UACH/E,EAAQ+E,GAAoB7B,MAChCnE,EAAKmE,KAAK2B,MAAO,aAAc3B,KAAK2B,MAAME,WAAWC,QFoCrC9F,EEpCoD6F,EFqCjEtF,MAAMC,QAAQR,GACfA,EACEc,EAAQd,GAAS,GAAK,CAACA,MEtCpBgE,MFmCR,IAAiBhE,6CE/BX2F,MA7CF,CACHC,MAAO,GACPG,MAAO,GACPC,MAAO,GACP7C,MAAO,GACP8C,SAAU,GACVC,GAAI,GACJC,SAAU,GACVN,WAAY,GACZO,YAAa,GACbC,UAAM5D,EACNjB,SAAKiB,EACL6D,SAAK7D,GAkCEuB,8CAIDR,EAAO7C,OAAO4F,KAAKvC,KAAK2B,OAAOa,OAAO,SAACC,EAASjF,OAC5CxB,EAAQ0G,EAAKf,MAAMnE,eACXiB,IAAVzC,EAA4ByG,EAC5BlG,MAAMC,QAAQR,KAAWA,EAAMS,OAAegG,EAC7C9F,OAAO4F,KAAKvG,GAAOS,QAExBgG,EAAQjF,GAAOxB,EACRyG,GAHgCA,GAIxC,gBACEpB,OACE7B,WChDR,SAASmD,EAAezD,UACpB,SAAC0D,EAAO7G,EAAOC,OAAOmD,yDAAQ,UAAO,IAAI0D,EAAQ3D,EAAM0D,EAAO7G,EAAOC,EAAOmD,IAGhF,SAAS2D,EAAmB5D,EAAMvB,OAAMoF,yDAAW,cAC/C,SAACH,EAAO7G,EAAOC,OAAOmD,yDAAQ,GAC3B6D,EAAQ,IAAIH,EAAQ3D,EAAM0D,EAAO7G,EAAOC,EAAOmD,UACjDrB,EAAWH,GAAOA,EAAKqF,GACtBA,EAAM7D,MAAM4D,EAAUpF,GACpBqF,GD2CC,CAAC,MAAO,MAAO,QAGvBxB,QAAQ,SAAAhE,GACZ4D,EAAMxE,UAAUY,GAAO,SAAUR,UAC7BnB,EAAKmE,KAAK2B,MAAOnE,EAAKR,GACfgD,QALC,CAAC,cAAe,WAAY,KAAM,WAAY,QAAS,QAAS,SASxEwB,QAAQ,SAAAhE,GACZ4D,EAAMxE,UAAUY,GAAO,SAAUyF,EAAKjG,UAC9BF,EAAQmG,GAAajD,MAErBnC,EAAcoF,GACdpH,EAAKmE,KAAK2B,MAAOnE,EAAKH,EAAO2C,KAAK2B,MAAMnE,GAAMyF,IAE9CpH,EAAKmE,KAAK2B,MAAMnE,GAAMX,EAASoG,GAAMjG,GAGlCgD,aC3DM6C,yBACLlF,EAAMiF,EAAO7G,EAAOC,SAAOmD,yDAAQ,oBAE3C9B,8BAAYsE,MA3BT,CACHuB,SAAU,GACVC,QAAS,GACTC,IAAK,GACL9G,SAAU,GACV+G,KAAM,GACNC,cAAU7E,EACV8E,gBAAY9E,IAqBZpB,EAAOqE,EAAKC,MAAO,CAAChE,KAAAA,EAAMiF,MAAAA,EAAO7G,MAAAA,EAAOC,MAAAA,IACpC6B,EAAcsB,IAAQuC,EAAKvC,MAAMA,iPALRiC,mCAQ5BzD,eACIwB,MAAM,OAAQxB,GACZqC,8CAIAA,KAAK2B,kDAIPO,yBACElC,cAIE,CAAC,aAAc,YAAa,cAAe,QAAS,OAAQ,SAEpEwB,QAAQ,SAAAgC,GACbX,EAAQjG,UAAU4G,GAAQ,SAAUxH,UAChCH,EAAKmE,KAAK2B,MAAO6B,EAAMxH,GAChBgE,QAIE,CAAC,OAETwB,QAAQ,SAAAgC,GACbX,EAAQjG,UAAU4G,GAAQ,SAAUC,UAChC5H,EAAKmE,KAAK2B,MAAO6B,EAAMnG,EAAO2C,KAAK2B,MAAM6B,GAAOC,IACzCzD,iBC9DS0D,QAChBV,EAAQ,GAGNW,EAAchB,EAAe,WAEnCtF,EAAO2F,EAAO,CACVY,gBAAOjG,EAAM5B,EAAO6G,OACZiB,EAAOF,EAAY,GAAI5H,UAC3B8H,EAAKlC,MAAMhE,KAAOA,EAClBkG,EAAKlC,MAAMiB,MAAQA,EACZiB,GAEXC,mBAAUR,EAAUS,EAAIhI,EAAO6G,OACvBiB,EAAOF,EAAY,GAAI5H,UAC3B8H,EAAKlC,MAAMhE,KAAO,WAClBkG,EAAKlC,MAAM2B,SAAWA,EACtBO,EAAKlC,MAAMiB,MAAQA,EACnBiB,EAAKlC,MAAMoC,GAAKA,EACTF,KAGfb,EAAMM,SAAWN,EAAMc,UACvBd,EAAMgB,MAAQA,EAEPhB,EAGX,SAASgB,EAAM5E,OAAM6E,6DACblG,EAASqB,KAAOA,EAAOlC,KAAK8G,MAAM5E,IAElCA,aAAgByD,EAAS,OAAOoB,EAAU7E,EAAOA,EAAK8E,aACtDrG,EAAcuB,GAAO,KACf4D,EAyBd,SAAqB5D,OACX4D,EAAQ,IAAIH,SAClBlG,OAAO4F,KAAKnD,GAAMoC,QAAQ,SAAAhE,GACtBwF,EAAMrB,MAAMnE,GAAO4B,EAAK5B,KAErBwF,EA9BWmB,CAAY/E,UACnB6E,EAAUjB,EAAQA,EAAMkB,UAC5B,GAAK3H,MAAMC,QAAQ4C,GACrB,KACKgF,EAAQhF,EAAKiF,IAAI,SAAAC,UAAKN,EAAMM,EAAGL,YACrCtH,OAAO4H,eAAeH,EAAO,OAAQ,CACjCpI,MAAOwI,EACPC,YAAY,EACZC,cAAc,IAGXN,EATsB,OAAOhF,EAa5C,SAASoF,EAAUzI,OACXO,EAAW,OACV,IAAIuC,KAAKmB,KAAM,KACVZ,EAAOY,KAAKnB,aAAcgE,EAAU7C,KAAKnB,GAAGO,KAAOY,KAAKnB,MAC1DO,EAAKrD,QAAUA,EAAO,OAAOiE,KAAKnB,GAClCxC,EAAgB+C,EAAK9C,YAAWA,EAAWA,EAASwF,OAAO1C,EAAK9C,cAEpEA,EAASG,OAAS,EAAG,OAAO+H,EAAU5G,KAAKtB,EAAUP,GDW5C,CAAC,WAAY,UAAW,WAAY,QAE5CyF,QAAQ,SAAAgC,GACbX,EAAQjG,UAAU4G,GAAQ,SAAUC,UAC3BlH,MAAMC,QAAQiH,KAAMA,EAAM,CAACA,IAChC5H,EAAKmE,KAAK2B,MAAO6B,EAAMxD,KAAK2B,MAAM6B,GAAM1B,OAAO2B,IACxCzD,YHxCU2E,EAAIC,EACrBC,EKrBaC,wBAELf,aACJA,GACA/D,KAAK+E,MAAMhB,2CAGbA,QACGA,GAAKA,OACLiB,GAAKjB,EAAGkB,4CAGZC,EAAU1F,EAAM2F,OAhBPL,EAiBNM,EAAOpF,KAAKgF,GAAGE,EA1B3B,SAAoB1F,UACZzB,EAASyB,GACTA,EAAO,CAACyC,SAAU,CAACoD,UAAW7F,IACzBA,GAAQ1B,EAAW0B,EAAK8F,OAC7B9F,EAAOA,EAAK8F,OAET9F,EAoB0B+F,CAAW/F,GAhBrC1B,EADOgH,EAiB8CK,GAhBjCL,IAAWA,GAAS,WAiB3CM,EAAKI,QAAUxF,KAAK+D,GAEbqB,gCAGAK,GACP9I,OAAO4F,KAAKkD,GAAOjE,QAAQ,SAACkE,GACxBZ,EAAMlI,UAAU8I,GAAK,SAAUlG,EAAM2F,UAC1BnF,KAAK6D,KAAK4B,EAAMC,GAAIlG,EAAM2F,eCjC5BQ,wBAELnF,EAAQpB,EAAMV,kBACjBU,KAAOA,OACPwG,MAAQ,IAAIxE,OACZyE,MAAQ,IAAIf,OACZpG,GAAKA,OACL4B,MAAQ,QACR3C,KAAOd,EAASuC,EAAKzB,WACrBmI,OAAQ,OACRC,QAAKtH,EAELW,EAAKrD,WAIDA,MAAQqD,EAAKrD,YAHbA,MAAQ,QAAU4C,SAClBmH,OAAQ,QAIZ5G,KAAOE,EAAKF,UAEZY,OAAS,MAAQpB,OACjBlB,IAAM,OAASkB,OACfsH,QAAU,KAAOhG,KAAKjE,MAAQiE,KAAKtB,QACnCuH,gBAAkB,KAAOjG,KAAKgG,aAE9BE,OAAO1F,QACPa,gDAGFb,QACE2F,QAAU3F,OACVU,QAAUV,EAAOU,aACjB6C,GAAKvD,EAAOuD,QACZZ,QAAU3C,EAAO2C,aACjB0C,MAAMd,MAAM/E,KAAK+D,SACjBqC,SAAU,sEAMPpK,UACDA,kCAGHqK,UACGA,WC5CTC,GP6BmB3B,EO7BJ,SAACA,UAAOA,KP6BAC,EO7BM,EP8B3BC,EAAU,KACP,sCAAanH,2BAAAA,kBACA,OAAZmH,GACA0B,aAAa1B,GACjBA,EAAU2B,WAAW,kBAAM7B,eAAMjH,IAAMkH,KOhC1B6B,wBACLjG,kBACH2F,QAAU3F,OACVkG,GAAKlG,EAAOkG,QACZ3C,GAAKvD,EAAOuD,QACZZ,QAAU3C,EAAO2C,aACjBwD,KAAOnG,EAAOoG,WACdf,MAAQ,IAAIf,EAAM9E,KAAK+D,SACvB6B,MAAQ,IAAIxE,OACZyF,MAAQ,QACRC,WAAa,gDAGXC,OAAQC,gEACVhH,KAAK6G,MAAME,EAAOrI,KACnBsB,KAAKiH,YAAYF,IACjB/G,KAAKmG,QAAQe,cACXC,EAASnH,KAAK6G,MAAME,EAAOrI,IAAIyI,YAChCN,MAAME,EAAOrI,IAAM,KACpByI,GAAUH,GACVhH,KAAKoH,WAAWD,EAAQH,iDAIvBH,MAAQ,oCAGRE,EAAQM,EAAOF,QACfN,MAAME,EAAOrI,IAAM,CACpB2I,MAAAA,EACAC,KAAK,EACLH,OAAAA,uCAIIJ,UACD/G,KAAK6G,MAAME,EAAOrI,OAAsC,IAA9BsB,KAAK6G,MAAME,EAAOrI,IAAI4I,KAAgBtH,KAAK6G,MAAME,EAAOrI,IAAIyI,yCAGxFJ,OACCF,EAAQ7G,KAAK6G,MAAME,EAAOrI,WAChCmI,EAAMS,KAAM,EACLT,EAAMQ,oDAIPE,EAAUvH,KAAKmG,QAAQoB,aACxBC,YAAc7K,OAAO4F,KAAKgF,GAAS/E,OAAO,SAACC,EAAS/D,OAC/CpC,EAAWiL,EAAQ7I,GAAIU,KAAK9C,gBAClCmG,EAAQ/D,GAAMrC,EAAgBC,KAAgBA,GAAY,GAEnDmG,GACR,gDAIEzC,KAAK+D,GAAGlE,aAGR8G,KAAKc,mBAEJC,EAAK1H,KAAKmG,QAAQwB,SAAStD,IAAI,SAAC3F,OAC9BqI,EAASrF,EAAKyE,QAAQoB,QAAQ7I,MACd,WAAhBqI,EAAOpJ,YACJ+D,EAAKkG,aAAab,KAC1Bc,OAAO,SAAC7K,eAAgByB,IAARzB,WAEZgD,KAAK2G,KAAK5G,OAAO2H,4CAGZX,GACP/G,KAAKmD,QAAQ2E,SAEd9H,KAAKmD,QAAQ2E,OAAO,WACfC,OAAOhB,EAAQ/G,KAAKmD,QAAQ2E,OAAO,MAExC9H,KAAKmD,QAAQ2E,OAAOf,EAAOpJ,YACtBoK,OAAOhB,EAAQ/G,KAAKmD,QAAQ2E,OAAOf,EAAOpJ,+CAIxCoJ,cACJrI,EAAiBqI,EAAjBrI,GAAIU,EAAa2H,EAAb3H,KAAM5B,EAAOuJ,EAAPvJ,YACGiB,IAAhBxC,EAAI+L,eACJC,QAAQC,MAAM,wBAA0BtJ,KACjC,GAGNoB,KAAK8G,WAAWpI,KACb5B,EAAQsC,EAAK2E,MAAK3E,EAAK2E,GAAK,IAAI9H,QAC/B6K,WAAWpI,GAAMzC,EAAI+L,QAAQ5I,EAAKkE,WA0HnD,SAA0ByD,OACf3H,EAAQ2H,EAAR3H,SACFA,EAAK2E,GAAGoE,OACT,WACE5F,EAAO5F,OAAO4F,KAAKnD,EAAK2E,GAAGoE,QACjC5F,EAAKf,QAAQ,SAAAhE,QACeiB,IAApBW,EAAKD,MAAM3B,KACX4B,EAAK2E,GAAGoE,OAAO3K,GAAO4B,EAAKD,MAAM3B,OAGV,IAA3B+E,EAAK6F,QAAQ,WACbhJ,EAAK2E,GAAGoE,OAAOnM,MAAQ+K,EAAO3H,KAAKpD,OAjInCqM,CAAiBtB,GAEjB3H,EAAK2E,GAAGuE,KAAK,SACblJ,EAAK2E,GAAGwE,IAAI,QAAS,SAACvM,GAClB0G,EAAK8F,QAAQzB,EAAQ/K,SAGnB0L,EAAK1H,KAAK8G,WAAWpI,GAAIqB,OAAOnC,KAAKwB,EAAK2E,gBAEhCtF,IAAZiJ,EAAGlI,OAAoBkI,EAAGlI,KAAO,IACrCkI,EAAGlK,IAAMA,EACFkK,uCAGEX,EAAQI,MACjBJ,EAAOnB,MAAMN,WACRmD,gBAAgB1B,IAEhB/G,KAAK6G,MAAME,EAAOrI,KAAuB,aAAhBqI,EAAOpJ,KAAqB,KACT+J,EAAxC/J,EAAcoJ,EAAdpJ,KAAMyB,EAAQ2H,EAAR3H,KAAgBuH,EAAO3G,KAAK2G,QAE1B,aAAThJ,GAAuByB,EAAKkE,aAC5BoE,EAAK1H,KAAK0I,eAAe3B,GAErBI,cACKwB,SAAS5B,EAAQW,EAAIP,GACnBO,OAER,GAAK1H,KAAKmG,QAAQyC,QAAQ7B,OAI7BW,EAAK1H,KAAK6F,MAAMhC,KAAKlG,EAAMqC,KAAK6I,WAAW9B,GAAS/G,KAAK8I,eAAe/B,IACpEI,cACKwB,SAAS5B,EAAQW,EAAIP,GACnBO,MAP2B,KAChCpL,EAAW0D,KAAK8I,eAAe/B,GACrCW,EAAKX,EAAOhH,OAASgH,EAAOhH,OAAOzD,GAAY0D,KAAK+I,cAAchC,EAAQzK,OAQxEuK,EAAQF,EAAKqC,UAAUtB,EAAIX,eAC5B4B,SAAS5B,EAAQF,EAAOM,GACtBN,SAGJ7G,KAAKiJ,SAASlC,kCAGlBA,EAAQvH,UACX7C,OAAO4F,KAAKwE,EAAOnB,MAAMjE,OAAOH,QAAQ,SAAChE,QACnBiB,IAAde,EAAKhC,IACLuJ,EAAOnB,MAAMpI,GAAKgC,EAAKhC,MAGxBuJ,EAAOnB,2CAGLmB,UACF/G,KAAK+H,OAAOhB,EAAQA,EAAO3H,yCAG3B2H,EAAQmC,cACRlD,EAAsBe,EAAtBf,QAASxI,EAAauJ,EAAbvJ,IAAK4B,EAAQ2H,EAAR3H,UAEhB+J,aAAapC,OAEdvH,EAAOuH,EAAOnB,MACbtD,IAAI0D,GAASxI,IAAI,UAAYA,UAE7B0L,GACD1J,EAAK0C,GAAG,QAAS,SAAClG,GACdoN,EAAKZ,QAAQzB,EAAQ/K,KACtBmD,MAAM,QAASa,KAAKmG,QAAQkD,YAAYtC,IAE3CjK,EAAQsC,EAAKD,MAAMmK,OACnB9J,EAAKL,MAAM,OAAQa,KAAKmG,QAAQhD,QAAQwD,KAAK2C,MAE1C9J,kCAGHuH,EAAQ/K,QACPmK,QAAQqC,QAAQzB,EAAQ/K,0CAGlB+K,cACJzK,EAAYyK,EAAO3H,KAAnB9C,SAAyBkL,EAAcxH,KAAKwH,YAAYT,EAAOrI,WAEjErC,EAAgBC,SAUhBkL,YAAYT,EAAOrI,IAAI8C,QAAQ,SAAA+H,IACC,IAA7BjN,EAAS8L,QAAQmB,KAAkBxL,EAASwL,IAAUA,EAAMC,QAC5DC,EAAKtD,QAAQuD,YAAYH,EAAMC,UAIhClN,EAAS+H,IAAI,SAAAkF,UACZxL,EAASwL,GAAeA,EAExBA,EAAMC,OACCC,EAAK7B,aAAa2B,EAAMC,OAAQzC,QAG3CT,EAAI,kBAAMmD,EAAKtD,QAAQ1F,mBAtBvB+G,EAAYhG,QAAQ,SAAA+H,IACXxL,EAASwL,IAAUA,EAAMC,QAC1BC,EAAKtD,QAAQuD,YAAYH,EAAMC,eAGlChC,YAAYT,EAAOrI,IAAM,GACvB,0CAqBDqI,EAAQzK,UACX0D,KAAK6F,MAAMkB,EAAOpJ,MAAQqC,KAAK6F,MAAMkB,EAAOpJ,MAAMqC,KAAK6I,WAAW9B,GAASzK,GAAY0D,KAAK6F,MAAMhC,KAAKkD,EAAOpJ,KAAMqC,KAAK6I,WAAW9B,GAASzK,gBChMvIqN,wBAELjD,iBACD3C,EAAsB2C,EAAtB3C,GAAIK,EAAkBsC,EAAlBtC,MAAOjB,EAAWuD,EAAXvD,aAEbY,GAAKA,OACL2C,GAAKA,OACLhI,GAAKC,SACLwE,QAAUA,OAEVD,SAAW,QACXzD,SAAW,QAEXmK,gBAAanL,OAEboL,OAAOzF,QACPwC,MAAQ,IAAIF,EAAGoD,MAAMC,WAAW/J,KAAMA,KAAKtB,SAC3CwC,QAAU,IAAIuF,EAAOzG,WAErBgK,SAAShK,KAAKoE,OAAO,QAErBlD,QAAQ+I,uBAERrD,MAAMvF,gDAGR+C,QACE8F,UAAY,QACZC,SAAW,QACX5C,QAAU,QACV6C,WAAa,QACbzC,SAAW,QACXvD,MAAQA,OACRhG,SAAa4B,KAAKoE,wCAGlBA,EAAOmF,cACZnF,EAAMC,IAAI,SAACgG,OACHd,IAASxL,EAASsM,QAEjBA,EAAM1M,KACP,OAAOsK,QAAQC,MAAM,mBAAqBtJ,SAE1CmI,KAEAsD,EAAMb,OAAQ,KACdzC,EAASsD,EAAMb,QAEJzF,KAAOrC,EAAKqC,KAAOgD,EAAOX,QACjC,OAAO6B,QAAQC,MAAM,UAAGmC,EAAM1M,kCAAkCiB,KACpEmI,EAAOb,OAAOxE,QAEdqF,EAASrF,EAAK4I,aAAa5I,EAAK6I,UAAUF,QAG1C/N,EAAWyK,EAAO3H,KAAK9C,SAAU8C,EAAO2H,EAAO3H,YAC9CsC,EAAK8I,SAASzD,EAAOhL,QAG1B2F,EAAK+I,UAAU1D,GAEVsD,EAAMb,QA8RvB,SAAoBpK,EAAM2H,GACtBpK,OAAO+N,iBAAiBtL,EAAM,CAC1BuL,UAAW,CACP3O,MAAO+K,EAAOhL,MACd0I,YAAY,EACZC,cAAc,GAElB8E,OAAQ,CACJxN,MAAO+K,EACPtC,YAAY,EACZC,cAAc,KAvSVkG,CAAWP,EAAOtD,GAElB1K,EAAgBC,IAChBoF,EAAKsI,SAAS1N,GAAU,GAGvBiN,GACD7H,EAAKiG,SAASkD,KAAK9D,EAAOrI,IAGzBgD,EAAKkH,QAAQ7B,IACdpK,OAAO4H,eAAewC,EAAO3H,KAAM,QAAS,CACxCkG,IAAK,kBACMyB,EAAO+D,QAAQpJ,EAAK2H,YAAYtC,KAE3C7K,IAAK,SAACF,GACE0F,EAAKqJ,SAAShE,EAAQ/K,KACtB0F,EAAKR,QAAQkG,WAAWL,GAAQ,GAChCrF,EAAKsJ,YAAYjE,EAAQA,EAAOkE,YAAYjP,QAKrD+K,GA5BIkB,QAAQC,MAAM,UAAG9I,EAAKrD,gBAAgB6C,QA6BlDiJ,OAAO,SAAAqD,UAAKA,IAAG1J,QAAQ,SAAA0J,GACtBA,EAAEC,KAAO/G,yCAIJhF,OACHV,EAAKsB,KAAKtB,GAAK,GAAKC,IAAY4I,EAAUvH,KAAK0G,GAAGa,QAAS5J,EAAOd,EAASuC,EAAKzB,MAAMyN,2BAIrF,IAFS7D,EAAQ5J,GAAS4J,EAAQ5J,GAAQgI,GAE/B3F,KAAMZ,EAAMV,qCAGxB2L,OACAgB,EAwOH,CACHnI,SAAU,GACVE,IAAK,GACLC,KAAM,GACNlE,MAAO,GACP+C,GAAI,GACJiB,QAAS,GACTP,MAAO,GACP5G,MAAO,GACPD,MAAO,GACPmD,KAAM,GACNoM,UAAW,IAnPYlM,EA3GxB,SAAiBA,UAChBtB,EAAWsB,EAAK8E,SACT9E,EAAK8E,UAEL9E,EAuGuB8E,CAAQmG,GACtC1N,OAAO4F,KAAK8I,GAAK7J,QAAQ,SAAAkE,GACjB5I,EAAQsC,EAAKsG,KAAK7J,EAAKuD,EAAMsG,EAAG2F,EAAI3F,UAgOhCxC,EA9NNqH,EAAY,CACdpH,SA6NQD,EA7NY9D,EAAK+D,QA8N1B5G,MAAMC,QAAQ0G,GAAYA,EAAW,YA3NxCqH,EAAUrI,GAqNlB,SAAiBA,EAAIqJ,GACb5O,OAAO4F,KAAKgJ,GAAW9O,OAAS,GAAGY,EAAO6E,EAAIqJ,UAC3CrJ,EAvNYsJ,CAAQpM,EAAK8C,GAAIlC,KAAKyL,UAAUrM,IAE/CzC,OAAO4F,KAAKgI,GAAW/I,QAAQ,SAAAkE,GAC3B7J,EAAKuD,EAAMsG,EAAG6E,EAAU7E,MAIrBtG,oCAGDA,cACFsM,EAAQ,GAAKrI,EAA2BjE,EAA3BiE,KAAME,EAAqBnE,EAArBmE,WAAYxH,EAASqD,EAATrD,aAE9BQ,MAAMC,QAAQ6G,IAEnBA,EAAK7B,QAAQ,SAAAmK,OR/EEzM,EACf0M,EQgFUC,GRjFK3M,YQgFKqE,GAA0BxH,cACJ4P,GRhF1CC,EAAO1M,EAAK4M,QAAQ,WAAY,OAAOC,cACjB,IAAtBH,EAAKxD,QAAQ,OACbwD,EAAOA,EAAKI,OAAO,IAChBJ,GQ6EoDE,QAAQ,IAAK,KAEhEJ,EAAMC,GAAa,wCAAIjO,2BAAAA,qBACnBgF,EAAKqB,IAAGhD,eAAM8K,UAAanO,OAI5BgO,GAX0BA,uCAe7B1L,KAAK+D,GAAGjE,OAAS,EACVE,KAAKkB,QAAQ+K,YAEflI,GAAGjE,OAAS,EACV,sCAILiH,OACDrI,EAAyBqI,EAAzBrI,GAAI3C,EAAqBgL,EAArBhL,MAAOmD,EAAc6H,EAAd7H,KAAME,EAAQ2H,EAAR3H,KAClBY,KAAKuH,QAAQ7I,UAEZ6I,QAAQ7I,GAAMqI,EAEf/G,KAAK4I,QAAQ7B,GACT7H,GACArD,EAAKmE,KAAKoK,WAAYlL,EAAM6H,SAG/BmD,UAAUnO,GAASgL,EACxBlL,EAAKmE,KAAKP,SAAU1D,EAAOgL,EAAOkE,YAAY7L,EAAKpD,QACnDH,EAAKmE,KAAKkD,SAAUnH,EAAOqD,EAAK8D,UAAY,IAC5CrH,EAAKmE,KAAKmK,SAAUpO,EAAOgL,sCAGtBrI,eACuBD,IAArBuB,KAAKuH,QAAQ7I,oCAGfqI,EAAQ/K,UACNkB,KAAKC,UAAU4J,EAAO3H,KAAKpD,SAAWkB,KAAKC,UAAUnB,mCAGxD+K,EAAQ/K,IACPgE,KAAK4I,QAAQ7B,IAAW/G,KAAK+K,SAAShE,EAAQA,EAAO+D,QAAQ9O,WACzDkF,QAAQkG,WAAWL,QACnBiE,YAAYjE,EAAQ/K,sCAIvB0C,UACFsB,KAAKkK,UAAUxL,GACRsB,KAAKkK,UAAUxL,GACjBsB,KAAKoK,WAAW1L,GACdsB,KAAKoK,WAAW1L,GAClBsB,KAAKuH,QAAQ7I,GACXsB,KAAKuH,QAAQ7I,QADnB,wCAKCqF,EAAK/D,KAAK+D,GAEhBA,EAAGlI,KAAKkI,EAAI,cAAe/D,KAAKmD,QAAQ+I,WACxCnI,EAAGlI,KAAKkI,EAAI,aAAc/D,KAAKmD,QAAQgJ,UACvCpI,EAAGlI,KAAKkI,EAAI,WAAY/D,KAAKP,eAGLhB,IAApBuB,KAAK4J,aACL5J,KAAK4J,WAAa5J,KAAK0G,GAAGoD,MAAMsC,aAAapM,YAC5C4J,WAAWxK,KAAOY,KAAKoE,WACvBwF,WAAWyC,OAASrM,KAAKmD,+CAInB4D,cACLhD,EAAK/D,KAAK+D,GAEhBpH,OAAO4F,KAAKwE,EAAO3H,MAAMoC,QAAQ,SAAChE,IACmE,IAA7F,CAAC,QAAS,OAAQ,QAAS,KAAM,WAAY,OAAQ,SAAU,YAAY4K,QAAQ5K,SAAoCiB,IAArBsI,EAAO3H,KAAK5B,IAClHuJ,EAAOzG,MAAMuK,KAAK9G,EAAGuI,OAAO,kBAAMvF,EAAO3H,KAAK5B,IAAM,SAAC+C,EAAGgM,QAC1C9N,IAAN8N,GACJnD,EAAKlI,QAAQkG,WAAWL,IACzB,CAACyF,MAAM,EAAMC,WAAW,OAI/B1F,EAAOzG,MAAMuK,KAAK9G,EAAGuI,OAAO,kBAAMvF,EAAO3H,KAAK9C,UAAU,SAACiE,EAAGgM,QAC9C9N,IAAN8N,GACJnD,EAAKlI,QAAQkG,WAAWL,GAAQ,yDAK9BhD,EAAK/D,KAAK+D,GAChBpH,OAAO4F,KAAKvC,KAAKuH,SAAS/F,QAAQ,SAAC9C,OAC3BqI,EAAS0C,EAAKlC,QAAQ7I,GACE,IAAxBqI,EAAOzG,MAAM7D,QAAcgN,EAAKiD,eAAe3F,GAEnDA,EAAOhB,GAAKhC,EAAG4I,MAAM5F,EAAOf,UAAY,QAEZvH,IAAxBsI,EAAO6F,eACP7F,EAAO6F,aAAezO,EAAW,GAAI,CAACnC,MAAO+K,EAAO3H,KAAKpD,QAAQA,OAErE+K,EAAO/F,SAAW+F,EAAO/F,kDAKvBA,EAAUhB,KAAKmD,QAAQnC,aAExB6L,gBAEL7L,GAAWA,EAAQhB,KAAK4J,iBACnBlD,GAAG3F,MAAM,UAAWf,KAAK4J,iDAIxBkD,EAAW9M,KAAKmD,QAAQ2J,cAEzBD,gBAELC,GAAYA,EAAS9M,KAAK4J,iBACrBlD,GAAG3F,MAAM,SAAUf,KAAK4J,gDAGrB7C,OACDrI,EAAaqI,EAAbrI,GAAI3C,EAASgL,EAAThL,MAAiBgR,EAAQ/M,KAAK2H,SAASS,QAAQ1J,IA4D3D,SAAmBqI,GACtBA,EAAOzG,MAAMkB,QAAQ,SAACwL,UAAYA,MAClCjG,EAAOzG,MAAQ,GACfyG,EAAOX,SAAU,EACjBzJ,OAAO4H,eAAewC,EAAO3H,KAAM,QAAS,CACxCpD,MAAOqB,EAAO,GAAI,CAACrB,MAAO+K,EAAO3H,KAAKpD,QAAQA,QA/D9CiR,CAAUlG,GACV5K,EAAK6D,KAAKuH,QAAS7I,GACnBvC,EAAK6D,KAAKkD,SAAUnH,IAEL,IAAXgR,QACKpF,SAASuF,OAAOH,EAAO,GAEhC5Q,EAAK6D,KAAKP,SAAU1D,GACpBI,EAAK6D,KAAKoK,WAAYrO,GACtBI,EAAK6D,KAAKkK,UAAWnO,GACrBI,EAAK6D,KAAKmK,SAAUpO,0CAIfgI,GAAG1D,8CAGD+D,cACDL,EAAK/D,KAAK+D,OACXK,EAAO,OAAOpE,KAAKS,WAAWT,KAAKoE,OACnCpE,KAAK5B,OAAO3B,QAAQuD,KAAK4J,WAAW1C,eACpC9I,SAAagG,OAEZmD,wUAAcvH,KAAKuH,cACpBsC,OAAOzF,QACP4F,SAAS5F,GAAO,GACrBzH,OAAO4F,KAAKgF,GAASM,OAAO,SAAAnJ,eAA2BD,IAArB0O,EAAK5F,QAAQ7I,KAC1C8C,QAAQ,SAAA9C,UAAMyO,EAAKzD,YAAYnC,EAAQ7I,WACvCwC,QAAQ+I,uBACRpJ,UAELkD,EAAGqJ,UAAU,WACTD,EAAKE,WAGTtJ,EAAGnE,GAAKI,KAAK4J,gBACR1I,QAAQC,qBACR+F,8CAGGH,EAAQ/K,QACXyD,SAASsH,EAAOhL,OAASC,sCAGtB+K,UACD/G,KAAKP,SAASsH,EAAOhL,+CAIrBY,OAAO4F,KAAKvC,KAAKP,0CAGpBsH,UACIA,EAAOjB,mBC3TZwH,EAAyB,oBAAXC,QAA0BA,OAAOtR,IAAMsR,OAAOtR,IAAMA,MCXxDuR,wBAELhN,kBACH2F,QAAU3F,OACVuD,GAAKvD,EAAOuD,QACZ+F,MAAQ9J,KAAKmG,QAAQO,GAAGoD,WACxB3G,QAAU3C,EAAO2C,aACjB0C,MAAQ,IAAIf,EAAM9E,KAAK+D,SACvB6B,MAAQ,IAAIxE,OACZtB,OAASU,EAAO9B,iDAIhBwC,QAAUlB,KAAKmG,QAAQjF,0CAGtB6F,OACF3D,EAAM2D,EAAO3H,KAAKgE,KAAO,GAAIqK,EAAO,GAAIC,EAAO,UAE9C1N,KAAKmD,QAAQ2E,QAGd9H,KAAKmD,QAAQ2E,OAAO,OACpB2F,EAAOzN,KAAKmD,QAAQ2E,OAAO,KAAK1E,KAAO,IAGvCpD,KAAKmD,QAAQ2E,OAAOf,EAAOpJ,QAC3B+P,EAAO1N,KAAKmD,QAAQ2E,OAAOf,EAAOpJ,MAAMyF,KAAO,IAEnDA,EAAMjF,EAAWA,EAAWA,EAAW,GAAIsP,GAAOC,GAAOtK,IAT9CA,oGDPJ,SAA0B0G,OAE/B7K,EAAa,GAAIsI,EAAU,GAAIvE,EAAQU,IAAgBiK,EAAe7D,EAAM8D,qBAEzEnD,EAAU/L,EAAIqI,GACnBrI,EAAK7B,EAAS6B,GACd6I,EAAQ7I,EAAG0M,qBAAuBrE,EAClC/H,EAAWgE,MAAMtE,GAAMiE,EAAejE,YAGjCmP,EAAUnP,EAAImP,OAEbC,GADNpP,EAAK7B,EAAS6B,IACC0M,0BACH,gBAAR0C,GAAiC,eAARA,EAClBR,EAAKjQ,OAAO0B,EAAYC,EAAYC,SAC7BR,IAAdoP,EACO5O,EAAWpC,EAAS6B,SAE3BO,EAAWpC,EAAS6B,IAAOmP,YAG1BE,EAAY1B,EAAQ2B,GACrBhQ,EAAOgQ,EAASC,aAChBD,EAASC,UAAY,CAACC,KAAMF,EAASC,YAErCjQ,EAAOgQ,EAAS7B,YAChB6B,EAAS7B,SAAW,CAAC+B,KAAMF,EAAS7B,eAEpChJ,EAAUhF,EAAWkO,EAAQ2B,UAEjCnS,EAAKsH,EAAS,KAAOA,EAAQ4C,GAEtB9H,EAAUkF,EAAQ4C,IACf5C,EAAQ4C,GACRoI,SAASC,cAAcjL,EAAQ4C,IAHnCwH,OAAOY,SAASE,MAMflL,WAGFmL,EAAStP,GACd3B,EAAO2B,EAAY,CACfuP,QAASzE,EAAMyE,QACfC,GAAI1E,EAAM0E,GACVxL,MAAAA,EACA6K,UAAAA,EACApD,UAAAA,EACAgE,8BACW1P,EAAYC,EAAYC,eAelC2E,EAAOQ,EAAO7E,OACbmP,EAAM,IAAIpB,EAAK,CACjB9N,sBACW,CAACJ,KAAMgF,EAAO7E,OAAQtB,EAAUsB,GAAU,CAACwG,GAAIxG,GAAUA,IAEpEQ,+DAC4B,aAAYC,KAAK2O,oBAGjDD,EAAIE,SACGF,MAGL1P,wBACUoF,OAAOjB,yDAAU,kBACpByG,gBAAanL,OACbqL,MAAQA,OACRvC,QAAUA,OACVxD,QAAKtF,OACL2F,MAAQ7H,MAAMC,QAAQ4H,GAASA,EAAQ,QACvCjB,QAAU4K,EAAY5P,EAAW,GAAIwP,GAAexK,kDAGhDY,QACJA,GAAKA,OACLvD,OAAS,IAAImJ,EAAO3J,6CAIpBQ,OAAOK,+CAILb,KAAKQ,OAAOoJ,mDAIZ5J,KAAKQ,OAAOyL,6CAIdzL,OAAOQ,wCAGV2K,kCAAckD,mCAAAA,oBACZ7O,KAAK8O,iBACAA,SAAQ/N,4BAAY4K,WAAgBkD,YAExC9K,IAAGhD,eAAM4K,UAAckD,qCAGlBzK,OAAO2K,yDAAO,GAAI5H,yCAExBuH,EAAM9K,EAAOQ,EAAO2K,GAElBrN,EAAQgN,EAAI/B,MAAMjG,GAAGzG,kBAC3ByB,EAAMyF,OAASA,EACfzF,EAAMyB,QAAQ4C,GAAGiJ,YAAYN,EAAIO,KAE1BvN,EAAMlB,OAAOoJ,2CAGT3N,OACLwS,EAAc,SAAUrK,OAAOX,yDAAM,UAChCzE,EAAW4E,OAAOQ,EAAOX,EAAKzD,OAGzCsO,EAASG,GAETxS,EAAIW,UAAU6R,YAAcA,EAE5BxS,EAAI4R,UAAU/O,EAAgB7C,EAAIoB,OAAO0B,EAAYC,EAAYC,KACjEqO,EAAOrR,+BAGCmI,OACJsK,EAAM9K,EAAOQ,yDADK,IACSnE,EAAayO,EAAI/B,MAAMjG,GAAGzG,iBAElD,CACHiP,eAAMD,UACEA,GAAOhR,EAAUgR,KACjBhP,EAAWkD,QAAQ4C,GAAKkJ,GAC5BhP,EAAWkD,QAAQ4C,GAAGiJ,YAAYN,EAAIO,KAC/BhP,EAAWO,OAAOoJ,YAE7BuF,kBACIlP,EAAWkD,QAAQ4C,GAAGqJ,YAAYV,EAAIO,MAE1CrP,GAAIK,EAAWO,OAAOoJ,4BAKlC0E,EAAStP,GAGT8K,EAAM7K,WAAWuC,QAAQ,SAAAqM,GACrB7O,EAAW6O,UAAUA,EAAU3O,KAAM2O,KAGzC/D,EAAMvC,QAAQ/F,QAAQ,gBAAEtC,IAAAA,KAAM6H,IAAAA,OAC1B/H,EAAWyL,UAAUvL,EAAM6H,KAG/BpK,OAAO4F,KAAKuH,EAAMuF,QAAQ7N,QAAQ,SAAAtC,GAC9BF,EAAWgE,MAAM9D,GAAQ4K,EAAMuF,OAAOnQ,KAGnC,CACHF,WAAAA,EACAsQ,iBAxHarT,EAAKkH,IACe,IAA7BlH,EAAIsT,uBACRtT,EAAIsT,sBAAuB,EAEvBpM,GAAWtF,EAAcsF,IACzB4K,EAAYJ,EAAcxK,GAE9BlH,EAAIqL,IAAItI"}