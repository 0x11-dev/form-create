{"version":3,"file":"form-create.core.min.js","sources":["../../utils/src/index.js","../src/components/formCreate.js","../src/factory/vData.js","../src/factory/creator.js","../src/factory/maker.js","../src/factory/vNode.js","../src/factory/parser.js","../src/core/render.js","../src/core/handle.js","../src/core/index.js","../src/factory/form.js"],"sourcesContent":["import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n\nexport function isValidChildren(children) {\n    return Array.isArray(children) && children.length > 0;\n}\n\nexport const _toString = Object.prototype.toString;\n\nexport function isUndef(v) {\n    return v === undefined || v === null\n}\n\nexport function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n\nexport function extend(to, _from) {\n    for (var key in _from) {\n        $set(to, key, _from[key]);\n    }\n    return to\n}\n\nexport function debounce(fn, wait) {\n    var timeout = null;\n    return function (...arg) {\n        if (timeout !== null)\n            clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...arg), wait);\n    }\n}\n\nexport function isType(arg, type) {\n    return _toString.call(arg) === '[object ' + type + ']'\n}\n\nexport function isDate(arg) {\n    return isType(arg, 'Date');\n}\n\nexport function isPlainObject(arg) {\n    return isType(arg, 'Object');\n}\n\nexport function isFunction(arg) {\n    return isType(arg, 'Function');\n}\n\nexport function isString(arg) {\n    return isType(arg, 'String');\n}\n\nexport function isBool(arg) {\n    return isType(arg, 'Boolean');\n}\n\nexport function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n\nexport function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n)\n}\n\nexport function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ((isUndef(value) || value === '' ? [] : [value])\n        );\n}\n\nexport function isElement(arg) {\n    return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !isPlainObject(arg)\n}\n\nexport function deepExtend(origin, target = {}) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || isPlainObject(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                deepExtend(origin[key], clone);\n            } else {\n                $set(origin, key, clone);\n            }\n        }\n    }\n    return origin\n}\n\nlet id = 0;\n\nexport function uniqueId() {\n    return ++id\n}\n\nexport function toDefSlot(slot, $h) {\n    return [slot && isFunction(slot) ? slot($h) : slot]\n}\n\n\nexport function timeStampToDate(timeStamp) {\n    if (isDate(timeStamp))\n        return timeStamp;\n    else {\n        let date = new Date(timeStamp);\n        return date.toString() === 'Invalid Date' ? timeStamp : date;\n    }\n}\n\nexport function preventDefault(e) {\n    e.preventDefault();\n}\n\nexport function dateFormat(fmt, date = new Date) {\n    let o = {\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n    for (let k in o)\n        if (new RegExp('(' + k + ')').test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1)\n                ? (o[k])\n                : (('00' + o[k]).substr(('' + o[k]).length)));\n    return fmt\n}\n\nexport function hasSlot(children, slotName) {\n    return children.length !== 0 && children.some(child => {\n        if (child.data) {\n            if ((!child.data.slot && slotName === 'default') || (child.data.slot === slotName))\n                return true;\n        } else if (slotName === 'default')\n            return true;\n        return false;\n    })\n}\n\nexport function toJson(obj) {\n    return JSON.stringify(obj, function (key, val) {\n        if (typeof val === 'function') {\n            return val + '';\n        }\n        return val;\n    });\n}\n\nexport function parseJson(json) {\n    return JSON.parse(json, function (k, v) {\n        if (v.indexOf && v.indexOf('function') > -1) {\n            return eval('(function(){return ' + v + ' })()')\n        }\n        return v;\n    });\n}\n\nexport function errMsg(i) {\n\n    return '\\n\\x67\\x69\\x74\\x68\\x75\\x62\\x3a\\x68\\x74\\x74\\x70' +\n        '\\x73\\x3a\\x2f\\x2f\\x67\\x69\\x74\\x68\\x75\\x62\\x2e\\x63\\x6f' +\n        '\\x6d\\x2f\\x78\\x61\\x62\\x6f\\x79\\x2f\\x66\\x6f\\x72\\x6d\\x2d' +\n        '\\x63\\x72\\x65\\x61\\x74\\x65\\n\\x64\\x6f\\x63\\x75\\x6d\\x65' +\n        '\\x6e\\x74\\x3a\\x68\\x74\\x74\\x70\\x3a\\x2f\\x2f\\x77\\x77\\x77' +\n        '\\x2e\\x66\\x6f\\x72\\x6d\\x2d\\x63\\x72\\x65\\x61\\x74\\x65\\x2e' +\n        '\\x63\\x6f\\x6d' + (i || '');\n}","import {deepExtend} from '@form-create/utils';\n\nexport const formCreateName = 'FormCreate';\n\nexport default function $FormCreate(FormCreate, components) {\n    return {\n        name: formCreateName,\n        props: {\n            rule: {\n                type: Array,\n                required: true,\n                default: () => {\n                    return {};\n                }\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                },\n                required: false\n            },\n            value: Object\n        },\n        data: () => {\n            return {\n                formData: undefined,\n                buttonProps: undefined,\n                resetProps: undefined,\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n            };\n        },\n        components,\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _buttonProps(props) {\n                this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n            },\n            _resetProps(props) {\n                this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n            },\n            _refresh() {\n                this.unique += 1;\n            }\n        },\n        watch: {\n            option: '_refresh',\n            rule(n) {\n                this.formCreate.handle.reloadRule(n);\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(rule, option);\n            this.formCreate.beforeCreate(this);\n        },\n        created() {\n            this.formCreate.created();\n            this.$f = this.formCreate.api();\n            this.$emit('input', this.$f);\n        },\n        mounted() {\n            const formCreate = this.formCreate;\n\n            formCreate.mounted();\n            this.$emit('input', this.$f);\n\n        },\n        beforeDestroy() {\n            this.formCreate.handle.reloadRule([]);\n            this.formCreate.handle.$render.clearCacheAll();\n        },\n    }\n}","import {$set, extend, isPlainObject, isUndef, toArray, toString} from '@form-create/utils';\n\nfunction defVData() {\n    return {\n        class: {},\n        style: {},\n        attrs: {},\n        props: {},\n        domProps: {},\n        on: {},\n        nativeOn: {},\n        directives: [],\n        scopedSlots: {},\n        slot: undefined,\n        key: undefined,\n        ref: undefined\n    };\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            classList.forEach((cls) => {\n                $set(this._data.class, toString(cls), true);\n            });\n        } else if (isPlainObject(classList)) {\n            $set(this._data, 'class', extend(this._data.class, classList));\n        } else {\n            $set(this._data.class, toString(classList), status === undefined ? true : status);\n        }\n\n        return this;\n    }\n\n    directives(directives) {\n        if (isUndef(directives)) return this;\n        $set(this._data, 'directives', this._data.directives.concat(toArray(directives)));\n        return this;\n    }\n\n    init() {\n        this._data = defVData();\n        return this;\n    }\n\n    get() {\n        const data = Object.keys(this._data).reduce((initial, key) => {\n            const value = this._data[key];\n            if (value === undefined) return initial;\n            if (Array.isArray(value) && !value.length) return initial;\n            if (!Object.keys(value).length && key !== 'props') return initial;\n\n            initial[key] = value;\n            return initial;\n        }, {});\n        this.init();\n        return data;\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        $set(this._data, key, val);\n        return this;\n    };\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n\n        if (isPlainObject(obj)) {\n            $set(this._data, key, extend(this._data[key], obj));\n        } else {\n            $set(this._data[key], toString(obj), val);\n        }\n\n        return this;\n    };\n});\n\n","import {$set, extend, isFunction, isPlainObject} from '@form-create/utils';\nimport VData from './vData';\n\nfunction baseRule() {\n    return {\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        emit: [],\n        template: undefined,\n        emitPrefix: undefined,\n        native: false,\n        info: '',\n    };\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props);\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type)) type(maker);\n        else maker.props(typeName, type);\n        return maker;\n    };\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n        extend(this._data, baseRule());\n        extend(this._data, {type, title, field, value});\n        if (isPlainObject(props)) this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this;\n    }\n\n    getRule() {\n        return this._data;\n    }\n\n    event(...args) {\n        this.on(...args);\n        return this;\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'value', 'name', 'title', 'native', 'info'];\n\nkeyAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (value) {\n        $set(this._data, attr, value);\n        return this;\n    };\n});\n\nconst objAttrs = ['col'];\n\nobjAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this._data, attr, extend(this._data[attr], opt));\n        return this;\n    };\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit'];\n\narrAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this._data, attr, this._data[attr].concat(opt));\n        return this;\n    };\n});\n","import Creator, {creatorFactory} from './creator';\nimport {extend, isPlainObject, isString, isValidChildren, parseJson} from '@form-create/utils';\n\nexport default function makerFactory() {\n    let maker = {};\n\n\n    const commonMaker = creatorFactory('');\n\n    extend(maker, {\n        create(type, field, title) {\n            let make = commonMaker('', field);\n            make._data.type = type;\n            make._data.title = title;\n            return make;\n        },\n        createTmp(template, vm, field, title) {\n            let make = commonMaker('', field);\n            make._data.type = 'template';\n            make._data.template = template;\n            make._data.title = title;\n            make._data.vm = vm;\n            return make;\n        }\n    });\n    maker.template = maker.createTmp;\n    maker.parse = parse;\n\n    return maker;\n}\n\nfunction parse(rule, toMaker = false) {\n    if (isString(rule)) rule = parseJson(rule);\n\n    if (rule instanceof Creator) return toMaker ? rule : rule.getRule();\n    if (isPlainObject(rule)) {\n        const maker = ruleToMaker(rule);\n        return toMaker ? maker : maker.getRule();\n    } else if (!Array.isArray(rule)) return rule;\n    else {\n        const rules = rule.map(r => parse(r, toMaker));\n        Object.defineProperty(rules, 'find', {\n            value: findField,\n            enumerable: false,\n            configurable: false\n        });\n\n        return rules;\n    }\n}\n\nfunction findField(field) {\n    let children = [];\n    for (let i in this) {\n        const rule = this[i] instanceof Creator ? this[i].rule : this[i];\n        if (rule.field === field) return this[i];\n        if (isValidChildren(rule.children)) children = children.concat(rule.children);\n    }\n    if (children.length > 0) return findField.call(children, field);\n}\n\nfunction ruleToMaker(rule) {\n    const maker = new Creator();\n    Object.keys(rule).forEach(key => {\n        maker._data[key] = rule[key];\n    });\n    return maker;\n}\n","import {isFunction, isString, toString} from '@form-create/utils';\n\nfunction parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data;\n}\n\nfunction getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || []);\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        if (vm)\n            this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node;\n    }\n\n    static use(nodes) {\n        Object.keys(nodes).forEach((k) => {\n            VNode.prototype[toString(k).toLocaleLowerCase()] = VNode.prototype[k] = function (data, VNodeFn) {\n                return this.make(nodes[k], data, VNodeFn);\n            };\n        });\n    }\n}\n","import VData from './vData';\nimport {toString, uniqueId} from '@form-create/utils';\nimport VNode from './vNode';\n\nexport default class BaseParser {\n\n    constructor(handle, rule, id) {\n        this.rule = rule;\n        this.vData = new VData;\n        this.vNode = new VNode();\n        this.id = id;\n        this.watch = [];\n        this.type = toString(rule.type).toLocaleLowerCase();\n        this.isDef = true;\n        this.el = undefined;\n\n        if (!rule.field) {\n            this.field = '_def_' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n        this.name = rule.name;\n\n        this.unique = 'fc_' + id;\n        this.key = 'key_' + id;\n        this.refName = '__' + this.field + this.id;\n        this.formItemRefName = 'fi' + this.refName;\n\n        this.update(handle);\n        this.init();\n    }\n\n    update(handle) {\n        this.$handle = handle;\n        this.$render = handle.$render;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.vNode.setVm(this.vm);\n        this.deleted = false;\n    }\n\n    init() {\n    }\n\n    toFormValue(value) {\n        return value\n    }\n\n    toValue(formValue) {\n        return formValue;\n    }\n}","import {_vue as Vue} from './index';\nimport {debounce, errMsg, isString, isUndef, isValidChildren} from '@form-create/utils';\nimport VNode from '../factory/vNode';\nimport VData from '../factory/vData';\n\n\nconst $de = debounce((fn) => fn(), 1);\n\nexport default class Render {\n    constructor(handle) {\n        this.$handle = handle;\n        this.fc = handle.fc;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.$form = handle.$form;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.cache = {};\n        this.renderList = {};\n    }\n\n    clearCache(parser, clear = true) {\n        if (!this.cache[parser.id]) return;\n        if (this.cacheStatus(parser))\n            this.$handle.refresh();\n        const parent = this.cache[parser.id].parent;\n        this.cache[parser.id] = null;\n        if (parent && clear)\n            this.clearCache(parent, clear);\n    }\n\n    clearCacheAll() {\n        this.cache = {};\n    }\n\n    setCache(parser, vnode, parent) {\n        this.cache[parser.id] = {\n            vnode,\n            use: false,\n            parent\n        };\n    }\n\n    cacheStatus(parser) {\n        return this.cache[parser.id] && (this.cache[parser.id].use === true || this.cache[parser.id].parent);\n    }\n\n    getCache(parser) {\n        const cache = this.cache[parser.id];\n        cache.use = true;\n        return cache.vnode;\n    }\n\n    initOrgChildren() {\n        const parsers = this.$handle.parsers;\n        this.orgChildren = Object.keys(parsers).reduce((initial, id) => {\n            const children = parsers[id].rule.children;\n            initial[id] = isValidChildren(children) ? [...children] : [];\n\n            return initial;\n        }, {});\n    }\n\n    run() {\n        if (!this.vm.isShow)\n            return;\n\n        this.$form.beforeRender();\n\n        const vn = this.$handle.sortList.map((id) => {\n            let parser = this.$handle.parsers[id];\n            if (parser.type === 'hidden') return;\n            return this.renderParser(parser);\n        }).filter((val) => val !== undefined);\n\n        return this.$form.render(vn);\n    }\n\n    setGlobalConfig(parser) {\n        if (!this.options.global) return;\n\n        if (this.options.global['*']) {\n            this.toData(parser, this.options.global['*']);\n        }\n        if (this.options.global[parser.type]) {\n            this.toData(parser, this.options.global[parser.type]);\n        }\n    }\n\n    renderTemplate(parser) {\n        const {id, rule, key} = parser;\n        if (Vue.compile === undefined) {\n            console.error('使用的 Vue 版本不支持 compile' + errMsg());\n            return [];\n        }\n\n        if (!this.renderList[id]) {\n            if (isUndef(rule.vm)) rule.vm = new Vue;\n            this.renderList[id] = Vue.compile(rule.template);\n\n        }\n\n        setTemplateProps(parser);\n\n        rule.vm.$off('input');\n        rule.vm.$on('input', (value) => {\n            this.onInput(parser, value);\n        });\n\n        const vn = this.renderList[id].render.call(rule.vm);\n\n        if (vn.data === undefined) vn.data = {};\n        vn.key = key;\n        return vn;\n    }\n\n    renderParser(parser, parent) {\n        parser.vData.get();\n        this.setGlobalConfig(parser);\n\n        if (!this.cache[parser.id] || parser.type === 'template') {\n            let {type, rule} = parser, form = this.$form, vn;\n\n            if (type === 'template' && rule.template) {\n                vn = this.renderTemplate(parser);\n\n                if (parent) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            } else if (!this.$handle.isNoVal(parser)) {\n                const children = this.renderChildren(parser);\n                vn = parser.render ? parser.render(children) : this.defaultRender(parser, children);\n            } else {\n                vn = this.vNode.make(type, this.inputVData(parser), this.renderChildren(parser));\n                if (parent) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            }\n            if (rule.native !== true)\n                vn = form.container(vn, parser);\n            this.setCache(parser, vn, parent);\n            return vn;\n        }\n\n        return this.getCache(parser);\n    }\n\n    toData(parser, data) {\n        Object.keys(parser.vData._data).forEach((key) => {\n            if (data[key] !== undefined)\n                parser.vData[key](data[key]);\n        });\n\n        return parser.vData;\n    }\n\n    parserToData(parser) {\n        return this.toData(parser, parser.rule);\n    }\n\n    inputVData(parser, custom) {\n        const {refName, key} = parser;\n\n        this.parserToData(parser);\n\n        let data = parser.vData\n            .ref(refName).key('fc_item' + key);\n\n        if (!custom)\n            data.on('input', (value) => {\n                this.onInput(parser, value);\n            }).props('value', this.$handle.getFormData(parser));\n\n        this.$form.inputVData && this.$form.inputVData(parser, custom);\n\n        return data;\n    }\n\n    onInput(parser, value) {\n        this.$handle.onInput(parser, value);\n    }\n\n    renderChildren(parser) {\n        const {children} = parser.rule, orgChildren = this.orgChildren[parser.id];\n\n        if (!isValidChildren(children)) {\n            orgChildren.forEach(child => {\n                if (!isString(child) && child.__fc__) {\n                    this.$handle.removeField(child.__fc__);\n                }\n            });\n            this.orgChildren[parser.id] = [];\n            return [];\n        }\n\n        this.orgChildren[parser.id].forEach(child => {\n            if (children.indexOf(child) === -1 && !isString(child) && child.__fc__) {\n                this.$handle.removeField(child.__fc__);\n            }\n        });\n\n        return children.map(child => {\n            if (isString(child)) return child;\n\n            if (child.__fc__) {\n                return this.renderParser(child.__fc__, parser);\n            }\n\n            $de(() => this.$handle.reloadRule());\n        });\n\n    }\n\n    defaultRender(parser, children) {\n        return this.vNode[parser.type] ? this.vNode[parser.type](this.inputVData(parser), children) : this.vNode.make(parser.type, this.inputVData(parser), children);\n    }\n}\n\nfunction setTemplateProps(parser) {\n    const {rule} = parser;\n    if (!rule.vm.$props)\n        return;\n    const keys = Object.keys(rule.vm.$props);\n    keys.forEach(key => {\n        if (rule.props[key] !== undefined)\n            rule.vm.$props[key] = rule.props[key];\n    });\n\n    if (keys.indexOf('value') !== -1) {\n        rule.vm.$props.value = parser.rule.value;\n    }\n}","import {\n    $del,\n    $set, deepExtend,\n    errMsg,\n    extend,\n    isString,\n    isUndef,\n    isValidChildren,\n    toLine,\n    toString,\n    uniqueId,\n    isFunction\n} from '@form-create/utils';\nimport BaseParser from '../factory/parser';\nimport Render from './render';\n\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport default class Handle {\n\n    constructor(fc) {\n        const {vm, rules, options} = fc;\n\n        this.vm = vm;\n        this.fc = fc;\n        this.id = uniqueId();\n        this.options = options;\n\n        this.validate = {};\n        this.formData = {};\n\n        this.fCreateApi = undefined;\n\n        this.__init(rules);\n        this.$form = new fc.drive.formRender(this, this.id);\n        this.$render = new Render(this);\n\n        this.loadRule(this.rules, false);\n\n        this.$render.initOrgChildren();\n\n        this.$form.init();\n    }\n\n    __init(rules) {\n        this.fieldList = {};\n        this.trueData = {};\n        this.parsers = {};\n        this.customData = {};\n        this.sortList = [];\n        this.rules = rules;\n        this.origin = [...this.rules];\n        this.changeStatus = false;\n    }\n\n    loadRule(rules, child) {\n        rules.map((_rule) => {\n            if (child && isString(_rule)) return;\n\n            if (!_rule.type)\n                return console.error('未定义生成规则的 type 字段' + errMsg());\n\n            let parser;\n\n            if (_rule.__fc__) {\n                parser = _rule.__fc__;\n\n                if (parser.vm !== this.vm && !parser.deleted)\n                    return console.error(`${_rule.type}规则正在其他的 <form-create> 中使用` + errMsg());\n                parser.update(this);\n            } else {\n                parser = this.createParser(this.parseRule(_rule));\n            }\n\n            let children = parser.rule.children, rule = parser.rule;\n            if (!this.notField(parser.field))\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            this.setParser(parser);\n\n            if (!_rule.__fc__) {\n                bindParser(_rule, parser);\n            }\n            if (isValidChildren(children)) {\n                this.loadRule(children, true);\n            }\n\n            if (!child) {\n                this.sortList.push(parser.id);\n            }\n\n            if (!this.isNoVal(parser))\n                Object.defineProperty(parser.rule, 'value', {\n                    get: () => {\n                        return parser.toValue(this.getFormData(parser));\n                    },\n                    set: (value) => {\n                        if (this.isChange(parser, value)) {\n                            this.$render.clearCache(parser, true);\n                            this.setFormData(parser, parser.toFormValue(value));\n                        }\n                    }\n                });\n\n            return parser;\n        }).filter(h => h).forEach(h => {\n            h.root = rules;\n        });\n    }\n\n    createParser(rule) {\n        const id = this.id + '' + uniqueId(), parsers = this.fc.parsers, type = toString(rule.type).toLocaleLowerCase();\n\n        const Parser = (parsers[type]) ? parsers[type] : BaseParser;\n\n        return new Parser(this, rule, id);\n    }\n\n    parseRule(_rule) {\n        const def = defRule(), rule = getRule(_rule);\n        Object.keys(def).forEach(k => {\n            if (isUndef(rule[k])) $set(rule, k, def[k]);\n        });\n        const parseRule = {\n            options: parseArray(rule.options)\n        };\n\n        parseRule.on = parseOn(rule.on, this.parseEmit(rule));\n\n        Object.keys(parseRule).forEach(k => {\n            $set(rule, k, parseRule[k]);\n        });\n\n        // if (isUndef(rule.props.elementId)) $set(rule.props, 'elementId', this.unique);\n        return rule;\n    }\n\n    parseEmit(rule) {\n        let event = {}, {emit, emitPrefix, field} = rule;\n\n        if (!Array.isArray(emit)) return event;\n\n        emit.forEach(eventName => {\n            const emitKey = emitPrefix ? emitPrefix : field;\n            const fieldKey = toLine(`${emitKey}-${eventName}`).replace('_', '-');\n\n            event[eventName] = (...arg) => {\n                this.vm.$emit(fieldKey, ...arg);\n            };\n        });\n\n        return event;\n    }\n\n    run() {\n        if (this.vm.unique > 0)\n            return this.$render.run();\n        else {\n            this.vm.unique = 1;\n            return [];\n        }\n    }\n\n    setParser(parser) {\n        let {id, field, name, rule} = parser;\n        if (this.parsers[id])\n            return;\n        this.parsers[id] = parser;\n\n        if (this.isNoVal(parser)) {\n            if (name)\n                $set(this.customData, name, parser);\n            return;\n        }\n        this.fieldList[field] = parser;\n        $set(this.formData, field, parser.toFormValue(rule.value));\n        $set(this.validate, field, rule.validate || []);\n        $set(this.trueData, field, parser);\n    }\n\n    notField(id) {\n        return this.parsers[id] === undefined;\n    }\n\n    isChange(parser, value) {\n        return JSON.stringify(parser.rule.value) !== JSON.stringify(value);\n    }\n\n    onInput(parser, value) {\n        if (!this.isNoVal(parser) && this.isChange(parser, parser.toValue(value))) {\n            this.$render.clearCache(parser);\n            this.setFormData(parser, value);\n            this.changeStatus = true;\n        }\n    }\n\n    getParser(id) {\n        if (this.fieldList[id])\n            return this.fieldList[id];\n        else if (this.customData[id])\n            return this.customData[id];\n        else if (this.parsers[id])\n            return this.parsers[id];\n    }\n\n    created() {\n        const vm = this.vm;\n\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'formData', this.formData);\n\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = this.fc.drive.getGlobalApi(this);\n        this.fCreateApi.rule = this.rules;\n        this.fCreateApi.config = this.options;\n    }\n\n\n    addParserWitch(parser) {\n        const vm = this.vm;\n\n        Object.keys(parser.rule).forEach((key) => {\n            if (['field', 'type', 'value', 'vm', 'template', 'name', 'config'].indexOf(key) !== -1 || parser.rule[key] === undefined) return;\n            parser.watch.push(vm.$watch(() => parser.rule[key], (n, o) => {\n                if (o === undefined) return;\n                this.$render.clearCache(parser);\n            }, {deep: true, immediate: true}));\n\n        });\n    }\n\n    mountedParser() {\n        const vm = this.vm;\n        Object.keys(this.parsers).forEach((id) => {\n            let parser = this.parsers[id];\n            if (parser.watch.length === 0) this.addParserWitch(parser);\n\n            parser.el = vm.$refs[parser.refName] || {};\n\n            if (parser.defaultValue === undefined)\n                parser.defaultValue = deepExtend({}, {value: parser.rule.value}).value;\n\n            parser.mounted && parser.mounted();\n        });\n    }\n\n    mounted() {\n        const mounted = this.options.mounted;\n\n        this.mountedParser();\n\n        mounted && mounted(this.fCreateApi);\n        this.fc.$emit('mounted', this.fCreateApi);\n    }\n\n    reload() {\n        const onReload = this.options.onReload;\n\n        this.mountedParser();\n\n        onReload && onReload(this.fCreateApi);\n        this.fc.$emit('on-reload', this.fCreateApi);\n    }\n\n    removeField(parser) {\n        const {id, field} = parser, index = this.sortList.indexOf(id);\n\n        delParser(parser);\n        $del(this.parsers, id);\n        $del(this.validate, field);\n\n        if (index !== -1) {\n            this.sortList.splice(index, 1);\n        }\n        $del(this.formData, field);\n        $del(this.customData, field);\n        $del(this.fieldList, field);\n        $del(this.trueData, field);\n    }\n\n    refresh() {\n        this.vm._refresh();\n    }\n\n    reloadRule(rules) {\n        const vm = this.vm;\n        if (!rules) return this.reloadRule(this.rules);\n        if (!this.origin.length) this.fCreateApi.refresh();\n        this.origin = [...rules];\n\n        const parsers = {...this.parsers};\n        this.__init(rules);\n        this.loadRule(rules, false);\n        Object.keys(parsers).filter(id => this.parsers[id] === undefined)\n            .forEach(id => this.removeField(parsers[id]));\n        this.$render.initOrgChildren();\n        this.created();\n\n        vm.$nextTick(() => {\n            this.reload();\n        });\n\n        vm.$f = this.fCreateApi;\n        this.$render.clearCacheAll();\n        this.refresh();\n    }\n\n    setFormData(parser, value) {\n        this.formData[parser.field] = value;\n    }\n\n    getFormData(parser) {\n        return this.formData[parser.field];\n    }\n\n    fields() {\n        return Object.keys(this.formData);\n    }\n\n    isNoVal(parser) {\n        return !parser.isDef;\n    }\n\n}\n\nexport function delParser(parser) {\n    parser.watch.forEach((unWatch) => unWatch());\n    parser.watch = [];\n    parser.deleted = true;\n    Object.defineProperty(parser.rule, 'value', {\n        value: extend({}, {value: parser.rule.value}).value\n    });\n}\n\nfunction parseOn(on, emitEvent) {\n    if (Object.keys(emitEvent).length > 0) extend(on, emitEvent);\n    return on;\n}\n\nfunction parseArray(validate) {\n    return Array.isArray(validate) ? validate : [];\n}\n\n\nfunction defRule() {\n    return {\n        validate: [],\n        col: {},\n        emit: [],\n        props: {},\n        on: {},\n        options: [],\n        title: '',\n        value: '',\n        field: '',\n        name: '',\n        className: ''\n    };\n}\n\nfunction bindParser(rule, parser) {\n    Object.defineProperties(rule, {\n        __field__: {\n            value: parser.field,\n            enumerable: false,\n            configurable: false\n        },\n        __fc__: {\n            value: parser,\n            enumerable: false,\n            configurable: false\n        }\n    });\n}","import {\n    $set,\n    deepExtend,\n    extend,\n    isBool,\n    isElement,\n    toString,\n    isPlainObject, parseJson,\n} from '@form-create/utils';\nimport $FormCreate from '../components/formCreate';\nimport {formCreateName} from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from './handle';\nimport {creatorFactory} from '../factory/creator';\nimport BaseParser from '../factory/parser';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nexport default function createFormCreate(drive) {\n\n    const components = {}, parsers = {}, maker = makerFactory(), globalConfig = drive.getConfig(), data = {};\n\n    function setParser(id, parser) {\n        id = toString(id);\n        parsers[id.toLocaleLowerCase()] = parser;\n        FormCreate.maker[id] = creatorFactory(id);\n    }\n\n    function createParser() {\n        return class Parser extends BaseParser {\n        }\n    }\n\n    function component(id, component) {\n        id = toString(id);\n        const _id = id.toLocaleLowerCase();\n        if (_id === 'form-create' || _id === 'formcreate')\n            return get$FormCreate();\n        if (component === undefined)\n            return components[id];\n        else\n            components[id] = component;\n    }\n\n    function margeGlobal(config, _options) {\n        if (isBool(_options.sumbitBtn))\n            _options.sumbitBtn = {show: _options.sumbitBtn};\n\n        if (isBool(_options.resetBtn))\n            _options.resetBtn = {show: _options.resetBtn};\n\n        let options = deepExtend(config, _options);\n\n        $set(options, 'el', !options.el\n            ? window.document.body\n            : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n            ));\n\n        return options;\n    }\n\n    function get$FormCreate() {\n        return _vue.extend($FormCreate(FormCreate, components));\n    }\n\n    function bindAttr(formCreate) {\n        extend(formCreate, {\n            version: drive.version,\n            ui: drive.ui,\n            maker,\n            component,\n            setParser,\n            createParser,\n            data,\n            $form() {\n                return get$FormCreate();\n            },\n            parseJson(json) {\n                return parseJson(json);\n            }\n        });\n    }\n\n    function install(Vue, options) {\n        if (Vue._installedFormCreate === true) return;\n        Vue._installedFormCreate = true;\n\n        if (options && isPlainObject(options))\n            margeGlobal(globalConfig, options);\n\n        Vue.use(FormCreate);\n    }\n\n    function create(rules, option) {\n        const $vm = new _vue({\n            data() {\n                return {rule: rules, option: isElement(option) ? {el: option} : option};\n            },\n            render() {\n                return <form-create ref='fc' props={this.$data}/>\n            }\n        });\n        $vm.$mount();\n        return $vm;\n    }\n\n    class FormCreate {\n        constructor(rules, options = {}) {\n            this.fCreateApi = undefined;\n            this.drive = drive;\n            this.parsers = parsers;\n            this.vm = undefined;\n            this.rules = Array.isArray(rules) ? rules : [];\n            this.options = margeGlobal(deepExtend({}, globalConfig), options);\n        }\n\n        beforeCreate(vm) {\n            this.vm = vm;\n            this.handle = new Handle(this);\n        }\n\n        created() {\n            this.handle.created();\n        }\n\n        api() {\n            return this.handle.fCreateApi;\n        }\n\n        render() {\n            return this.handle.run();\n        }\n\n        mounted() {\n            this.handle.mounted();\n        }\n\n        $emit(eventName, ...params) {\n            if (this.$parent)\n                this.$parent.$emit(`fc:${eventName}`, ...params);\n\n            this.vm.$emit(eventName, ...params);\n        }\n\n        static create(rules, _opt = {}, parent) {\n\n            let $vm = create(rules, _opt);\n\n            const _this = $vm.$refs.fc.formCreate;\n            _this.parent = parent;\n            _this.options.el.appendChild($vm.$el);\n\n            return _this.handle.fCreateApi;\n        }\n\n        static install(Vue) {\n            const $formCreate = function (rules, opt = {}) {\n                return FormCreate.create(rules, opt, this);\n            };\n\n            bindAttr($formCreate);\n\n            Vue.prototype.$formCreate = $formCreate;\n\n            Vue.component(formCreateName, get$FormCreate());\n            _vue = Vue;\n        }\n\n        static init(rules, _opt = {}) {\n            let $vm = create(rules, _opt), formCreate = $vm.$refs.fc.formCreate;\n\n            return {\n                mount($el) {\n                    if ($el && isElement($el))\n                        formCreate.options.el = $el;\n                    formCreate.options.el.appendChild($vm.$el);\n                    return formCreate.handle.fCreateApi;\n                },\n                remove() {\n                    formCreate.options.el.removeChild($vm.$el);\n                },\n                destroy() {\n                    this.remove();\n                    $vm.$destroy();\n                },\n                $f: formCreate.handle.fCreateApi\n            };\n        }\n    }\n\n    bindAttr(FormCreate);\n\n\n    drive.components.forEach(component => {\n        FormCreate.component(component.name, component);\n    });\n\n    drive.parsers.forEach(({name, parser}) => {\n        FormCreate.setParser(name, parser);\n    });\n\n    Object.keys(drive.makers).forEach(name => {\n        FormCreate.maker[name] = drive.makers[name];\n    });\n\n    return {\n        FormCreate,\n        install\n    };\n}","import VData from './vData';\nimport VNode from './vNode';\nimport {deepExtend} from '@form-create/utils';\n\n\nexport default class BaseForm {\n\n    constructor(handle) {\n        this.$handle = handle;\n        this.vm = handle.vm;\n        this.drive = this.$handle.fc.drive;\n        this.options = handle.options;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.unique = handle.id;\n    }\n\n    init() {\n        this.$render = this.$handle.$render;\n    }\n\n    getGetCol(parser) {\n        let col = parser.rule.col || {}, mCol = {}, pCol = {};\n\n        if (!this.options.global)\n            return col;\n\n        if (this.options.global['*']) {\n            mCol = this.options.global['*'].col || {};\n        }\n\n        if (this.options.global[parser.type]) {\n            pCol = this.options.global[parser.type].col || {};\n        }\n        col = deepExtend(deepExtend(deepExtend({}, mCol), pCol), col);\n        return col;\n    }\n\n    beforeRender() {\n\n    }\n\n    render() {\n\n    }\n\n    inputVData() {\n    }\n}\n"],"names":["$set","target","field","value","Vue","set","$del","delete","isValidChildren","children","Array","isArray","length","_toString","Object","prototype","toString","isUndef","v","val","_typeof","JSON","stringify","String","extend","to","_from","key","debounce","fn","wait","timeout","arg","clearTimeout","setTimeout","isType","type","call","isPlainObject","isFunction","isString","isBool","toLine","name","line","replace","toLowerCase","indexOf","substr","toArray","isElement","nodeType","deepExtend","origin","isArr","hasOwnProperty","clone","nst","undefined","id","uniqueId","parseJson","json","parse","k","eval","errMsg","i","formCreateName","$FormCreate","FormCreate","components","props","rule","required","default","option","data","formData","buttonProps","resetProps","$f","isShow","unique","render","this","formCreate","methods","_buttonProps","_resetProps","_refresh","watch","n","handle","reloadRule","beforeCreate","$options","propsData","created","api","$emit","mounted","beforeDestroy","$render","clearCacheAll","defVData","class","style","attrs","domProps","on","nativeOn","directives","scopedSlots","slot","ref","VData","init","classList","status","forEach","cls","_this","_data","concat","keys","reduce","initial","_this2","keyList","objList","baseRule","validate","options","col","emit","template","emitPrefix","native","info","creatorFactory","title","Creator","creatorTypeFactory","typeName","maker","obj","keyAttrs","attr","objAttrs","opt","arrAttrs","makerFactory","commonMaker","create","make","createTmp","vm","toMaker","getRule","ruleToMaker","rules","map","r","defineProperty","findField","enumerable","configurable","parseVData","innerHTML","get","getVNode","VNode","setVm","$h","$createElement","nodeName","VNodeFn","Node","context","nodes","toLocaleLowerCase","BaseParser","vData","vNode","isDef","el","refName","formItemRefName","update","$handle","deleted","formValue","$de","Render","fc","$form","cache","renderList","parser","clear","cacheStatus","refresh","parent","clearCache","vnode","use","parsers","orgChildren","beforeRender","vn","sortList","renderParser","filter","global","toData","compile","console","error","setTemplateProps","$off","$on","onInput","setGlobalConfig","form","renderTemplate","setCache","isNoVal","inputVData","renderChildren","defaultRender","container","getCache","custom","parserToData","_this3","getFormData","child","__fc__","_this4","removeField","$props","Handle","fCreateApi","__init","drive","formRender","loadRule","initOrgChildren","fieldList","trueData","customData","changeStatus","_rule","createParser","parseRule","notField","setParser","bindParser","push","toValue","isChange","setFormData","toFormValue","h","root","def","defRule","parseArray","parseOn","parseEmit","event","eventName","fieldKey","run","submitBtn","resetBtn","getGlobalApi","config","$watch","o","deep","immediate","addParserWitch","$refs","defaultValue","mountedParser","onReload","index","delParser","splice","_this5","$nextTick","reload","unWatch","emitEvent","className","defineProperties","__field__","_vue","window","createFormCreate","globalConfig","getConfig","component","_id","get$FormCreate","margeGlobal","_options","sumbitBtn","show","document","querySelector","body","bindAttr","version","ui","$vm","$data","$mount","params","$parent","_opt","appendChild","$el","$formCreate","mount","remove","removeChild","destroy","$destroy","makers","install","_installedFormCreate","BaseForm","mCol","pCol"],"mappings":"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"}