{"version":3,"file":"form-create.core.min.js","sources":["../../utils/src/index.js","../src/components/formCreate.js","../src/factory/vData.js","../src/factory/creator.js","../src/factory/maker.js","../src/factory/vNode.js","../src/factory/parser.js","../src/core/render.js","../src/core/handle.js","../src/core/index.js","../src/factory/form.js"],"sourcesContent":["import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n\nexport function isValidChildren(children) {\n    return Array.isArray(children) && children.length > 0;\n}\n\nexport const _toString = Object.prototype.toString;\n\nexport function isUndef(v) {\n    return v === undefined || v === null\n}\n\nexport function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n\nexport function extend(to, _from) {\n    for (var key in _from) {\n        $set(to, key, _from[key]);\n    }\n    return to\n}\n\nexport function debounce(fn, wait) {\n    var timeout = null;\n    return function (...arg) {\n        if (timeout !== null)\n            clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...arg), wait);\n    }\n}\n\nexport function isType(arg, type) {\n    return _toString.call(arg) === '[object ' + type + ']'\n}\n\nexport function isDate(arg) {\n    return isType(arg, 'Date');\n}\n\nexport function isPlainObject(arg) {\n    return isType(arg, 'Object');\n}\n\nexport function isFunction(arg) {\n    return isType(arg, 'Function');\n}\n\nexport function isString(arg) {\n    return isType(arg, 'String');\n}\n\nexport function isBool(arg) {\n    return isType(arg, 'Boolean');\n}\n\nexport function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n\nexport function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n)\n}\n\nexport function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ((isUndef(value) || value === '' ? [] : [value])\n        );\n}\n\nexport function isElement(arg) {\n    return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !isPlainObject(arg)\n}\n\nexport function deepExtend(origin, target = {}) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || isPlainObject(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                deepExtend(origin[key], clone);\n            } else {\n                $set(origin, key, clone);\n            }\n        }\n    }\n    return origin\n}\n\nlet id = 0;\n\nexport function uniqueId() {\n    return ++id\n}\n\nexport function toDefSlot(slot, $h) {\n    return [slot && isFunction(slot) ? slot($h) : slot]\n}\n\n\nexport function timeStampToDate(timeStamp) {\n    if (isDate(timeStamp))\n        return timeStamp;\n    else {\n        let date = new Date(timeStamp);\n        return date.toString() === 'Invalid Date' ? timeStamp : date;\n    }\n}\n\nexport function preventDefault(e) {\n    e.preventDefault();\n}\n\nexport function dateFormat(fmt, date = new Date) {\n    let o = {\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n    for (let k in o)\n        if (new RegExp('(' + k + ')').test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1)\n                ? (o[k])\n                : (('00' + o[k]).substr(('' + o[k]).length)));\n    return fmt\n}\n\nexport function hasSlot(children, slotName) {\n    return children.length !== 0 && children.some(child => {\n        if (child.data) {\n            if ((!child.data.slot && slotName === 'default') || (child.data.slot === slotName))\n                return true;\n        } else if (slotName === 'default')\n            return true;\n        return false;\n    })\n}\n\nexport function errMsg(i) {\n\n    return '\\n\\x67\\x69\\x74\\x68\\x75\\x62\\x3a\\x68\\x74\\x74\\x70' +\n        '\\x73\\x3a\\x2f\\x2f\\x67\\x69\\x74\\x68\\x75\\x62\\x2e\\x63\\x6f' +\n        '\\x6d\\x2f\\x78\\x61\\x62\\x6f\\x79\\x2f\\x66\\x6f\\x72\\x6d\\x2d' +\n        '\\x63\\x72\\x65\\x61\\x74\\x65\\n\\x64\\x6f\\x63\\x75\\x6d\\x65' +\n        '\\x6e\\x74\\x3a\\x68\\x74\\x74\\x70\\x3a\\x2f\\x2f\\x77\\x77\\x77' +\n        '\\x2e\\x66\\x6f\\x72\\x6d\\x2d\\x63\\x72\\x65\\x61\\x74\\x65\\x2e' +\n        '\\x63\\x6f\\x6d' + (i || '');\n}","import {deepExtend} from '@form-create/utils';\n\nexport const formCreateName = 'FormCreate';\n\nexport default function $FormCreate(FormCreate, components) {\n    return {\n        name: formCreateName,\n        props: {\n            rule: {\n                type: Array,\n                required: true,\n                default: () => {\n                    return {};\n                }\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                },\n                required: false\n            },\n            value: Object\n        },\n        data: () => {\n            return {\n                formData: undefined,\n                buttonProps: undefined,\n                resetProps: undefined,\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n            };\n        },\n        components,\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _buttonProps(props) {\n                this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n            },\n            _resetProps(props) {\n                this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n            },\n            _refresh() {\n                this.unique += 1;\n            }\n        },\n        watch: {\n            option: '_refresh',\n            rule(n) {\n                this.formCreate.handle.reloadRule(n);\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(rule, option);\n            this.formCreate.beforeCreate(this);\n        },\n        created() {\n            this.formCreate.created();\n            this.$f = this.formCreate.api();\n            this.$emit('input', this.$f);\n        },\n        mounted() {\n            const formCreate = this.formCreate;\n\n            formCreate.mounted();\n            this.$emit('input', this.$f);\n\n        },\n        beforeDestroy() {\n            this.formCreate.handle.reloadRule([]);\n            this.formCreate.handle.$render.clearCacheAll();\n        },\n    }\n}","import {$set, extend, isPlainObject, isUndef, toArray, toString} from '@form-create/utils';\n\nfunction defVData() {\n    return {\n        class: {},\n        style: {},\n        attrs: {},\n        props: {},\n        domProps: {},\n        on: {},\n        nativeOn: {},\n        directives: [],\n        scopedSlots: {},\n        slot: undefined,\n        key: undefined,\n        ref: undefined\n    };\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            classList.forEach((cls) => {\n                $set(this._data.class, toString(cls), true);\n            });\n        } else if (isPlainObject(classList)) {\n            $set(this._data, 'class', extend(this._data.class, classList));\n        } else {\n            $set(this._data.class, toString(classList), status === undefined ? true : status);\n        }\n\n        return this;\n    }\n\n    directives(directives) {\n        if (isUndef(directives)) return this;\n        $set(this._data, 'directives', this._data.directives.concat(toArray(directives)));\n        return this;\n    }\n\n    init() {\n        this._data = defVData();\n        return this;\n    }\n\n    get() {\n        const data = Object.keys(this._data).reduce((initial, key) => {\n            const value = this._data[key];\n            if (value === undefined) return initial;\n            if (Array.isArray(value) && !value.length) return initial;\n            if (!Object.keys(value).length && key !== 'props') return initial;\n\n            initial[key] = value;\n            return initial;\n        }, {});\n        this.init();\n        return data;\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        $set(this._data, key, val);\n        return this;\n    };\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n\n        if (isPlainObject(obj)) {\n            $set(this._data, key, extend(this._data[key], obj));\n        } else {\n            $set(this._data[key], toString(obj), val);\n        }\n\n        return this;\n    };\n});\n\n","import {$set, extend, isFunction, isPlainObject} from '@form-create/utils';\nimport VData from './vData';\n\nfunction baseRule() {\n    return {\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        emit: [],\n        template: undefined,\n        emitPrefix: undefined,\n        native: false,\n    };\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props);\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type)) type(maker);\n        else maker.props(typeName, type);\n        return maker;\n    };\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n        extend(this._data, baseRule());\n        extend(this._data, {type, title, field, value});\n        if (isPlainObject(props)) this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this;\n    }\n\n    getRule() {\n        return this._data;\n    }\n\n    event(...args) {\n        this.on(...args);\n        return this;\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'value', 'name', 'title', 'native'];\n\nkeyAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (value) {\n        $set(this._data, attr, value);\n        return this;\n    };\n});\n\nconst objAttrs = ['col'];\n\nobjAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this._data, attr, extend(this._data[attr], opt));\n        return this;\n    };\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit'];\n\narrAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this._data, attr, this._data[attr].concat(opt));\n        return this;\n    };\n});\n","import Creator, {creatorFactory} from './creator';\nimport {extend, isPlainObject, isString, isValidChildren} from '@form-create/utils';\n\nexport default function makerFactory() {\n    let maker = {};\n\n\n    const commonMaker = creatorFactory('');\n\n    extend(maker, {\n        create(type, field, title) {\n            let make = commonMaker('', field);\n            make._data.type = type;\n            make._data.title = title;\n            return make;\n        },\n        createTmp(template, vm, field, title) {\n            let make = commonMaker('', field);\n            make._data.type = 'template';\n            make._data.template = template;\n            make._data.title = title;\n            make._data.vm = vm;\n            return make;\n        }\n    });\n    maker.template = maker.createTmp;\n    maker.parse = parse;\n\n    return maker;\n}\n\nfunction parse(rule, toMaker = false) {\n    if (isString(rule)) rule = JSON.parse(rule);\n\n    if (rule instanceof Creator) return toMaker ? rule : rule.getRule();\n    if (isPlainObject(rule)) {\n        const maker = ruleToMaker(rule);\n        return toMaker ? maker : maker.getRule();\n    } else if (!Array.isArray(rule)) return rule;\n    else {\n        const rules = rule.map(r => parse(r, toMaker));\n        Object.defineProperty(rules, 'find', {\n            value: findField,\n            enumerable: false,\n            configurable: false\n        });\n\n        return rules;\n    }\n}\n\nfunction findField(field) {\n    let children = [];\n    for (let i in this) {\n        const rule = this[i] instanceof Creator ? this[i].rule : this[i];\n        if (rule.field === field) return this[i];\n        if (isValidChildren(rule.children)) children = children.concat(rule.children);\n    }\n    if (children.length > 0) return findField.call(children, field);\n}\n\nfunction ruleToMaker(rule) {\n    const maker = new Creator();\n    Object.keys(rule).forEach(key => {\n        maker._data[key] = rule[key];\n    });\n    return maker;\n}\n","import {isFunction, isString, toString} from '@form-create/utils';\n\nfunction parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data;\n}\n\nfunction getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || []);\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        if (vm)\n            this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node;\n    }\n\n    static use(nodes) {\n        Object.keys(nodes).forEach((k) => {\n            VNode.prototype[toString(k).toLocaleLowerCase()] = VNode.prototype[k] = function (data, VNodeFn) {\n                return this.make(nodes[k], data, VNodeFn);\n            };\n        });\n    }\n}\n","import VData from './vData';\nimport {toString, uniqueId} from '@form-create/utils';\nimport VNode from './vNode';\n\nexport default class BaseParser {\n\n    constructor(handle, rule, id) {\n        this.rule = rule;\n        this.vData = new VData;\n        this.vNode = new VNode();\n        this.id = id;\n        this.watch = [];\n        this.type = toString(rule.type).toLocaleLowerCase();\n        this.isDef = true;\n        this.el = undefined;\n\n        if (!rule.field) {\n            this.field = '_def_' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n        this.name = rule.name;\n\n        this.unique = 'fc_' + id;\n        this.key = 'key_' + id;\n        this.refName = '__' + this.field + this.id;\n        this.formItemRefName = 'fi' + this.refName;\n\n        this.update(handle);\n        this.init();\n    }\n\n    update(handle) {\n        this.$handle = handle;\n        this.$render = handle.$render;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.vNode.setVm(this.vm);\n        this.deleted = false;\n    }\n\n    init() {\n    }\n\n    toFormValue(value) {\n        return value\n    }\n\n    toValue(formValue) {\n        return formValue;\n    }\n}","import {_vue as Vue} from './index';\nimport {debounce, errMsg, isString, isUndef, isValidChildren} from '@form-create/utils';\nimport VNode from '../factory/vNode';\nimport VData from '../factory/vData';\n\n\nconst $de = debounce((fn) => fn(), 1);\n\nexport default class Render {\n    constructor(handle) {\n        this.$handle = handle;\n        this.fc = handle.fc;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.$form = handle.$form;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.cache = {};\n        this.renderList = {};\n    }\n\n    clearCache(parser, clear = true) {\n        if (!this.cache[parser.id]) return;\n        if (this.cacheStatus(parser))\n            this.$handle.refresh();\n        const parent = this.cache[parser.id].parent;\n        this.cache[parser.id] = null;\n        if (parent && clear)\n            this.clearCache(parent, clear);\n    }\n\n    clearCacheAll() {\n        this.cache = {};\n    }\n\n    setCache(parser, vnode, parent) {\n        this.cache[parser.id] = {\n            vnode,\n            use: false,\n            parent\n        };\n    }\n\n    cacheStatus(parser) {\n        return this.cache[parser.id] && (this.cache[parser.id].use === true || this.cache[parser.id].parent);\n    }\n\n    getCache(parser) {\n        const cache = this.cache[parser.id];\n        cache.use = true;\n        return cache.vnode;\n    }\n\n    initOrgChildren() {\n        const parsers = this.$handle.parsers;\n        this.orgChildren = Object.keys(parsers).reduce((initial, id) => {\n            const children = parsers[id].rule.children;\n            initial[id] = isValidChildren(children) ? [...children] : [];\n\n            return initial;\n        }, {});\n    }\n\n    run() {\n        if (!this.vm.isShow)\n            return;\n\n        this.$form.beforeRender();\n\n        const vn = this.$handle.sortList.map((id) => {\n            let parser = this.$handle.parsers[id];\n            if (parser.type === 'hidden') return;\n            return this.renderParser(parser);\n        }).filter((val) => val !== undefined);\n\n        return this.$form.render(vn);\n    }\n\n    setGlobalConfig(parser) {\n        if (!this.options.global) return;\n\n        if (this.options.global['*']) {\n            this.toData(parser, this.options.global['*']);\n        }\n        if (this.options.global[parser.type]) {\n            this.toData(parser, this.options.global[parser.type]);\n        }\n    }\n\n    renderTemplate(parser) {\n        const {id, rule, key} = parser;\n        if (Vue.compile === undefined) {\n            console.error('使用的 Vue 版本不支持 compile' + errMsg());\n            return [];\n        }\n\n        if (!this.renderList[id]) {\n            if (isUndef(rule.vm)) rule.vm = new Vue;\n            this.renderList[id] = Vue.compile(rule.template);\n\n        }\n\n        setTemplateProps(parser);\n\n        rule.vm.$off('input');\n        rule.vm.$on('input', (value) => {\n            this.onInput(parser, value);\n        });\n\n        const vn = this.renderList[id].render.call(rule.vm);\n\n        if (vn.data === undefined) vn.data = {};\n        vn.key = key;\n        return vn;\n    }\n\n    renderParser(parser, parent) {\n        parser.vData.get();\n        this.setGlobalConfig(parser);\n\n        if (!this.cache[parser.id] || parser.type === 'template') {\n            let {type, rule} = parser, form = this.$form, vn;\n\n            if (type === 'template' && rule.template) {\n                vn = this.renderTemplate(parser);\n\n                if (parent) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            } else if (!this.$handle.isNoVal(parser)) {\n                const children = this.renderChildren(parser);\n                vn = parser.render ? parser.render(children) : this.defaultRender(parser, children);\n            } else {\n                vn = this.vNode.make(type, this.inputVData(parser), this.renderChildren(parser));\n                if (parent) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            }\n            if (rule.native !== true)\n                vn = form.container(vn, parser);\n            this.setCache(parser, vn, parent);\n            return vn;\n        }\n\n        return this.getCache(parser);\n    }\n\n    toData(parser, data) {\n        Object.keys(parser.vData._data).forEach((key) => {\n            if (data[key] !== undefined)\n                parser.vData[key](data[key]);\n        });\n\n        return parser.vData;\n    }\n\n    parserToData(parser) {\n        return this.toData(parser, parser.rule);\n    }\n\n    inputVData(parser, custom) {\n        const {refName, key} = parser;\n\n        this.parserToData(parser);\n\n        let data = parser.vData\n            .ref(refName).key('fc_item' + key);\n\n        if (!custom)\n            data.on('input', (value) => {\n                this.onInput(parser, value);\n            }).props('value', this.$handle.getFormData(parser));\n\n        this.$form.inputVData && this.$form.inputVData(parser, custom);\n\n        return data;\n    }\n\n    onInput(parser, value) {\n        this.$handle.onInput(parser, value);\n    }\n\n    renderChildren(parser) {\n        const {children} = parser.rule, orgChildren = this.orgChildren[parser.id];\n\n        if (!isValidChildren(children)) {\n            orgChildren.forEach(child => {\n                if (!isString(child) && child.__fc__) {\n                    this.$handle.removeField(child.__fc__);\n                }\n            });\n            this.orgChildren[parser.id] = [];\n            return [];\n        }\n\n        this.orgChildren[parser.id].forEach(child => {\n            if (children.indexOf(child) === -1 && !isString(child) && child.__fc__) {\n                this.$handle.removeField(child.__fc__);\n            }\n        });\n\n        return children.map(child => {\n            if (isString(child)) return child;\n\n            if (child.__fc__) {\n                return this.renderParser(child.__fc__, parser);\n            }\n\n            $de(() => this.$handle.reloadRule());\n        });\n\n    }\n\n    defaultRender(parser, children) {\n        return this.vNode[parser.type] ? this.vNode[parser.type](this.inputVData(parser), children) : this.vNode.make(parser.type, this.inputVData(parser), children);\n    }\n}\n\nfunction setTemplateProps(parser) {\n    const {rule} = parser;\n    if (!rule.vm.$props)\n        return;\n    const keys = Object.keys(rule.vm.$props);\n    keys.forEach(key => {\n        if (rule.props[key] !== undefined)\n            rule.vm.$props[key] = rule.props[key];\n    });\n\n    if (keys.indexOf('value') !== -1) {\n        rule.vm.$props.value = parser.rule.value;\n    }\n}","import {\n    $del,\n    $set, deepExtend,\n    errMsg,\n    extend,\n    isString,\n    isUndef,\n    isValidChildren,\n    toLine,\n    toString,\n    uniqueId,\n    isFunction\n} from '@form-create/utils';\nimport BaseParser from '../factory/parser';\nimport Render from './render';\n\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport default class Handle {\n\n    constructor(fc) {\n        const {vm, rules, options} = fc;\n\n        this.vm = vm;\n        this.fc = fc;\n        this.id = uniqueId();\n        this.options = options;\n\n        this.validate = {};\n        this.formData = {};\n\n        this.fCreateApi = undefined;\n\n        this.__init(rules);\n        this.$form = new fc.drive.formRender(this, this.id);\n        this.$render = new Render(this);\n\n        this.loadRule(this.rules, false);\n\n        this.$render.initOrgChildren();\n\n        this.$form.init();\n    }\n\n    __init(rules) {\n        this.fieldList = {};\n        this.trueData = {};\n        this.parsers = {};\n        this.customData = {};\n        this.sortList = [];\n        this.rules = rules;\n        this.origin = [...this.rules];\n        this.changeStatus = false;\n    }\n\n    loadRule(rules, child) {\n        rules.map((_rule) => {\n            if (child && isString(_rule)) return;\n\n            if (!_rule.type)\n                return console.error('未定义生成规则的 type 字段' + errMsg());\n\n            let parser;\n\n            if (_rule.__fc__) {\n                parser = _rule.__fc__;\n\n                if (parser.vm !== this.vm && !parser.deleted)\n                    return console.error(`${_rule.type}规则正在其他的 <form-create> 中使用` + errMsg());\n                parser.update(this);\n            } else {\n                parser = this.createParser(this.parseRule(_rule));\n            }\n\n            let children = parser.rule.children, rule = parser.rule;\n            if (!this.notField(parser.field))\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            this.setParser(parser);\n\n            if (!_rule.__fc__) {\n                bindParser(_rule, parser);\n            }\n            if (isValidChildren(children)) {\n                this.loadRule(children, true);\n            }\n\n            if (!child) {\n                this.sortList.push(parser.id);\n            }\n\n            if (!this.isNoVal(parser))\n                Object.defineProperty(parser.rule, 'value', {\n                    get: () => {\n                        return parser.toValue(this.getFormData(parser));\n                    },\n                    set: (value) => {\n                        if (this.isChange(parser, value)) {\n                            this.$render.clearCache(parser, true);\n                            this.setFormData(parser, parser.toFormValue(value));\n                        }\n                    }\n                });\n\n            return parser;\n        }).filter(h => h).forEach(h => {\n            h.root = rules;\n        });\n    }\n\n    createParser(rule) {\n        const id = this.id + '' + uniqueId(), parsers = this.fc.parsers, type = toString(rule.type).toLocaleLowerCase();\n\n        const Parser = (parsers[type]) ? parsers[type] : BaseParser;\n\n        return new Parser(this, rule, id);\n    }\n\n    parseRule(_rule) {\n        const def = defRule(), rule = getRule(_rule);\n        Object.keys(def).forEach(k => {\n            if (isUndef(rule[k])) $set(rule, k, def[k]);\n        });\n        const parseRule = {\n            options: parseArray(rule.options)\n        };\n\n        parseRule.on = parseOn(rule.on, this.parseEmit(rule));\n\n        Object.keys(parseRule).forEach(k => {\n            $set(rule, k, parseRule[k]);\n        });\n\n        // if (isUndef(rule.props.elementId)) $set(rule.props, 'elementId', this.unique);\n        return rule;\n    }\n\n    parseEmit(rule) {\n        let event = {}, {emit, emitPrefix, field} = rule;\n\n        if (!Array.isArray(emit)) return event;\n\n        emit.forEach(eventName => {\n            const emitKey = emitPrefix ? emitPrefix : field;\n            const fieldKey = toLine(`${emitKey}-${eventName}`).replace('_', '-');\n\n            event[eventName] = (...arg) => {\n                this.vm.$emit(fieldKey, ...arg);\n            };\n        });\n\n        return event;\n    }\n\n    run() {\n        if (this.vm.unique > 0)\n            return this.$render.run();\n        else {\n            this.vm.unique = 1;\n            return [];\n        }\n    }\n\n    setParser(parser) {\n        let {id, field, name, rule} = parser;\n        if (this.parsers[id])\n            return;\n        this.parsers[id] = parser;\n\n        if (this.isNoVal(parser)) {\n            if (name)\n                $set(this.customData, name, parser);\n            return;\n        }\n        this.fieldList[field] = parser;\n        $set(this.formData, field, parser.toFormValue(rule.value));\n        $set(this.validate, field, rule.validate || []);\n        $set(this.trueData, field, parser);\n    }\n\n    notField(id) {\n        return this.parsers[id] === undefined;\n    }\n\n    isChange(parser, value) {\n        return JSON.stringify(parser.rule.value) !== JSON.stringify(value);\n    }\n\n    onInput(parser, value) {\n        if (!this.isNoVal(parser) && this.isChange(parser, parser.toValue(value))) {\n            this.$render.clearCache(parser);\n            this.setFormData(parser, value);\n            this.changeStatus = true;\n        }\n    }\n\n    getParser(id) {\n        if (this.fieldList[id])\n            return this.fieldList[id];\n        else if (this.customData[id])\n            return this.customData[id];\n        else if (this.parsers[id])\n            return this.parsers[id];\n    }\n\n    created() {\n        const vm = this.vm;\n\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'formData', this.formData);\n\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = this.fc.drive.getGlobalApi(this);\n        this.fCreateApi.rule = this.rules;\n        this.fCreateApi.config = this.options;\n    }\n\n\n    addParserWitch(parser) {\n        const vm = this.vm;\n\n        Object.keys(parser.rule).forEach((key) => {\n            if (['field', 'type', 'value', 'vm', 'template', 'name', 'config'].indexOf(key) !== -1 || parser.rule[key] === undefined) return;\n            parser.watch.push(vm.$watch(() => parser.rule[key], (n, o) => {\n                if (o === undefined) return;\n                this.$render.clearCache(parser);\n            }, {deep: true, immediate: true}));\n\n        });\n    }\n\n    mountedParser() {\n        const vm = this.vm;\n        Object.keys(this.parsers).forEach((id) => {\n            let parser = this.parsers[id];\n            if (parser.watch.length === 0) this.addParserWitch(parser);\n\n            parser.el = vm.$refs[parser.refName] || {};\n\n            if (parser.defaultValue === undefined)\n                parser.defaultValue = deepExtend({}, {value: parser.rule.value}).value;\n\n            parser.mounted && parser.mounted();\n        });\n    }\n\n    mounted() {\n        const mounted = this.options.mounted;\n\n        this.mountedParser();\n\n        mounted && mounted(this.fCreateApi);\n        this.fc.$emit('mounted', this.fCreateApi);\n    }\n\n    reload() {\n        const onReload = this.options.onReload;\n\n        this.mountedParser();\n\n        onReload && onReload(this.fCreateApi);\n        this.fc.$emit('on-reload', this.fCreateApi);\n    }\n\n    removeField(parser) {\n        const {id, field} = parser, index = this.sortList.indexOf(id);\n\n        delParser(parser);\n        $del(this.parsers, id);\n        $del(this.validate, field);\n\n        if (index !== -1) {\n            this.sortList.splice(index, 1);\n        }\n        $del(this.formData, field);\n        $del(this.customData, field);\n        $del(this.fieldList, field);\n        $del(this.trueData, field);\n    }\n\n    refresh() {\n        this.vm._refresh();\n    }\n\n    reloadRule(rules) {\n        const vm = this.vm;\n        if (!rules) return this.reloadRule(this.rules);\n        if (!this.origin.length) this.fCreateApi.refresh();\n        this.origin = [...rules];\n\n        const parsers = {...this.parsers};\n        this.__init(rules);\n        this.loadRule(rules, false);\n        Object.keys(parsers).filter(id => this.parsers[id] === undefined)\n            .forEach(id => this.removeField(parsers[id]));\n        this.$render.initOrgChildren();\n        this.created();\n\n        vm.$nextTick(() => {\n            this.reload();\n        });\n\n        vm.$f = this.fCreateApi;\n        this.$render.clearCacheAll();\n        this.refresh();\n    }\n\n    setFormData(parser, value) {\n        this.formData[parser.field] = value;\n    }\n\n    getFormData(parser) {\n        return this.formData[parser.field];\n    }\n\n    fields() {\n        return Object.keys(this.formData);\n    }\n\n    isNoVal(parser) {\n        return !parser.isDef;\n    }\n\n}\n\nexport function delParser(parser) {\n    parser.watch.forEach((unWatch) => unWatch());\n    parser.watch = [];\n    parser.deleted = true;\n    Object.defineProperty(parser.rule, 'value', {\n        value: extend({}, {value: parser.rule.value}).value\n    });\n}\n\nfunction parseOn(on, emitEvent) {\n    if (Object.keys(emitEvent).length > 0) extend(on, emitEvent);\n    return on;\n}\n\nfunction parseArray(validate) {\n    return Array.isArray(validate) ? validate : [];\n}\n\n\nfunction defRule() {\n    return {\n        validate: [],\n        col: {},\n        emit: [],\n        props: {},\n        on: {},\n        options: [],\n        title: '',\n        value: '',\n        field: '',\n        name: '',\n        className: ''\n    };\n}\n\nfunction bindParser(rule, parser) {\n    Object.defineProperties(rule, {\n        __field__: {\n            value: parser.field,\n            enumerable: false,\n            configurable: false\n        },\n        __fc__: {\n            value: parser,\n            enumerable: false,\n            configurable: false\n        }\n    });\n}","import {\n    $set,\n    deepExtend,\n    extend,\n    isBool,\n    isElement,\n    toString,\n    isPlainObject,\n} from '@form-create/utils';\nimport $FormCreate from '../components/formCreate';\nimport {formCreateName} from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from './handle';\nimport {creatorFactory} from '../factory/creator';\nimport BaseParser from '../factory/parser';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nexport default function createFormCreate(drive) {\n\n    const components = {}, parsers = {}, maker = makerFactory(), globalConfig = drive.getConfig(), data = {};\n\n    function setParser(id, parser) {\n        id = toString(id);\n        parsers[id.toLocaleLowerCase()] = parser;\n        FormCreate.maker[id] = creatorFactory(id);\n    }\n\n    function createParser() {\n        return class Parser extends BaseParser {\n        }\n    }\n\n    function component(id, component) {\n        id = toString(id);\n        const _id = id.toLocaleLowerCase();\n        if (_id === 'form-create' || _id === 'formcreate')\n            return get$FormCreate();\n        if (component === undefined)\n            return components[id];\n        else\n            components[id] = component;\n    }\n\n    function margeGlobal(config, _options) {\n        if (isBool(_options.sumbitBtn))\n            _options.sumbitBtn = {show: _options.sumbitBtn};\n\n        if (isBool(_options.resetBtn))\n            _options.resetBtn = {show: _options.resetBtn};\n\n        let options = deepExtend(config, _options);\n\n        $set(options, 'el', !options.el\n            ? window.document.body\n            : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n            ));\n\n        return options;\n    }\n\n    function get$FormCreate() {\n        return _vue.extend($FormCreate(FormCreate, components));\n    }\n\n    function bindAttr(formCreate) {\n        extend(formCreate, {\n            version: drive.version,\n            ui: drive.ui,\n            maker,\n            component,\n            setParser,\n            createParser,\n            data,\n            $form() {\n                return get$FormCreate();\n            }\n        });\n    }\n\n    function install(Vue, options) {\n        if (Vue._installedFormCreate === true) return;\n        Vue._installedFormCreate = true;\n\n        if (options && isPlainObject(options))\n            margeGlobal(globalConfig, options);\n\n        Vue.use(FormCreate);\n    }\n\n    function create(rules, option) {\n        const $vm = new _vue({\n            data() {\n                return {rule: rules, option: isElement(option) ? {el: option} : option};\n            },\n            render() {\n                return <form-create ref='fc' props={this.$data}/>\n            }\n        });\n        $vm.$mount();\n        return $vm;\n    }\n\n    class FormCreate {\n        constructor(rules, options = {}) {\n            this.fCreateApi = undefined;\n            this.drive = drive;\n            this.parsers = parsers;\n            this.vm = undefined;\n            this.rules = Array.isArray(rules) ? rules : [];\n            this.options = margeGlobal(deepExtend({}, globalConfig), options);\n        }\n\n        beforeCreate(vm) {\n            this.vm = vm;\n            this.handle = new Handle(this);\n        }\n\n        created() {\n            this.handle.created();\n        }\n\n        api() {\n            return this.handle.fCreateApi;\n        }\n\n        render() {\n            return this.handle.run();\n        }\n\n        mounted() {\n            this.handle.mounted();\n        }\n\n        $emit(eventName, ...params) {\n            if (this.$parent)\n                this.$parent.$emit(`fc:${eventName}`, ...params);\n\n            this.vm.$emit(eventName, ...params);\n        }\n\n        static create(rules, _opt = {}, parent) {\n\n            let $vm = create(rules, _opt);\n\n            const _this = $vm.$refs.fc.formCreate;\n            _this.parent = parent;\n            _this.options.el.appendChild($vm.$el);\n\n            return _this.handle.fCreateApi;\n        }\n\n        static install(Vue) {\n            const $formCreate = function (rules, opt = {}) {\n                return FormCreate.create(rules, opt, this);\n            };\n\n            bindAttr($formCreate);\n\n            Vue.prototype.$formCreate = $formCreate;\n\n            Vue.component(formCreateName, get$FormCreate());\n            _vue = Vue;\n        }\n\n        static init(rules, _opt = {}) {\n            let $vm = create(rules, _opt), formCreate = $vm.$refs.fc.formCreate;\n\n            return {\n                mount($el) {\n                    if ($el && isElement($el))\n                        formCreate.options.el = $el;\n                    formCreate.options.el.appendChild($vm.$el);\n                    return formCreate.handle.fCreateApi;\n                },\n                remove() {\n                    formCreate.options.el.removeChild($vm.$el);\n                },\n                destroy() {\n                    this.remove();\n                    $vm.$destroy();\n                },\n                $f: formCreate.handle.fCreateApi\n            };\n        }\n    }\n\n    bindAttr(FormCreate);\n\n\n    drive.components.forEach(component => {\n        FormCreate.component(component.name, component);\n    });\n\n    drive.parsers.forEach(({name, parser}) => {\n        FormCreate.setParser(name, parser);\n    });\n\n    Object.keys(drive.makers).forEach(name => {\n        FormCreate.maker[name] = drive.makers[name];\n    });\n\n    return {\n        FormCreate,\n        install\n    };\n}","import VData from './vData';\nimport VNode from './vNode';\nimport {deepExtend} from '@form-create/utils';\n\n\nexport default class BaseForm {\n\n    constructor(handle) {\n        this.$handle = handle;\n        this.vm = handle.vm;\n        this.drive = this.$handle.fc.drive;\n        this.options = handle.options;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.unique = handle.id;\n    }\n\n    init() {\n        this.$render = this.$handle.$render;\n    }\n\n    getGetCol(parser) {\n        let col = parser.rule.col || {}, mCol = {}, pCol = {};\n\n        if (!this.options.global)\n            return col;\n\n        if (this.options.global['*']) {\n            mCol = this.options.global['*'].col || {};\n        }\n\n        if (this.options.global[parser.type]) {\n            pCol = this.options.global[parser.type].col || {};\n        }\n        col = deepExtend(deepExtend(deepExtend({}, mCol), pCol), col);\n        return col;\n    }\n\n    beforeRender() {\n\n    }\n\n    render() {\n\n    }\n\n    inputVData() {\n    }\n}\n"],"names":["$set","target","field","value","Vue","set","$del","delete","isValidChildren","children","Array","isArray","length","_toString","Object","prototype","toString","isUndef","v","val","_typeof","JSON","stringify","String","extend","to","_from","key","isType","arg","type","call","isPlainObject","isFunction","isString","isBool","isElement","nodeType","deepExtend","origin","isArr","hasOwnProperty","clone","nst","undefined","id","uniqueId","errMsg","i","formCreateName","VData","init","classList","status","this","forEach","cls","_this","_data","class","directives","concat","style","attrs","props","domProps","on","nativeOn","scopedSlots","slot","ref","data","keys","reduce","initial","_this2","creatorFactory","name","title","Creator","creatorTypeFactory","typeName","maker","obj","validate","options","col","emit","template","emitPrefix","native","attr","opt","makerFactory","commonMaker","create","make","createTmp","vm","parse","rule","toMaker","getRule","ruleToMaker","rules","map","r","defineProperty","findField","enumerable","configurable","fn","wait","timeout","VNode","setVm","$h","$createElement","nodeName","VNodeFn","Node","innerHTML","get","parseVData","context","nodes","k","toLocaleLowerCase","BaseParser","handle","vData","vNode","watch","isDef","el","unique","refName","formItemRefName","update","$handle","$render","deleted","formValue","$de","clearTimeout","setTimeout","Render","fc","$form","cache","renderList","parser","clear","cacheStatus","refresh","parent","clearCache","vnode","use","parsers","orgChildren","isShow","beforeRender","vn","sortList","renderParser","filter","render","global","toData","compile","console","error","$props","indexOf","setTemplateProps","$off","$on","onInput","setGlobalConfig","form","renderTemplate","setCache","isNoVal","inputVData","renderChildren","defaultRender","container","getCache","custom","parserToData","_this3","getFormData","child","__fc__","_this4","removeField","reloadRule","Handle","formData","fCreateApi","__init","drive","formRender","loadRule","initOrgChildren","fieldList","trueData","customData","changeStatus","_rule","createParser","parseRule","notField","setParser","defineProperties","__field__","bindParser","push","toValue","isChange","setFormData","toFormValue","h","root","def","className","emitEvent","parseOn","parseEmit","event","eventName","line","fieldKey","replace","toLowerCase","substr","$emit","run","submitBtn","resetBtn","getGlobalApi","config","$watch","n","o","deep","immediate","addParserWitch","$refs","defaultValue","mounted","mountedParser","onReload","index","unWatch","delParser","splice","_refresh","_this5","created","$nextTick","reload","$f","clearCacheAll","_vue","window","BaseForm","mCol","pCol","components","globalConfig","getConfig","FormCreate","component","_id","get$FormCreate","margeGlobal","_options","sumbitBtn","show","document","querySelector","body","required","default","option","buttonProps","resetProps","formCreate","methods","_buttonProps","_resetProps","beforeCreate","$options","propsData","api","beforeDestroy","$FormCreate","bindAttr","version","ui","$vm","$data","$mount","params","$parent","_opt","appendChild","$el","$formCreate","mount","remove","removeChild","destroy","$destroy","makers","install","_installedFormCreate"],"mappings":"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"}