{"version":3,"file":"form-create.min.js","sources":["../../../node_modules/@vue/babel-helper-vue-jsx-merge-props/dist/helper.js","../../utils/src/index.js","../src/components/checkbox/index.jsx","../src/core/config.js","../../core/src/components/formCreate.js","../../core/src/core/mergeJsxProps.js","../../core/src/factory/vData.js","../../core/src/factory/creator.js","../../core/src/core/util.js","../../core/src/factory/maker.js","../../core/src/factory/vNode.js","../../core/src/factory/parser.js","../../core/src/core/render.js","../../core/src/core/api.js","../../core/src/core/handle.js","../../core/src/components/fragment.jsx","../../core/src/core/index.js","../../core/src/factory/form.js","../src/core/modal.js","../../../node_modules/style-inject/dist/style-inject.es.js","../src/components/frame/index.jsx","../src/components/radio/index.jsx","../src/components/select/index.jsx","../src/components/tree/index.jsx","../src/components/upload/index.jsx","../src/components/group/index.jsx","../src/components/index.js","../src/parsers/checkbox/parser.js","../src/parsers/checkbox/index.js","../src/parsers/datePicker/parser.js","../src/parsers/datePicker/index.js","../src/parsers/frame/parser.js","../src/parsers/frame/index.js","../src/parsers/hidden/index.js","../src/parsers/input/parser.js","../src/parsers/input/index.js","../src/parsers/radio/parser.js","../src/parsers/radio/index.js","../src/parsers/select/parser.js","../src/parsers/select/index.js","../src/parsers/slider/parser.js","../src/parsers/slider/index.js","../src/parsers/switch/parser.js","../src/parsers/switch/index.js","../src/parsers/tree/parser.js","../src/parsers/tree/index.js","../src/parsers/upload/parser.js","../src/parsers/upload/index.js","../src/parsers/index.js","../src/core/nodes.js","../src/core/form.js","../src/makers/datePicker.js","../src/makers/frame.js","../src/makers/input.js","../src/makers/select.js","../src/makers/slider.js","../src/makers/timePicker.js","../src/makers/tree.js","../src/makers/upload.js","../src/makers/index.js","../src/core/index.js","../src/index.js"],"sourcesContent":["\"use strict\";function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var normalMerge=[\"attrs\",\"props\",\"domProps\"],toArrayMerge=[\"class\",\"style\",\"directives\"],functionalMerge=[\"on\",\"nativeOn\"],mergeJsxProps=function(a){return a.reduce(function(c,a){for(var b in a)if(!c[b])c[b]=a[b];else if(-1!==normalMerge.indexOf(b))c[b]=_extends({},c[b],a[b]);else if(-1!==toArrayMerge.indexOf(b)){var d=c[b]instanceof Array?c[b]:[c[b]],e=a[b]instanceof Array?a[b]:[a[b]];c[b]=d.concat(e)}else if(-1!==functionalMerge.indexOf(b)){for(var f in a[b])if(c[b][f]){var g=c[b][f]instanceof Array?c[b][f]:[c[b][f]],h=a[b][f]instanceof Array?a[b][f]:[a[b][f]];c[b][f]=g.concat(h)}else c[b][f]=a[b][f];}else if(\"hook\"==b)for(var i in a[b])c[b][i]=c[b][i]?mergeFn(c[b][i],a[b][i]):a[b][i];else c[b]=a[b];return c},{})},mergeFn=function(a,b){return function(){a&&a.apply(this,arguments),b&&b.apply(this,arguments)}};module.exports=mergeJsxProps;\n","import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n\nexport function isValidChildren(children) {\n    return Array.isArray(children) && children.length > 0;\n}\n\nexport const _toString = Object.prototype.toString;\n\nexport function isUndef(v) {\n    return v === undefined || v === null\n}\n\nexport function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n\nexport function extend(to, _from) {\n    for (var key in _from) {\n        $set(to, key, _from[key]);\n    }\n    return to\n}\n\nexport function debounce(fn, wait) {\n    var timeout = null;\n    return function (...arg) {\n        if (timeout !== null)\n            clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...arg), wait);\n    }\n}\n\nexport function isType(arg, type) {\n    return _toString.call(arg) === '[object ' + type + ']'\n}\n\nexport function isDate(arg) {\n    return isType(arg, 'Date');\n}\n\nexport function isPlainObject(arg) {\n    return isType(arg, 'Object');\n}\n\nexport function isFunction(arg) {\n    return isType(arg, 'Function');\n}\n\nexport function isString(arg) {\n    return isType(arg, 'String');\n}\n\nexport function isBool(arg) {\n    return isType(arg, 'Boolean');\n}\n\nexport function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n\nexport function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n)\n}\n\nexport function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ((isUndef(value) || value === '' ? [] : [value])\n        );\n}\n\nexport function isElement(arg) {\n    return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !isPlainObject(arg)\n}\n\nexport function deepExtend(origin, target = {}) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || isPlainObject(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                deepExtend(origin[key], clone);\n            } else {\n                $set(origin, key, clone);\n            }\n        }\n    }\n    return origin\n}\n\nexport function deepExtendArgs(origin, ...lst) {\n    lst.forEach(target => {\n        origin = deepExtend(origin, target);\n    });\n    return origin;\n}\n\nlet id = 0;\n\nexport function uniqueId() {\n    return ++id\n}\n\nexport function toDefSlot(slot, $h) {\n    return [slot && isFunction(slot) ? slot($h) : slot]\n}\n\n\nexport function timeStampToDate(timeStamp) {\n    if (isDate(timeStamp))\n        return timeStamp;\n    else {\n        let date = new Date(timeStamp);\n        return date.toString() === 'Invalid Date' ? timeStamp : date;\n    }\n}\n\nexport function preventDefault(e) {\n    e.preventDefault();\n}\n\nexport function dateFormat(fmt, date = new Date) {\n    let o = {\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n    for (let k in o)\n        if (new RegExp('(' + k + ')').test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1)\n                ? (o[k])\n                : (('00' + o[k]).substr(('' + o[k]).length)));\n    return fmt\n}\n\nexport function hasSlot(children, slotName) {\n    return children.length !== 0 && children.some(child => {\n        if (child.data) {\n            if ((!child.data.slot && slotName === 'default') || (child.data.slot === slotName))\n                return true;\n        } else if (slotName === 'default')\n            return true;\n        return false;\n    })\n}\n\nexport function errMsg(i) {\n\n    return '\\n\\x67\\x69\\x74\\x68\\x75\\x62\\x3a\\x68\\x74\\x74\\x70' +\n        '\\x73\\x3a\\x2f\\x2f\\x67\\x69\\x74\\x68\\x75\\x62\\x2e\\x63\\x6f' +\n        '\\x6d\\x2f\\x78\\x61\\x62\\x6f\\x79\\x2f\\x66\\x6f\\x72\\x6d\\x2d' +\n        '\\x63\\x72\\x65\\x61\\x74\\x65\\n\\x64\\x6f\\x63\\x75\\x6d\\x65' +\n        '\\x6e\\x74\\x3a\\x68\\x74\\x74\\x70\\x3a\\x2f\\x2f\\x77\\x77\\x77' +\n        '\\x2e\\x66\\x6f\\x72\\x6d\\x2d\\x63\\x72\\x65\\x61\\x74\\x65\\x2e' +\n        '\\x63\\x6f\\x6d' + (i || '');\n}\n","import {uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-ivu-checkbox';\n\nexport default {\n    name: NAME,\n    props: {\n        options: {\n            type: Array,\n            default: () => []\n        },\n        children: {\n            type: Array,\n            default: () => []\n        },\n        ctx: {\n            type: Object,\n            default: () => ({})\n        },\n        value: {\n            type: Array,\n            default: () => []\n        },\n    },\n    watch: {\n        value() {\n            this.update();\n        }\n    },\n    data() {\n        return {\n            trueValue: [],\n            unique: uniqueId()\n        }\n    },\n    methods: {\n        onInput(n) {\n            this.$emit('input', this.options.filter((opt) => n.indexOf(opt.label) !== -1).map((opt) => opt.value));\n        },\n        update() {\n            this.trueValue = this.value ? this.options.filter((opt) => this.value.indexOf(opt.value) !== -1)\n                .map((option) => option.label) : [];\n        }\n    },\n    created() {\n        this.update();\n    },\n    render() {\n        return <CheckboxGroup {...this.ctx} v-model={this.trueValue}\n            on-input={this.onInput}>{this.options.map((opt, index) => {\n                const props = {...opt};\n                delete props.value;\n                return <Checkbox {...{props}} key={NAME + index + this.unique}/>\n            }).concat(this.chlidren)}</CheckboxGroup>\n    }\n}\n","import iview from 'iview';\n\n\nexport const iview2 = {\n    _v: 2,\n    resetBtnType: 'ghost',\n    resetBtnIcon: 'refresh',\n    submitBtnIcon: 'ios-upload',\n    fileIcon: 'document-text',\n    fileUpIcon: 'folder',\n    imgUpIcon: 'image',\n    infoIcon: 'ios-information-outline',\n    removeIcon:'ios-minus-outline',\n    addIcon:'ios-plus-outline',\n};\n\nexport const iview3 = {\n    _v: 3,\n    resetBtnType: 'default',\n    resetBtnIcon: 'md-refresh',\n    submitBtnIcon: 'ios-share',\n    fileIcon: 'md-document',\n    fileUpIcon: 'ios-folder-open',\n    imgUpIcon: 'md-images',\n    infoIcon: 'ios-information-circle-outline',\n    removeIcon:'ios-remove-circle-outline',\n    addIcon:'ios-add-circle-outline',\n};\n\nexport const iviewConfig = (function () {\n    if (typeof iview === 'undefined') return iview2;\n    return (iview.version && iview.version.split('.')[0] > 2) ? iview3 : iview2;\n}());\n\n\nexport default function getConfig() {\n    return {\n        form: {\n            inline: false,\n            labelPosition: 'right',\n            labelWidth: 125,\n            showMessage: true,\n            autocomplete: 'off',\n            size: undefined,\n        },\n        row: {\n            gutter: 0,\n            type: undefined,\n            align: undefined,\n            justify: undefined,\n            className: undefined\n        },\n        info: {\n            type: 'poptip',\n            trigger: 'hover',\n            placement: 'top-start',\n            wordWrap: true,\n            icon: iviewConfig.infoIcon\n        },\n        submitBtn: {\n            type: 'primary',\n            size: 'large',\n            shape: undefined,\n            long: true,\n            htmlType: 'button',\n            disabled: false,\n            icon: iviewConfig.submitBtnIcon,\n            innerText: '提交',\n            loading: false,\n            show: true,\n            col: undefined,\n            click: undefined,\n        },\n        resetBtn: {\n            type: iviewConfig.resetBtnType,\n            size: 'large',\n            shape: undefined,\n            long: true,\n            htmlType: 'button',\n            disabled: false,\n            icon: iviewConfig.resetBtnIcon,\n            innerText: '重置',\n            loading: false,\n            show: false,\n            col: undefined,\n            click: undefined,\n        },\n    };\n}\n","import {deepExtend} from '@form-create/utils';\n\nexport const formCreateName = 'FormCreate';\n\nexport default function $FormCreate(FormCreate, components) {\n    return {\n        name: formCreateName,\n        componentName: formCreateName,\n        props: {\n            rule: {\n                type: Array,\n                required: true,\n                default: () => {\n                    return {};\n                }\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                },\n                required: false\n            },\n            value: Object\n        },\n        data: () => {\n            return {\n                formData: undefined,\n                buttonProps: undefined,\n                resetProps: undefined,\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n            };\n        },\n        components,\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _buttonProps(props) {\n                this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n            },\n            _resetProps(props) {\n                this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n            },\n            _refresh() {\n                ++this.unique;\n            }\n        },\n        watch: {\n            option: '_refresh',\n            rule(n) {\n                this.formCreate.handle.reloadRule(n);\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(rule, option);\n            this.formCreate.beforeCreate(this);\n        },\n        created() {\n            this.formCreate.created();\n            this.$f = this.formCreate.api();\n            this.$emit('input', this.$f);\n        },\n        mounted() {\n            const formCreate = this.formCreate;\n\n            formCreate.mounted();\n            this.$emit('input', this.$f);\n\n        },\n        beforeDestroy() {\n            this.formCreate.handle.reloadRule([]);\n            this.formCreate.handle.$render.clearCacheAll();\n        },\n    }\n}\n","const normalMerge = ['attrs', 'props', 'domProps'];\nconst toArrayMerge = ['class', 'style', 'directives'];\nconst functionalMerge = ['on', 'nativeOn'];\n\nconst mergeJsxProps = (objects, initial) =>\n    objects.reduce((a, b) => {\n        for (const key in b) {\n            if (a[key]) {\n                if (normalMerge.indexOf(key) !== -1) {\n                    a[key] = {...a[key], ...b[key]}\n                } else if (toArrayMerge.indexOf(key) !== -1) {\n                    const arrA = a[key] instanceof Array ? a[key] : [a[key]];\n                    const arrB = b[key] instanceof Array ? b[key] : [b[key]];\n                    a[key] = [...arrA, ...arrB]\n                } else if (functionalMerge.indexOf(key) !== -1) {\n                    for (const event in b[key]) {\n                        if (a[key][event]) {\n                            const arrA = a[key][event] instanceof Array ? a[key][event] : [a[key][event]];\n                            const arrB = b[key][event] instanceof Array ? b[key][event] : [b[key][event]];\n                            a[key][event] = [...arrA, ...arrB]\n                        } else {\n                            a[key][event] = b[key][event]\n                        }\n                    }\n                } else if (key === 'hook') {\n                    for (let hook in b[key]) {\n                        if (a[key][hook]) {\n                            a[key][hook] = mergeFn(a[key][hook], b[key][hook])\n                        } else {\n                            a[key][hook] = b[key][hook]\n                        }\n                    }\n                } else {\n                    a[key] = b[key]\n                }\n            } else {\n                a[key] = b[key]\n            }\n        }\n        return a\n    }, initial);\n\nconst mergeFn = (fn1, fn2) =>\n    function () {\n        fn1 && fn1.apply(this, arguments);\n        fn2 && fn2.apply(this, arguments);\n    };\n\nexport default mergeJsxProps\n","import {isPlainObject, isUndef, toString} from '@form-create/utils';\nimport mergeJsxProps from '../core/mergeJsxProps';\n\nfunction defVData() {\n    return {\n        // class: {},\n        // style: {},\n        // attrs: {},\n        props: {},\n        // domProps: {},\n        on: {},\n        // nativeOn: {},\n        // directives: [],\n        // scopedSlots: {},\n        // slot: undefined,\n        // key: undefined,\n        // ref: undefined\n    };\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    merge(props) {\n        mergeJsxProps([props], this._data);\n        return this;\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            this.merge({class: classList});\n        } else if (isPlainObject(classList)) {\n            this.merge(classList);\n        } else {\n            this.merge({class: {[toString(classList)]: !!status}});\n        }\n\n        return this;\n    }\n\n    init() {\n        this._data = defVData();\n        return this;\n    }\n\n    get() {\n        const data = Object.keys(this._data).reduce((initial, key) => {\n            const value = this._data[key];\n            if (value === undefined) return initial;\n            if (Array.isArray(value) && !value.length) return initial;\n            if (isPlainObject(value) && !Object.keys(value).length && key !== 'props') return initial;\n\n            initial[key] = value;\n            return initial;\n        }, {});\n        this.init();\n        return data;\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style', 'directives'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        this.merge({[key]: val});\n        return this;\n    };\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n        if (isPlainObject(obj)) {\n            this.merge({[key]: obj})\n        } else {\n            this.merge({[key]: {[toString(obj)]: val}})\n        }\n\n        return this;\n    };\n});\n\nexport const vdataField = objList.concat(keyList, 'class');\n","import {$set, extend, isFunction, isPlainObject} from '@form-create/utils';\nimport VData from './vData';\n\nfunction baseRule() {\n    return {\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        control: [],\n        emit: [],\n        template: undefined,\n        emitPrefix: undefined,\n        native: undefined,\n        info: undefined,\n    };\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props);\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type)) type(maker);\n        else maker.props(typeName, type);\n        return maker;\n    };\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n        extend(this._data, baseRule());\n        extend(this._data, {type, title, field, value});\n        if (isPlainObject(props)) this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this;\n    }\n\n    getRule() {\n        return this._data;\n    }\n\n    event(...args) {\n        this.on(...args);\n        return this;\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'value', 'name', 'title', 'native', 'info', 'hidden', 'visibility', 'inject', 'model'];\n\nkeyAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (value) {\n        $set(this._data, attr, value);\n        return this;\n    };\n});\n\nconst objAttrs = ['col'];\n\nobjAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this._data, attr, extend(this._data[attr], opt));\n        return this;\n    };\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit', 'control'];\n\narrAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this._data, attr, this._data[attr].concat(opt));\n        return this;\n    };\n});\n","import Creator from '../factory/creator';\nimport {isFunction, isString, isUndef, isValidChildren} from '@form-create/utils';\n\nexport function toJson(obj) {\n    return JSON.stringify(obj, function (key, val) {\n        if (val instanceof Creator) {\n            return val.getRule();\n        }\n\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== 'function') {\n            return val;\n        }\n        if (val.__inject)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n\n        return '' + val;\n    });\n}\n\n\nexport function parseJson(json) {\n    return JSON.parse(json, function (k, v) {\n        if (isUndef(v)) return v;\n        if (v.indexOf && v.indexOf('function') > -1) {\n            try {\n                return eval('(function(){return ' + v + ' })()')\n            } catch (e) {\n                console.error(`[form-create]解析失败:${v}`);\n                return undefined;\n            }\n        }\n        return v;\n    });\n}\n\nexport function enumerable(value) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false\n    }\n}\n\nexport function copyRule(rule) {\n    return copyRules([rule])[0];\n}\n\nexport function copyRules(rules) {\n    return rules.map(rule => {\n        if (isString(rule)) return rule;\n        let r;\n        if (isFunction(rule.getRule)) {\n            r = new Creator();\n            r._data = {...rule._data};\n            if (r._data.field && r._data.value === undefined)\n                r.value(null);\n            if (isValidChildren(r._data.children)) {\n                r._data.children = copyRules(r._data.children);\n            }\n        } else {\n            r = {...rule};\n            if (r.field && r.value === undefined) r.value = null;\n            if (isValidChildren(r.children))\n                r.children = copyRules(r.children);\n        }\n        return r;\n    })\n}\n","import Creator, {creatorFactory} from './creator';\nimport {parseJson, enumerable} from '../core/util';\nimport {extend, isPlainObject, isString, isValidChildren} from '@form-create/utils';\n\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    let maker = {};\n\n    extend(maker, {\n        create,\n        createTmp\n    });\n    maker.template = createTmp;\n    maker.parse = parse;\n\n    return maker;\n}\n\nfunction parse(rule, toMaker = false) {\n    if (isString(rule)) rule = parseJson(rule);\n\n    if (rule instanceof Creator) return toMaker ? rule : rule.getRule();\n    if (isPlainObject(rule)) {\n        const maker = ruleToMaker(rule);\n        return toMaker ? maker : maker.getRule();\n    } else if (!Array.isArray(rule)) return rule;\n    else {\n        const rules = rule.map(r => parse(r, toMaker));\n        Object.defineProperties(rules, {\n            find: enumerable(findField),\n            model: enumerable(model)\n        });\n\n        return rules;\n    }\n}\n\nfunction findField(field, origin) {\n    let children = [];\n    for (let i in this) {\n        const rule = this[i] instanceof Creator ? this[i]._data : this[i];\n        if (rule.field === field) return origin === true ? rule : this[i];\n        if (isValidChildren(rule.children)) children = children.concat(rule.children);\n    }\n    if (children.length > 0) return findField.call(children, field);\n}\n\nfunction model(formData) {\n    Object.keys(formData).forEach(field => {\n        const rule = this.find(field, true);\n        if (rule) rule.value = formData[field];\n    });\n}\n\nfunction ruleToMaker(rule) {\n    const maker = new Creator();\n    Object.keys(rule).forEach(key => {\n        maker._data[key] = rule[key];\n    });\n    return maker;\n}\n","import {isFunction, isString, toString} from '@form-create/utils';\n\nfunction parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data;\n}\n\nfunction getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || []);\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        if (vm)\n            this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node;\n    }\n\n    static use(nodes) {\n        Object.keys(nodes).forEach((k) => {\n            VNode.prototype[toString(k).toLocaleLowerCase()] = VNode.prototype[k] = function (data, VNodeFn) {\n                return this.make(nodes[k], data, VNodeFn);\n            };\n        });\n    }\n}\n\nVNode.use({fragment: 'fcFragment'});\n","import VData from './vData';\nimport {toString, uniqueId} from '@form-create/utils';\nimport VNode from './vNode';\n\nexport default class BaseParser {\n\n    constructor(handle, rule, id) {\n        this.rule = rule;\n        this.vData = new VData;\n        this.vNode = new VNode();\n        this.id = id;\n        this.watch = [];\n        this.originType = rule.type;\n        this.type = toString(rule.type).toLocaleLowerCase();\n        this.isDef = true;\n        this.el = undefined;\n\n        if (!rule.field) {\n            this.field = '_def_' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n        this.name = rule.name;\n\n        this.key = 'key_' + id;\n        this.refName = '__' + this.field + this.id;\n        this.formItemRefName = 'fi' + this.refName;\n        this.root = [];\n        this.ctrlRule = null;\n        this.modelEvent = 'input';\n\n        this.update(handle);\n        this.init();\n    }\n\n    update(handle) {\n        this.$handle = handle;\n        this.$render = handle.$render;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.vNode.setVm(this.vm);\n        this.deleted = false;\n    }\n\n    init() {\n    }\n\n    toFormValue(value) {\n        return value\n    }\n\n    toValue(formValue) {\n        return formValue;\n    }\n}\n","import {_vue as Vue} from './index';\nimport {debounce, errMsg, isFunction, isString, isUndef, isValidChildren} from '@form-create/utils';\nimport VNode from '../factory/vNode';\nimport VData, {vdataField} from '../factory/vData';\n\n\nconst $de = debounce((fn) => fn(), 1);\n\nexport default class Render {\n    constructor(handle) {\n        this.$handle = handle;\n        this.fc = handle.fc;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.$form = handle.$form;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.cache = {};\n        this.renderList = {};\n    }\n\n    clearCache(parser, clear = true) {\n        if (!this.cache[parser.id]) return;\n        if (this.cacheStatus(parser))\n            this.$handle.refresh();\n        const parent = this.cache[parser.id].parent;\n        this.cache[parser.id] = null;\n        if (parent && clear)\n            this.clearCache(parent, clear);\n    }\n\n    clearCacheAll() {\n        this.cache = {};\n    }\n\n    setCache(parser, vnode, parent) {\n        this.cache[parser.id] = {\n            vnode,\n            use: false,\n            parent\n        };\n    }\n\n    cacheStatus(parser) {\n        return this.cache[parser.id] && (this.cache[parser.id].use === true || this.cache[parser.id].parent);\n    }\n\n    getCache(parser) {\n        const cache = this.cache[parser.id];\n        cache.use = true;\n        return cache.vnode;\n    }\n\n    initOrgChildren() {\n        const parsers = this.$handle.parsers;\n        this.orgChildren = Object.keys(parsers).reduce((initial, id) => {\n            const children = parsers[id].rule.children;\n            initial[id] = isValidChildren(children) ? [...children] : [];\n\n            return initial;\n        }, {});\n    }\n\n    run() {\n        if (!this.vm.isShow)\n            return;\n\n        this.$form.beforeRender();\n\n        const vn = this.$handle.sortList.map((id) => {\n            let parser = this.$handle.parsers[id];\n            if (parser.type === 'hidden') return;\n            return this.renderParser(parser);\n        }).filter((val) => val !== undefined);\n\n        return this.$form.render(vn);\n    }\n\n    setGlobalConfig(parser) {\n        if (!this.options.global) return;\n        const global = this.options.global;\n\n        if (global['*']) {\n            this.toData(parser, global['*']);\n        }\n        if (global[parser.type]) {\n            this.toData(parser, global[parser.type]);\n        } else if (global[parser.originType]) {\n            this.toData(parser, global[parser.originType]);\n        }\n    }\n\n    renderTemplate(parser) {\n        const {id, rule, key} = parser;\n        if (isUndef(Vue.compile)) {\n            console.error('使用的 Vue 版本不支持 compile' + errMsg());\n            return [];\n        }\n\n        if (!this.renderList[id]) {\n            let vm = rule.vm;\n            if (isUndef(rule.vm))\n                vm = new Vue;\n            else if (isFunction(rule.vm))\n                vm = rule.vm(this.$handle.getInjectData(rule));\n\n            this.renderList[id] = {\n                vm,\n                template: Vue.compile(rule.template)\n            };\n\n        }\n\n        const {vm, template} = this.renderList[id];\n\n        setTemplateProps(vm, parser, this.$handle.fCreateApi);\n\n        vm.$off('input');\n        vm.$on('input', (value) => {\n            this.onInput(parser, value);\n        });\n\n        const vn = template.render.call(vm);\n\n        if (isUndef(vn.data)) vn.data = {};\n        vn.key = key;\n        return vn;\n    }\n\n    renderParser(parser, parent) {\n        if (!this.cache[parser.id] || parser.type === 'template') {\n\n            parser.vData.get();\n            this.setGlobalConfig(parser);\n\n            let {type, rule} = parser, form = this.$form, vn;\n\n            if (type === 'template' && rule.template) {\n                vn = this.renderTemplate(parser);\n\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            } else if (!this.$handle.isNoVal(parser)) {\n                const children = this.renderChildren(parser);\n                vn = parser.render ? parser.render(children) : this.defaultRender(parser, children);\n            } else {\n                vn = this.defaultRender(parser, this.renderChildren(parser));\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            }\n            if (rule.native !== true)\n                vn = form.container(vn, parser);\n            this.setCache(parser, vn, parent);\n            return vn;\n        }\n\n        return this.getCache(parser);\n    }\n\n    toData(parser, data) {\n        vdataField.forEach((key) => {\n            if (data[key] !== undefined)\n                parser.vData[key](data[key]);\n        });\n\n        return parser.vData;\n    }\n\n    parserToData(parser) {\n        return this.toData(parser, parser.rule);\n    }\n\n    inputVData(parser, custom) {\n        const {refName, key} = parser;\n\n        this.parserToData(parser);\n\n        let data = parser.vData\n            .ref(refName).key('fc_item' + key).props('formCreate', this.$handle.fCreateApi)\n            .on('fc.subForm', (subForm) => this.$handle.addSubForm(parser, subForm));\n\n        if (!custom)\n            data.on(this.$handle.modelEvent(parser), (value) => {\n                this.onInput(parser, value);\n            }).props('value', this.$handle.getFormData(parser));\n\n        this.$form.inputVData && this.$form.inputVData(parser, custom);\n\n        return data;\n    }\n\n    onInput(parser, value) {\n        this.$handle.onInput(parser, value);\n    }\n\n    renderChildren(parser) {\n        const {children} = parser.rule, orgChildren = this.orgChildren[parser.id];\n\n        if (!isValidChildren(children)) {\n            orgChildren.forEach(child => {\n                if (!isString(child) && child.__fc__) {\n                    this.$handle.removeField(child.__fc__);\n                }\n            });\n            this.orgChildren[parser.id] = [];\n            return [];\n        }\n\n        this.orgChildren[parser.id].forEach(child => {\n            if (children.indexOf(child) === -1 && !isString(child) && child.__fc__) {\n                this.$handle.removeField(child.__fc__);\n            }\n        });\n\n        return children.map(child => {\n            if (isString(child)) return child;\n            if (child.__fc__) {\n                return this.renderParser(child.__fc__, parser);\n            }\n            if (child.type)\n                $de(() => this.$handle.reloadRule());\n        });\n\n    }\n\n    defaultRender(parser, children) {\n        const vdata = this.inputVData(parser);\n        if (this.vNode[parser.type])\n            return this.vNode[parser.type](vdata, children);\n        if (this.vNode[parser.originType])\n            return this.vNode[parser.originType](vdata, children);\n        return this.vNode.make(parser.originType, vdata, children);\n    }\n}\n\nfunction setTemplateProps(vm, parser, fApi) {\n    if (!vm.$props)\n        return;\n    const {rule} = parser;\n    const keys = Object.keys(vm.$props);\n    keys.forEach(key => {\n        if (rule.props[key] !== undefined)\n            vm.$props[key] = rule.props[key];\n    });\n\n    if (keys.indexOf('value') !== -1) {\n        vm.$props.value = parser.rule.value;\n    }\n    vm.$props.formCreate = fApi;\n}\n","import {$set, deepExtend, errMsg, isFunction, isPlainObject} from '@form-create/utils';\nimport {toJson} from './util';\n\n\nexport default function Api(h) {\n\n    function tidyFields(fields, all = false) {\n        if (!fields)\n            fields = all ? Object.keys(h.fieldList) : h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    return {\n        formData() {\n            const parsers = h.fieldList;\n\n            return Object.keys(parsers).reduce((initial, id) => {\n                const parser = parsers[id];\n                initial[parser.field] = deepExtend({}, {value: parser.rule.value}).value;\n                return initial;\n            }, {});\n        },\n        getValue(field) {\n            const parser = h.fieldList[field];\n            if (!parser) return;\n            return deepExtend({}, {value: parser.rule.value}).value;\n        },\n        setValue(field, value) {\n            let formData = field;\n            if (!isPlainObject(field))\n                formData = {[field]: value};\n            Object.keys(formData).forEach(key => {\n                const parser = h.fieldList[key];\n                if (!parser) return;\n                parser.rule.value = formData[key];\n            });\n        },\n        changeValue(field, value) {\n            this.setValue(field, value);\n        },\n        changeField(field, value) {\n            this.setValue(field, value);\n        },\n        removeField(field) {\n            let parser = h.getParser(field);\n            if (!parser)\n                return;\n            let index = parser.root.indexOf(parser.rule.__origin__);\n            if (index === -1)\n                return;\n            parser.root.splice(index, 1);\n            if (h.sortList.indexOf(parser.id) === -1)\n                this.reload();\n\n            return parser.rule.__origin__;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = h.sortList.length, rules = h.rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                    index = parser.rule.children.length;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                }\n            }\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = 0, rules = h.rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                }\n            }\n            rules.splice(index, 0, rule);\n        },\n        hidden(hidden, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'hidden', !!hidden);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.hidden;\n        },\n        visibility(visibility, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'visibility', !!visibility);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        visibilityStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.visibility;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.vm.$set(parser.rule.props, 'disabled', !!disabled);\n            });\n        },\n        model() {\n            return Object.keys(h.trueData).reduce((initial, key) => {\n                initial[key] = h.trueData[key].rule;\n                return initial;\n            }, {});\n        },\n        component() {\n            return Object.keys(h.customData).reduce((initial, key) => {\n                initial[key] = h.customData[key].rule;\n                return initial;\n            }, {});\n        },\n        bind() {\n            let bind = {}, properties = {};\n            Object.keys(h.fieldList).forEach((field) => {\n                const parser = h.fieldList[field];\n                properties[field] = {\n                    get() {\n                        return parser.rule.value;\n                    },\n                    set(value) {\n                        parser.rule.value = value;\n                    },\n                    enumerable: true,\n                    configurable: true\n                };\n            });\n            Object.defineProperties(bind, properties);\n            return bind;\n        },\n        submitBtnProps: (props = {}) => {\n            h.vm._buttonProps(props);\n        },\n        resetBtnProps: (props = {}) => {\n            h.vm._resetProps(props);\n        },\n        set: (node, field, value) => {\n            h.vm.$set(node, field, value);\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            deepExtend(h.options, options);\n            this.refresh(true);\n        },\n        onSubmit(fn) {\n            this.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            const parser = h.getParser(field);\n            if (parser) {\n                h.$render.clearCache(parser, true);\n                h.refresh();\n            }\n        },\n        refresh: (clear) => {\n            if (clear)\n                h.$render.clearCacheAll();\n            h.refresh();\n        },\n        hideForm: (isShow) => {\n            h.vm.isShow = !isShow;\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule: (id, rule, cover) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                cover ? Object.keys(rule).forEach(key => {\n                    parser.rule[key] = rule[key];\n                }) : deepExtend(parser.rule, rule);\n                return parser.rule.__origin__;\n            }\n        },\n        getRule: (id) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                return parser.rule;\n            }\n        },\n        updateRules(rules, cover) {\n            Object.keys(rules).forEach(id => {\n                this.updateRule(id, rules[id], cover);\n            })\n        },\n        updateValidate(id, validate, merge) {\n            const parser = h.getParser(id);\n            if (parser) {\n                parser.rule.validate = merge ? parser.rule.validate.concat(validate) : validate;\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                this.updateValidate(id, validates[id], merge);\n            })\n        },\n        method(id, name) {\n            const el = this.el(id);\n            if (!el || !el[name])\n                throw new Error('方法不存在' + errMsg());\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        toJson() {\n            return toJson(this.rule);\n        },\n        on(...args) {\n            h.vm.$on(...args);\n        },\n        once(...args) {\n            h.vm.$once(...args);\n        },\n        off(...args) {\n            h.vm.$off(...args);\n        },\n        trigger(id, event, ...args) {\n            const el = this.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const parser = h.getParser(id);\n            if (parser) return parser.el;\n        },\n        validate(callback) {\n            let state = false;\n            let subForm = {\n                ...{\n                    ___this: {\n                        validate(call) {\n                            h.$form.validate((valid) => {\n                                call && call(valid);\n                            });\n                        }\n                    }\n                }, ...h.subForm\n            };\n            let keys = Object.keys(subForm), len = keys.length, subLen;\n\n            const validFn = (valid, field) => {\n                if (valid) {\n                    if (subLen > 1) subLen--;\n                    else if (len > 1) len--;\n                    else callback(true);\n                } else {\n                    if (!state) {\n                        callback(false);\n                        state = true;\n                    }\n                    field && this.clearValidateState(field, false);\n                }\n            };\n\n            keys.forEach(field => {\n                let sub = subForm[field];\n                if (Array.isArray(sub)) {\n                    subLen = sub.length;\n                    sub.forEach(form => {\n                        form.validate((v) => validFn(v, field))\n                    })\n                } else if (sub) {\n                    subLen = 1;\n                    sub.validate(validFn)\n                }\n\n            });\n\n        },\n        validateField: (field, callback) => {\n            if (!h.fieldList[field])\n                return;\n            h.$form.validateField(field, callback);\n        },\n        resetFields(fields) {\n            let parsers = h.fieldList;\n            tidyFields(fields, true).forEach(field => {\n                let parser = parsers[field];\n                if (!parser) return;\n\n                if (parser.type === 'hidden') return;\n                h.$form.resetField(parser);\n                h.refreshControl(parser);\n                h.$render.clearCache(parser, true);\n            });\n        },\n        submit(successFn, failFn) {\n            this.validate((valid) => {\n                if (valid) {\n                    let formData = this.formData();\n                    if (isFunction(successFn))\n                        successFn(formData, this);\n                    else {\n                        h.options.onSubmit && h.options.onSubmit(formData, this);\n                        h.fc.$emit('on-submit', formData, this);\n                    }\n                } else {\n                    failFn && failFn(this)\n                }\n            });\n        },\n        clearValidateState(fields, clearSub = true) {\n            tidyFields(fields).forEach(field => {\n                if (clearSub) this.clearSubValidateState(field);\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.$form.clearValidateState(parser);\n            });\n        },\n        clearSubValidateState(fields) {\n            tidyFields(fields).forEach(field => {\n                const subForm = h.subForm[field];\n                if (subForm) {\n                    if (Array.isArray(subForm)) {\n                        subForm.forEach(form => {\n                            form.clearValidateState();\n                        })\n                    } else if (subForm) {\n                        subForm.clearValidateState();\n                    }\n                }\n            })\n        },\n        getSubForm(field) {\n            return h.subForm[field];\n        },\n        btn: {\n            loading: (loading = true) => {\n                h.vm._buttonProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._buttonProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._buttonProps({show: !!isShow});\n            }\n        },\n        resetBtn: {\n            loading: (loading = true) => {\n                h.vm._resetProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._resetProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._resetProps({show: !!isShow});\n            }\n        },\n        closeModal: (field) => {\n            const parser = h.fieldList[field];\n            parser && parser.closeModel && parser.closeModel();\n        }\n    };\n}\n","import {\n    $del,\n    $set, deepExtend,\n    errMsg,\n    extend,\n    isString,\n    isUndef,\n    isValidChildren,\n    isPlainObject,\n    toLine,\n    toString,\n    uniqueId,\n    isFunction\n} from '@form-create/utils';\nimport BaseParser from '../factory/parser';\nimport Render from './render';\nimport Api from './api';\nimport {copyRule, enumerable} from './util';\n\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport default class Handle {\n\n    constructor(fc) {\n        const {vm, rules, options} = fc;\n\n        this.watching = false;\n        this.vm = vm;\n        this.fc = fc;\n        this.options = options;\n\n        this.validate = {};\n        this.formData = {};\n        this.subForm = {};\n\n        this.fCreateApi = undefined;\n\n        this.__init(rules);\n        this.$form = new fc.drive.formRender(this);\n        this.$render = new Render(this);\n\n        this.loadRule(this.rules, false);\n\n        this.$render.initOrgChildren();\n\n        this.$form.init();\n    }\n\n    __init(rules) {\n        this.fieldList = {};\n        this.trueData = {};\n        this.parsers = {};\n        this.customData = {};\n        this.sortList = [];\n        this.rules = rules;\n        this.origin = [...this.rules];\n        this.changeStatus = false;\n    }\n\n    modelEvent(parser) {\n        const modelList = this.fc.modelEvents;\n        return modelList[parser.type] || modelList[parser.originType] || parser.rule.model || parser.modelEvent;\n    }\n\n    loadRule(rules, child) {\n        rules.map((_rule, index) => {\n            if (child && isString(_rule)) return;\n\n            if (!_rule.type)\n                return console.error('未定义生成规则的 type 字段' + errMsg());\n\n            let parser;\n\n            if (_rule.__fc__) {\n                parser = _rule.__fc__;\n\n                //规则在其他 form-create 中使用,自动浅拷贝\n                if (parser.vm !== this.vm && !parser.deleted) {\n                    _rule = copyRule(_rule);\n                    rules[index] = _rule;\n                    parser = this.createParser(this.parseRule(_rule));\n                } else {\n                    parser.update(this);\n                    let rule = parser.rule;\n                    this.parseOn(rule);\n                    this.parseProps(rule);\n                }\n            } else {\n                parser = this.createParser(this.parseRule(_rule));\n            }\n\n            let children = parser.rule.children, rule = parser.rule;\n            if (!this.notField(parser.field))\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            this.setParser(parser);\n\n            if (!_rule.__fc__) {\n                bindParser(_rule, parser);\n            }\n            if (isValidChildren(children)) {\n                this.loadRule(children, true);\n            }\n\n            if (!child) {\n                this.sortList.push(parser.id);\n            }\n\n            if (!this.isNoVal(parser))\n                Object.defineProperty(parser.rule, 'value', this.valueHandle(parser));\n\n            return parser;\n        }).filter(h => h).forEach(h => {\n            h.root = rules;\n        });\n    }\n\n    valueHandle(parser) {\n        return {\n            enumerable: true,\n            get: () => {\n                return parser.toValue(this.getFormData(parser));\n            },\n            set: (value) => {\n                if (this.isChange(parser, value)) {\n                    this.$render.clearCache(parser, true);\n                    this.setFormData(parser, parser.toFormValue(value));\n                    this.valueChange(parser, value);\n                    this.refresh();\n                }\n            }\n        };\n    }\n\n    createParser(rule) {\n        const id = '' + uniqueId(), parsers = this.fc.parsers, type = toString(rule.type).toLocaleLowerCase();\n\n        const Parser = (parsers[type]) ? parsers[type] : BaseParser;\n\n        return new Parser(this, rule, id);\n    }\n\n    parseRule(_rule) {\n        const def = defRule(), rule = getRule(_rule);\n\n        Object.defineProperties(rule, {\n            __origin__: enumerable(_rule)\n        });\n\n        Object.keys(def).forEach(k => {\n            if (isUndef(rule[k])) $set(rule, k, def[k]);\n        });\n\n        if (rule.field && this.options.formData[rule.field] !== undefined)\n            rule.value = this.options.formData[rule.field];\n\n        rule.options = parseArray(rule.options);\n        this.parseOn(rule);\n        this.parseProps(rule);\n\n        return rule;\n    }\n\n    parseOn(rule) {\n        this.parseInjectEvent(rule, rule.on || {});\n        if (!this.watching) {\n            this.margeEmit(rule);\n        }\n    }\n\n    margeEmit(rule) {\n        const emitEvent = this.parseEmit(rule);\n        if (Object.keys(emitEvent).length > 0) extend(rule.on, emitEvent);\n    }\n\n    parseProps(rule) {\n        this.parseInjectEvent(rule, rule.props || {});\n    }\n\n    parseInjectEvent(rule, on) {\n        if (this.options.injectEvent || rule.inject)\n            Object.keys(on).forEach(k => {\n                if (isFunction(on[k]))\n                    on[k] = this.inject(rule, on[k])\n            });\n        return on;\n    }\n\n    getInjectData(self, inject) {\n        const {option, rule} = this.vm.$options.propsData;\n        return {\n            $f: this.fCreateApi,\n            rule,\n            self: self.__origin__,\n            option,\n            inject: inject || rule.inject || {}\n        };\n    }\n\n    inject(self, _fn, inject) {\n        if (_fn.__inject) {\n            if (this.watching)\n                return _fn;\n            _fn = _fn.__origin;\n        }\n\n        const h = this;\n\n        const fn = function (...args) {\n            args.unshift(h.getInjectData(self, inject));\n            return _fn(...args);\n        };\n        fn.__inject = true;\n        fn.__origin = _fn;\n        return fn;\n    }\n\n    parseEmit(rule) {\n        let event = {}, {emit, emitPrefix, field, name} = rule;\n\n        if (!Array.isArray(emit)) return event;\n        const emitKey = emitPrefix ? emitPrefix : (field || name);\n        if (!emitKey) return event;\n\n        emit.forEach(config => {\n            let inject, eventName = config;\n            if (isPlainObject(config)) {\n                eventName = config.name;\n                inject = config.inject;\n            }\n            if (!eventName) return;\n\n            const fieldKey = toLine(`${emitKey}-${eventName}`).replace('_', '-');\n\n            const fn = (...arg) => {\n                this.vm.$emit(fieldKey, ...arg);\n            };\n            fn.__emit = true;\n            event[eventName] = (this.options.injectEvent || config.inject !== undefined) ? this.inject(rule, fn, inject) : fn;\n        });\n\n        return event;\n    }\n\n    run() {\n        if (this.vm.unique > 0)\n            return this.$render.run();\n        else {\n            this.vm.unique = 1;\n            return [];\n        }\n    }\n\n    setParser(parser) {\n        let {id, field, name, rule} = parser;\n        if (this.parsers[id])\n            return;\n        this.parsers[id] = parser;\n\n        if (name)\n            $set(this.customData, name, parser);\n\n        if (this.isNoVal(parser)) return;\n        this.fieldList[field] = parser;\n        $set(this.formData, field, parser.toFormValue(rule.value));\n        $set(this.validate, field, rule.validate || []);\n        $set(this.trueData, field, parser);\n    }\n\n    addSubForm(parser, subForm) {\n        this.subForm[parser.field] = subForm;\n    }\n\n    notField(field) {\n        return this.fieldList[field] === undefined;\n    }\n\n    isChange(parser, value) {\n        return JSON.stringify(parser.rule.value) !== JSON.stringify(value);\n    }\n\n    valueChange(parser) {\n        this.validateControl(parser);\n    }\n\n    onInput(parser, value) {\n        let val;\n        if (!this.isNoVal(parser) && this.isChange(parser, val = parser.toValue(value))) {\n            this.$render.clearCache(parser);\n            this.setFormData(parser, value);\n            this.changeStatus = true;\n            this.valueChange(parser);\n            this.vm.$emit('change', parser.field, val, this.fCreateApi);\n        }\n    }\n\n    getParser(id) {\n        if (this.fieldList[id])\n            return this.fieldList[id];\n        else if (this.customData[id])\n            return this.customData[id];\n        else if (this.parsers[id])\n            return this.parsers[id];\n    }\n\n    created() {\n        const vm = this.vm;\n\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'formData', this.formData);\n\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = Api(this);\n        this.fCreateApi.rule = this.rules;\n        this.fCreateApi.config = this.options;\n        if (this.fCreateApi.form) {\n            const form = this.fCreateApi.form;\n            Object.keys(form).forEach((field) => {\n                delete form[field];\n            })\n        } else {\n            Object.defineProperty(this.fCreateApi, 'form', {\n                value: {},\n                writable: false,\n                enumerable: true\n            });\n        }\n        Object.defineProperties(this.fCreateApi.form, Object.keys(this.fCreateApi.formData()).reduce((initial, field) => {\n            const parser = this.getParser(field);\n            const handle = this.valueHandle(parser);\n            handle.configurable = true;\n            initial[field] = handle;\n            return initial;\n        }, {}));\n    }\n\n    addParserWitch(parser) {\n        const vm = this.vm;\n\n        Object.keys(parser.rule).forEach((key) => {\n            if (['field', 'type', 'value', 'vm', 'template', 'name', 'config', 'control'].indexOf(key) !== -1 || parser.rule[key] === undefined) return;\n            try {\n                parser.watch.push(vm.$watch(() => parser.rule[key], (n, o) => {\n                    if (o === undefined) return;\n                    this.watching = true;\n                    if (key === 'validate')\n                        this.validate[parser.field] = n;\n                    else if (key === 'props')\n                        this.parseProps(parser.rule);\n                    else if (key === 'on')\n                        this.parseOn(parser.rule);\n                    else if (key === 'emit')\n                        this.margeEmit(parser.rule);\n\n                    this.$render.clearCache(parser);\n                    this.watching = false;\n                }, {deep: key !== 'children', immediate: true}));\n            } catch (e) {\n                //\n            }\n        });\n    }\n\n    refreshControl(parser) {\n        if (!this.isNoVal(parser) && parser.rule.control) {\n            this.validateControl(parser);\n        }\n    }\n\n\n    validateControl(parser) {\n        const controls = getControl(parser), len = controls.length, ctrlRule = parser.ctrlRule;\n        if (!len) return;\n        for (let i = 0; i < len; i++) {\n            const control = controls[i], validate = control.handle || (val => val === control.value);\n            if (validate(parser.rule.value)) {\n                if (ctrlRule) {\n                    if (ctrlRule.children === control.rule)\n                        return;\n                    else\n                        removeControl(parser);\n                }\n                const rule = {\n                    type: 'fcFragment',\n                    native: true,\n                    children: control.rule\n                };\n                parser.root.splice(parser.root.indexOf(parser.rule.__origin__) + 1, 0, rule);\n                parser.ctrlRule = rule;\n                this.vm.$emit('control', parser.rule.__origin__, this.fCreateApi);\n                this.refresh();\n                return;\n            }\n        }\n        if (ctrlRule) {\n            removeControl(parser);\n            this.vm.$emit('control', parser.rule.__origin__, this.fCreateApi);\n            this.refresh();\n        }\n    }\n\n    mountedParser() {\n        const vm = this.vm;\n        Object.keys(this.parsers).forEach((id) => {\n            let parser = this.parsers[id];\n            if (parser.watch.length === 0) this.addParserWitch(parser);\n            this.refreshControl(parser);\n            parser.el = vm.$refs[parser.refName] || {};\n\n            if (parser.defaultValue === undefined)\n                parser.defaultValue = deepExtend({}, {value: parser.rule.value}).value;\n\n            parser.mounted && parser.mounted();\n        });\n    }\n\n    mounted() {\n        const mounted = this.options.mounted;\n\n        this.mountedParser();\n\n        mounted && mounted(this.fCreateApi);\n        this.fc.$emit('mounted', this.fCreateApi);\n    }\n\n    reload() {\n        const onReload = this.options.onReload;\n\n        this.mountedParser();\n\n        onReload && onReload(this.fCreateApi);\n        this.fc.$emit('on-reload', this.fCreateApi);\n    }\n\n    removeField(parser, value) {\n        const {id, field} = parser, index = this.sortList.indexOf(id);\n\n        delParser(parser, value);\n        $del(this.parsers, id);\n\n        if (index !== -1) {\n            this.sortList.splice(index, 1);\n        }\n\n        if (!this.fieldList[field]) {\n            $del(this.validate, field);\n            $del(this.formData, field);\n            $del(this.customData, field);\n            $del(this.fieldList, field);\n            $del(this.trueData, field);\n        }\n\n        if (this.subForm[parser.field])\n            $del(this.subForm, field);\n\n        return parser;\n    }\n\n    refresh() {\n        this.vm._refresh();\n    }\n\n    reloadRule(rules) {\n        const vm = this.vm;\n        if (!rules) return this.reloadRule(this.rules);\n        if (!this.origin.length) this.fCreateApi.refresh();\n        this.origin = [...rules];\n\n        const parsers = {...this.parsers};\n        const formData = this.fCreateApi.formData();\n        this.__init(rules);\n        this.loadRule(rules, false);\n        Object.keys(parsers).filter(id => this.parsers[id] === undefined)\n            .forEach(id => this.removeField(parsers[id], formData[parsers[id].field]));\n        this.$render.initOrgChildren();\n        this.formData = {...this.formData};\n        this.created();\n\n        vm.$f = this.fCreateApi;\n        this.$render.clearCacheAll();\n        this.refresh();\n\n        vm.$nextTick(() => {\n            this.reload();\n        });\n\n    }\n\n    setFormData(parser, value) {\n        $set(this.formData, parser.field, value);\n    }\n\n    getFormData(parser) {\n        return this.formData[parser.field];\n    }\n\n    fields() {\n        return Object.keys(this.formData);\n    }\n\n    isNoVal(parser) {\n        return !parser.isDef;\n    }\n\n}\n\nexport function delParser(parser, value) {\n    if (parser.ctrlRule)\n        removeControl(parser);\n    parser.watch.forEach((unWatch) => unWatch());\n    parser.watch = [];\n    parser.deleted = true;\n    parser.root = [];\n    Object.defineProperty(parser.rule, 'value', {\n        value\n    });\n}\n\nfunction parseArray(validate) {\n    return Array.isArray(validate) ? validate : [];\n}\n\nfunction getControl(parser) {\n    const control = parser.rule.control || [];\n    if (isPlainObject(control)) return [control];\n    else return control;\n}\n\nfunction removeControl(parser) {\n    const index = parser.root.indexOf(parser.ctrlRule);\n    if (index !== -1)\n        parser.root.splice(index, 1);\n    parser.ctrlRule = null;\n}\n\n\nfunction defRule() {\n    return {\n        validate: [],\n        col: {},\n        emit: [],\n        props: {},\n        on: {},\n        options: [],\n        title: undefined,\n        value: null,\n        field: '',\n        name: undefined,\n        className: undefined\n    };\n}\n\nfunction bindParser(rule, parser) {\n    Object.defineProperties(rule, {\n        __field__: enumerable(parser.field),\n        __fc__: enumerable(parser)\n    });\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        children: Array\n    },\n    render(h, ctx) {\n        return ctx.children\n    }\n}\n","import {\n    $set,\n    deepExtend,\n    extend,\n    isBool,\n    isElement,\n    toString,\n    isPlainObject\n} from '@form-create/utils';\nimport $FormCreate from '../components/formCreate';\nimport {formCreateName} from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from './handle';\nimport {creatorFactory} from '../factory/creator';\nimport BaseParser from '../factory/parser';\nimport {parseJson, copyRule, copyRules} from './util';\nimport fragment from '../components/fragment';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nexport default function createFormCreate(drive) {\n\n    const components = {\n            [fragment.name]: fragment\n        }, parsers = {}, maker = makerFactory(), globalConfig = drive.getConfig(), data = {},\n        modelEvents = {};\n\n    function setParser(id, parser) {\n        id = toString(id);\n        parsers[id.toLocaleLowerCase()] = parser;\n        FormCreate.maker[id] = creatorFactory(id);\n    }\n\n    function setModel(id, model) {\n        modelEvents[id.toLocaleLowerCase()] = model;\n    }\n\n    function createParser() {\n        return class Parser extends BaseParser {\n        }\n    }\n\n    function component(id, component) {\n        id = toString(id);\n        const _id = id.toLocaleLowerCase();\n        if (_id === 'form-create' || _id === 'formcreate')\n            return get$FormCreate();\n        if (component === undefined)\n            return components[id];\n        else\n            components[id] = component;\n    }\n\n    function margeGlobal(config, _options) {\n        if (isBool(_options.submitBtn))\n            _options.submitBtn = {show: _options.submitBtn};\n\n        if (isBool(_options.resetBtn))\n            _options.resetBtn = {show: _options.resetBtn};\n\n        let options = deepExtend(config, _options);\n\n        $set(options, 'el', !options.el\n            ? window.document.body\n            : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n            ));\n\n        return options;\n    }\n\n    function get$FormCreate() {\n        return _vue.extend($FormCreate(FormCreate, components));\n    }\n\n\n    function bindAttr(formCreate) {\n        extend(formCreate, {\n            version: drive.version,\n            ui: drive.ui,\n            maker,\n            component,\n            setParser,\n            createParser,\n            data,\n            copyRule,\n            copyRules,\n            $form() {\n                return get$FormCreate();\n            },\n            parseJson(json) {\n                return parseJson(json);\n            }\n        });\n    }\n\n    function install(Vue, options) {\n        if (Vue._installedFormCreate === true) return;\n        Vue._installedFormCreate = true;\n\n        if (options && isPlainObject(options))\n            margeGlobal(globalConfig, options);\n\n        Vue.use(FormCreate);\n    }\n\n    function create(rules, option) {\n        const $vm = new _vue({\n            data() {\n                return {rule: rules, option: isElement(option) ? {el: option} : option};\n            },\n            render() {\n                return <form-create ref='fc' props={this.$data}/>\n            }\n        });\n        $vm.$mount();\n        return $vm;\n    }\n\n    class FormCreate {\n        constructor(rules, options = {}) {\n            this.fCreateApi = undefined;\n            this.drive = drive;\n            this.parsers = parsers;\n            this.modelEvents = modelEvents;\n            this.vm = undefined;\n            this.rules = Array.isArray(rules) ? rules : [];\n            this.options = margeGlobal(deepExtend({formData: {}}, globalConfig), options);\n        }\n\n        beforeCreate(vm) {\n            this.vm = vm;\n            this.handle = new Handle(this);\n        }\n\n        created() {\n            this.handle.created();\n        }\n\n        api() {\n            return this.handle.fCreateApi;\n        }\n\n        render() {\n            return this.handle.run();\n        }\n\n        mounted() {\n            this.handle.mounted();\n        }\n\n        $emit(eventName, ...params) {\n            if (this.$parent)\n                this.$parent.$emit(`fc:${eventName}`, ...params);\n\n            this.vm.$emit(eventName, ...params);\n        }\n\n        static create(rules, _opt = {}, parent) {\n\n            let $vm = create(rules, _opt);\n\n            const _this = $vm.$refs.fc.formCreate;\n            _this.parent = parent;\n            _this.options.el.appendChild($vm.$el);\n\n            return _this.handle.fCreateApi;\n        }\n\n        static install(Vue) {\n            const $formCreate = function (rules, opt = {}) {\n                return FormCreate.create(rules, opt, this);\n            };\n\n            bindAttr($formCreate);\n\n            Vue.prototype.$formCreate = $formCreate;\n\n            Vue.component(formCreateName, get$FormCreate());\n            Vue.component(fragment.name, _vue.extend(fragment));\n            _vue = Vue;\n        }\n\n        static init(rules, _opt = {}) {\n            let $vm = create(rules, _opt), formCreate = $vm.$refs.fc.formCreate;\n\n            return {\n                mount($el) {\n                    if ($el && isElement($el))\n                        formCreate.options.el = $el;\n                    formCreate.options.el.appendChild($vm.$el);\n                    return formCreate.handle.fCreateApi;\n                },\n                remove() {\n                    formCreate.options.el.removeChild($vm.$el);\n                },\n                destroy() {\n                    this.remove();\n                    $vm.$destroy();\n                },\n                $f: formCreate.handle.fCreateApi\n            };\n        }\n    }\n\n    bindAttr(FormCreate);\n\n\n    drive.components.forEach(component => {\n        FormCreate.component(component.name, component);\n    });\n\n    drive.parsers.forEach(({name, parser}) => {\n        FormCreate.setParser(name, parser);\n    });\n\n    Object.keys(drive.makers).forEach(name => {\n        FormCreate.maker[name] = drive.makers[name];\n    });\n\n    if (drive.modelEvents) {\n        Object.keys(drive.modelEvents).forEach((name) => setModel(name, drive.modelEvents[name]));\n    }\n\n    return {\n        FormCreate,\n        install\n    };\n}\n","import VData from './vData';\nimport VNode from './vNode';\nimport {deepExtendArgs, uniqueId} from '@form-create/utils';\n\n\nexport default class BaseForm {\n\n    constructor(handle) {\n        this.$handle = handle;\n        this.vm = handle.vm;\n        this.drive = this.$handle.fc.drive;\n        this.options = handle.options;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.unique = uniqueId();\n        this.refName = `cForm${this.unique}`;\n    }\n\n    getFormRef() {\n        return this.vm.$refs[this.refName];\n    }\n\n    init() {\n        this.$render = this.$handle.$render;\n    }\n\n    getGetCol(parser) {\n        let col = parser.rule.col || {}, mCol = {}, pCol = {}, global = this.options.global;\n\n        if (!global)\n            return col;\n\n        if (global['*']) {\n            mCol = global['*'].col || {};\n        }\n\n        if (global[parser.type]) {\n            pCol = global[parser.type].col || {};\n        } else if (global[parser.originType]) {\n            pCol = global[parser.originType].col || {};\n        }\n        col = deepExtendArgs({}, mCol, pCol, col);\n        return col;\n    }\n\n    beforeRender() {\n\n    }\n\n    render() {\n\n    }\n\n    inputVData() {\n    }\n}\n","import {Vue, VNode} from '@form-create/core';\n\nconst vNode = new VNode();\nconst Modal = (options, cb) => {\n    return {\n        name: 'fc-modal',\n        data() {\n            return {\n                value: true,\n                ...options\n            }\n        },\n        render() {\n            vNode.setVm(this);\n            return vNode.modal({\n                props: this.$data,\n                on: {\n                    'on-visible-change': this.remove\n                }\n            }, [cb(vNode, this)])\n        },\n        methods: {\n            onClose() {\n                this.value = false;\n            },\n            remove() {\n                this.$el.parentNode.removeChild(this.$el);\n            }\n        }\n    }\n};\n\nexport function mount(options, content) {\n    let $modal = Vue.extend(Modal(options, content)), $vm = new $modal().$mount();\n    window.document.body.appendChild($vm.$el);\n}\n\nexport function defaultOnHandle(src, title) {\n    mount({title, footerHide: true}, (vNode) => {\n        return vNode.make('img', {\n            style: {width: '100%'},\n            attrs: {src}\n        })\n    });\n}\n\nexport default Modal;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import {iviewConfig} from '../../core/config';\nimport {defaultOnHandle, mount} from '../../core/modal';\nimport style from '../../style/index.css';\nimport {isUndef, toArray, uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-ivu-frame';\n\nexport default {\n    name: NAME,\n    props: {\n        type: {\n            type: String,\n            default: 'input'\n        },\n        field: {\n            type: String,\n            default: ''\n        },\n        helper: {\n            type: Boolean,\n            default: true\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        src: {\n            type: String,\n            required: true\n        },\n        icon: {\n            type: String,\n            default: iviewConfig.fileUpIcon\n        },\n        width: {\n            type: [Number, String],\n            default: 500\n        },\n        height: {\n            type: [Number, String],\n            default: 370\n        },\n        maxLength: {\n            type: Number,\n            default: 0\n        },\n        okBtnText: {\n            type: String,\n            default: '确定'\n        },\n        closeBtnText: {\n            type: String,\n            default: '关闭'\n        },\n        modalTitle: {\n            type: String,\n            default: '预览'\n        },\n        handleIcon: {\n            type: [String, Boolean],\n            default: undefined\n        },\n        title: String,\n        allowRemove: {\n            type: Boolean,\n            default: true\n        },\n        onOpen: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onOk: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onCancel: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onLoad: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onBeforeRemove: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onRemove: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onHandle: {\n            type: Function,\n            default(src) {\n                defaultOnHandle(src, this.modalTitle)\n            }\n        },\n        modal: {\n            type: Object,\n            default: () => ({})\n        },\n        srcKey: {\n            type: [String, Number]\n        },\n        value: [Array, String, Number]\n\n    },\n    data() {\n        return {\n            modalVm: null,\n            fileList: toArray(this.value),\n            unique: uniqueId()\n        }\n    },\n    watch: {\n        value(n) {\n            this.fileList = toArray(n);\n        },\n        fileList(n) {\n            const val = this.maxLength === 1 ? (n[0] || '') : n;\n            this.$emit('input', val);\n            this.$emit('on-change', val);\n        },\n        src(n) {\n            this.modalVm && (this.modalVm.src = n);\n        }\n    },\n    methods: {\n        key(unique) {\n            return NAME + unique + this.unique;\n        },\n        closeModel() {\n            this.modalVm && this.modalVm.onClose();\n            this.modalVm = null;\n        },\n\n        showModel() {\n            if (this.disabled || false === this.onOpen()) return;\n\n            const {width, height, src, title, okBtnText, closeBtnText} = this.$props;\n\n            mount({width, title, src, ...this.modal}, (vNode, _vm) => {\n                this.modalVm = _vm;\n                return [vNode.make('iframe', {\n                    attrs: {\n                        src: _vm.src\n                    },\n                    style: {\n                        'height': height,\n                        'border': '0 none',\n                        'width': '100%'\n                    },\n                    on: {\n                        'load': (e) => {\n                            this.onLoad(e);\n\n                            try {\n                                if (this.helper === true) {\n                                    let iframe = e.path[0].contentWindow;\n\n                                    iframe['form_create_helper'] = {\n                                        close: (field) => {\n                                            this.valid(field);\n                                            _vm.onClose();\n                                        },\n                                        set: (field, value) => {\n                                            this.valid(field);\n                                            if (!this.disabled)\n                                                this.$emit('input', value);\n\n                                        },\n                                        get: (field) => {\n                                            this.valid(field);\n                                            return this.value;\n                                        }\n                                    };\n\n                                }\n                            } catch (e) {\n                                console.log(e);\n                            }\n                        }\n                    },\n                }), vNode.make('div', {slot: 'footer'}, [\n                    vNode.button({\n                        on: {\n                            click: () => {\n\n                                this.onCancel() !== false && _vm.onClose();\n                            }\n                        }\n                    }, [closeBtnText]),\n                    vNode.button({\n                        props: {type: 'primary'}, on: {\n                            click: () => {\n                                this.onOk() !== false && _vm.onClose();\n                            }\n                        }\n                    }, [okBtnText])\n                ])]\n            });\n        },\n\n        makeInput() {\n            const props = {\n                type: 'text',\n                value: (this.fileList.map(v => this.getSrc(v))).toString(),\n                icon: this.icon,\n                readonly: true,\n                clearable: false\n            };\n\n            return <Input props={props} on={{'on-click': () => this.showModel()}} key={this.key('input')}/>\n        },\n\n        makeGroup(children) {\n            if (!this.maxLength || this.fileList.length < this.maxLength)\n                children.push(this.makeBtn());\n            return <div class={style['fc-upload']} key={this.key('group')}>{...children}</div>\n        },\n\n        makeItem(index, children) {\n            return <div class={style['fc-files']} key={this.key('file' + index)}>{...children}</div>;\n        },\n        valid(field) {\n            if (field !== this.field)\n                throw new Error('frame 无效的字段值');\n        },\n\n        makeIcons(val, index) {\n            if (this.handleIcon !== false || this.allowRemove === true) {\n                const icons = [];\n                if ((this.type !== 'file' && this.handleIcon !== false) || (this.type === 'file' && this.handleIcon))\n                    icons.push(this.makeHandleIcon(val, index));\n                if (this.allowRemove)\n                    icons.push(this.makeRemoveIcon(val, index));\n\n                return <div class={style['fc-upload-cover']} key={this.key('uc')}>{icons}</div>\n            }\n        },\n        makeHandleIcon(val, index) {\n            return <icon\n                props={{type: (this.handleIcon === true || this.handleIcon === undefined) ? 'ios-eye-outline' : this.handleIcon}}\n                on-click={() => this.handleClick(val)} key={this.key('hi' + index)}/>\n        },\n\n        makeRemoveIcon(val, index) {\n            return <icon props={{type: 'ios-trash-outline'}} on-click={() => this.handleRemove(val)}\n                key={this.key('ri' + index)}/>\n        },\n\n        makeFiles() {\n            return this.makeGroup(this.fileList.map((src, index) => {\n                return this.makeItem(index, [<icon props={{type: iviewConfig.fileIcon, size: 40}}\n                    on-click={() => this.handleClick(src)}/>, this.makeIcons(src, index)])\n            }))\n        },\n        makeImages() {\n            return this.makeGroup(this.fileList.map((src, index) => {\n                return this.makeItem(index, [<img src={this.getSrc(src)}/>, this.makeIcons(src, index)])\n            }))\n        },\n        makeBtn() {\n            return <div class={style['fc-upload-btn']} on-click={() => this.showModel()}\n                key={this.key('btn')}>\n                <icon props={{type: this.icon, size: 20}}/>\n            </div>\n        },\n        handleClick(src) {\n            if (this.disabled) return;\n            return this.onHandle(src);\n        },\n        handleRemove(src) {\n            if (this.disabled) return;\n            if (false !== this.onBeforeRemove(src)) {\n                this.fileList.splice(this.fileList.indexOf(src), 1);\n                this.onRemove(src);\n            }\n        },\n        getSrc(src) {\n            return isUndef(this.srcKey) ? src : src[this.srcKey];\n        }\n    },\n    render() {\n        const type = this.type;\n\n        if (type === 'input')\n            return this.makeInput();\n        else if (type === 'image')\n            return this.makeImages();\n        else\n            return this.makeFiles();\n    }\n}\n","import {uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-ivu-radio';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        options: {\n            type: Array,\n            default: () => ([])\n        },\n        unique: {\n            default: () => uniqueId()\n        },\n    },\n    render(h, ctx) {\n        return <RadioGroup {...ctx.data}>{ctx.props.options.map((opt, index) => {\n            const props = {...opt};\n            delete props.value;\n            return <Radio {...{props}} key={NAME + index + ctx.props.unique}/>\n        }).concat(ctx.chlidren)}</RadioGroup>\n    }\n}\n","import {toDefSlot, uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-ivu-select';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        options: {\n            type: Array,\n            default: () => ([])\n        },\n        unique: {\n            default: () => uniqueId()\n        },\n    },\n    render(h, ctx) {\n        return <Select {...ctx.data}>{ctx.props.options.map((props, index) => {\n\n            const slot = props.slot ? toDefSlot(props.slot, h) : [];\n\n            return <Option {...{props}}\n                key={NAME + index + ctx.props.unique}>{slot}</Option>\n        }).concat(ctx.chlidren)}</Select>;\n    }\n}\n","import {toArray} from '@form-create/utils';\n\n\nexport default {\n    name: 'fc-ivu-tree',\n    props: {\n        ctx: {\n            type: Object,\n            default: () => ({props: {}})\n        },\n        children: {\n            type: Array,\n            default: () => ([])\n        },\n        type: {\n            type: String,\n            default: 'checked'\n        },\n        value: {\n            type: [Array, String, Number],\n            default: () => ([])\n        }\n    },\n    data() {\n        return {\n            treeData: []\n        }\n    },\n    watch: {\n        value(n) {\n            this.setStatus(n);\n        }\n    },\n    methods: {\n        setStatus(value) {\n            const n = toArray(value);\n            const data = this.$refs.tree.data;\n            this.type === 'selected' ? this.selected(data, n) : this.checked(data, n);\n        },\n        selected(_data, value) {\n            _data.forEach((node) => {\n                this.$set(node, 'selected', value.indexOf(node.id) !== -1);\n                if (node.children !== undefined && Array.isArray(node.children))\n                    this.selected(node.children, value);\n            });\n        },\n        checked(_data, value) {\n            _data.forEach((node) => {\n                this.$set(node, 'checked', value.indexOf(node.id) !== -1);\n                if (node.children !== undefined && Array.isArray(node.children))\n                    this.checked(node.children, value);\n            });\n        },\n        makeTree() {\n            return <Tree ref=\"tree\" {...this.ctx}>{this.children}</Tree>;\n        },\n        updateTreeData() {\n            const type = (this.type).toLocaleLowerCase();\n\n            if (type === 'selected')\n                this.treeData = this.$refs.tree.getSelectedNodes();\n            else\n                this.treeData = this.$refs.tree.getCheckedNodes();\n            this.$emit('input', this.treeData.map(node => node.id));\n        }\n    },\n    render() {\n        return this.makeTree();\n    },\n    mounted() {\n        this.$nextTick(() => {\n            this.setStatus(this.value);\n            this.$watch(() => this.$refs.tree.flatState, () => this.updateTreeData())\n        })\n\n    }\n}\n","import {iviewConfig} from '../../core/config';\nimport {hasSlot, toArray, toString, uniqueId} from '@form-create/utils';\nimport {defaultOnHandle} from '../../core/modal';\nimport style from '../../style/index.css';\n\nfunction parseFile(file) {\n    return {\n        url: file,\n        name: getFileName(file)\n    };\n}\n\nfunction getFileName(file) {\n    return toString(file).split('/').pop()\n}\n\nconst NAME = 'fc-ivu-upload';\n\n\nexport default {\n    name: NAME,\n\n    props: {\n        ctx: {\n            type: Object,\n            default: () => ({props: {}})\n        },\n        children: {\n            type: Array,\n            default: () => ([])\n        },\n        onHandle: {\n            type: Function,\n            default(file) {\n                defaultOnHandle(file.url, this.modalTitle)\n            }\n        },\n        uploadType: {\n            type: String,\n            default: 'file'\n        },\n        maxLength: {\n            type: Number,\n            default: 0\n        },\n        allowRemove: {\n            type: Boolean,\n            default: true\n        },\n        modalTitle: {\n            type: String,\n            default: '预览'\n        },\n        handleIcon: [String, Boolean],\n        value: [Array, String]\n    },\n    data() {\n        return {\n            uploadList: [],\n            unique: uniqueId()\n        }\n    },\n    created() {\n        if (this.ctx.props.showUploadList === undefined)\n            this.ctx.props.showUploadList = false;\n        this.ctx.props.defaultFileList = toArray(this.value).map(parseFile);\n    },\n    watch: {\n        value(n) {\n            if (this.$refs.upload.fileList.every(file => {\n                return !file.status || file.status === 'finished';\n            })) {\n                this.$refs.upload.fileList = toArray(n).map(parseFile);\n                this.uploadList = this.$refs.upload.fileList;\n            }\n        },\n        maxLength(n, o) {\n            if (o === 1 || n === 1)\n                this.update();\n        }\n    },\n    methods: {\n        key(unique) {\n            return NAME + unique + this.unique;\n        },\n        isDisabled() {\n            return this.ctx.props.disabled === true;\n        },\n        onRemove(file) {\n            if (this.isDisabled()) return;\n            this.$refs.upload.handleRemove(file);\n        },\n        handleClick(file) {\n            if (this.isDisabled()) return;\n            this.onHandle(file);\n        },\n\n        makeDefaultBtn() {\n            return <div class={style['fc-upload-btn']}>\n                <icon props={{\n                    type: this.uploadType === 'file' ? 'ios-cloud-upload-outline' : iviewConfig.imgUpIcon,\n                    size: 20\n                }}/>\n            </div>\n        },\n        makeItem(file, index) {\n            return this.uploadType === 'image'\n                ? <img src={file.url} key={this.key('img' + index)}/>\n                : <icon props={{type: iviewConfig.fileIcon, size: 40}} key={this.key('i' + index)}/>\n        },\n        makeRemoveIcon(file, index) {\n            return <icon type='ios-trash-outline' on-click={() => this.onRemove(file)} key={this.key('ri' + index)}/>;\n        },\n        makeHandleIcon(file, index) {\n            return <icon\n                type={(this.handleIcon === true || this.handleIcon === undefined) ? 'ios-eye-outline' : this.handleIcon}\n                on-click={() => this.handleClick(file)} key={this.key('hi' + index)}/>;\n        },\n        makeProgress(file, index) {\n            return <Progress props={{percent: file.percentage, hideInfo: true}} style=\"width:90%\"\n                key={this.key('pg' + index)}/>\n        },\n        makeIcons(file, index) {\n            const icons = [];\n            if (this.allowRemove || this.handleIcon !== false) {\n                if ((this.uploadType !== 'file' && this.handleIcon !== false) || (this.uploadType === 'file' && this.handleIcon))\n                    icons.push(this.makeHandleIcon(file, index));\n                if (this.allowRemove)\n                    icons.push(this.makeRemoveIcon(file, index));\n\n                return <div class={style['fc-upload-cover']}>{icons}</div>;\n            }\n        },\n\n        makeFiles() {\n            return this.uploadList.map((file, index) => <div key={this.key(index)}\n                class={style['fc-files']}>{file.showProgress ? this.makeProgress(file, index) : [this.makeItem(file, index), this.makeIcons(file, index)]}</div>);\n        },\n        makeUpload() {\n            return <Upload ref=\"upload\"\n                style={{display: 'inline-block'}} {...this.ctx}\n                key={this.key('upload')}>{this.children}</Upload>;\n        },\n        initChildren() {\n            if (!hasSlot(this.children, 'default'))\n                this.children.push(this.makeDefaultBtn());\n        },\n        update() {\n            let files = this.$refs.upload.fileList.map((file) => file.url).filter((url) => url !== undefined);\n            this.$emit('input', this.maxLength === 1 ? (files[0] || '') : files);\n        }\n    },\n    render() {\n        const isShow = (!this.maxLength || this.maxLength > this.uploadList.length);\n\n        if (this.$refs.upload) {\n            if (this.ctx.props.showUploadList === undefined)\n                this.ctx.props.showUploadList = this.$refs.upload.showUploadList;\n            this.ctx.props.defaultFileList = this.$refs.upload.defaultFileList;\n        }\n\n        this.initChildren();\n\n        return (\n            <div class={{\n                [style['fc-upload']]: true,\n                [style['fc-hide-btn']]: !isShow\n            }}>{[this.ctx.props.showUploadList ? [] : this.makeFiles(), this.makeUpload()]}</div>);\n    },\n    mounted() {\n        this.uploadList = this.$refs.upload.fileList;\n        this.$watch(() => this.$refs.upload.fileList, () => {\n            this.update();\n        }, {deep: true});\n    }\n}\n","import {iviewConfig} from '../../core/config';\nimport {copyRules} from '@form-create/core';\n\nconst NAME = 'fc-ivu-group';\n\nexport default {\n    name: NAME,\n    props: {\n        rule: Object,\n        rules: Array,\n        max: {\n            type: Number,\n            default: 0\n        },\n        min: {\n            type: Number,\n            default: 0\n        },\n        value: {\n            type: Array,\n            default: () => []\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            config: {\n                submitBtn: false,\n                resetBtn: false\n            },\n            len: 0,\n            cacheRule: {},\n            group$f: {},\n            fieldRule: {}\n        }\n    },\n    computed: {\n        formRule() {\n            if (this.rule) return [this.rule];\n            else if (this.rules) return this.rules;\n            return [];\n        },\n        formData() {\n            return Object.keys(this.fieldRule).map(key => {\n                const keys = Object.keys(this.fieldRule[key]);\n                return this.rule ? keys[0] === undefined ? null : this.fieldRule[key][keys[0]].value : keys.reduce((initial, field) => {\n                    initial[field] = this.fieldRule[key][field].value;\n                    return initial;\n                }, {});\n            })\n        }\n    },\n    watch: {\n        disabled(n) {\n            const lst = this.group$f;\n            Object.keys(lst).forEach(k => {\n                lst[k].disabled(n);\n            })\n        },\n        formData(n) {\n            this.$emit('input', n);\n            this.$emit('change', n);\n        },\n        value(n) {\n            let keys = Object.keys(this.cacheRule), total = keys.length, len = total - n.length;\n            if (len < 0) {\n                for (let i = len; i < 0; i++) {\n                    this.addRule();\n                }\n                for (let i = 0; i < total; i++) {\n                    this.setValue(this.group$f[keys[i]], n[i]);\n                }\n            } else {\n                if (len > 0) {\n                    for (let i = 0; i < len; i++) {\n                        this.removeRule(keys[total - i - 1]);\n                    }\n                    this.subForm();\n                }\n\n                n.forEach((val, i) => {\n                    this.setValue(this.group$f[keys[i]], n[i]);\n                });\n            }\n        }\n    },\n    methods: {\n        setValue($f, value) {\n            if (this.rule) {\n                const fields = $f.fields();\n                if (!fields[0]) return;\n                $f.setValue(fields[0], value);\n            } else {\n                $f.setValue(value);\n            }\n        },\n        addRule(emit) {\n            const rule = this.copyRule();\n            this.$set(this.cacheRule, ++this.len, rule);\n            if (emit)\n                this.$emit('add', rule, Object.keys(this.cacheRule).length - 1);\n        },\n        add$f(i, key, $f) {\n            this.group$f[key] = $f;\n            this.setValue($f, this.value[i]);\n            this.syncData(key, $f);\n            this.subForm();\n            this.$emit('itemMounted', $f, Object.keys(this.cacheRule).indexOf(key));\n        },\n        subForm() {\n            this.$emit('fc.subForm', Object.keys(this.group$f).map(k => this.group$f[k]));\n        },\n        syncData(key, $f) {\n            this.$set(this.fieldRule, key, {});\n            $f.fields().forEach(field => {\n                this.fieldRule[key][field] = $f.getRule(field);\n            });\n        },\n        removeRule(key, emit) {\n            const index = Object.keys(this.cacheRule).indexOf(key);\n            this.$delete(this.cacheRule, key);\n            this.$delete(this.fieldRule, key);\n            this.$delete(this.group$f, key);\n            if (emit)\n                this.$emit('remove', index);\n        },\n        copyRule() {\n            return copyRules(this.formRule);\n        },\n        addIcon(key) {\n            return <Icon key={`a${key}`} type={iviewConfig.addIcon}\n                style={`font-size:28px;cursor:${this.disabled ? 'not-allowed;color:#c9cdd4' : 'pointer;color:#000'}`}\n                on-click={() => (!this.disabled) && this.addRule(true)}/>;\n        },\n        delIcon(key) {\n            return <Icon key={`d${key}`} type={iviewConfig.removeIcon}\n                style={`font-size:28px;cursor:${this.disabled ? 'not-allowed;color:#c9cdd4' : 'pointer'};`}\n                on-click={() => {\n                    if (this.disabled) return;\n                    this.removeRule(key, true);\n                    this.subForm();\n                }}/>;\n        },\n        makeIcon(total, index, key) {\n            if (index === 0) {\n                return [(this.max !== 0 && total >= this.max) ? null : this.addIcon(key), (this.min === 0 || total > this.min) ? this.delIcon(key) : null];\n            } else if (index >= this.min) {\n                return this.delIcon(key);\n            }\n        }\n    },\n    created() {\n        for (let i = 0; i < this.value.length; i++) {\n            this.addRule();\n        }\n    },\n    render() {\n        const keys = Object.keys(this.cacheRule);\n        return keys.length === 0 ?\n            <Icon key={'a_def'} type={iviewConfig.addIcon}\n                style={`font-size:28px;vertical-align:middle;cursor:${this.disabled ? 'not-allowed;color:#c9cdd4' : 'pointer'};`}\n                on-click={() => (!this.disabled) && this.addRule(true)}/> :\n            <div class=\"fc-group\" key={'con'}>{keys.map((key, index) => {\n                const rule = this.cacheRule[key];\n                return <Row align=\"middle\" type=\"flex\" key={key}\n                    style=\"background-color:#f5f7fa;padding:10px;border-radius:5px;margin-bottom:10px;\">\n                    <Col span={20}><FormItem><FormCreate on-mounted={($f) => this.add$f(index, key, $f)}\n                        on-on-reload={($f) => this.syncData(key, $f)} rule={rule}\n                        option={this.config}/></FormItem></Col>\n                    <Col span={2} pull={1} push={1}>{this.makeIcon(keys.length, index, key)}</Col></Row>\n            })}</div>\n    }\n}\n","import checkbox from './checkbox';\nimport frame from './frame';\nimport radio from './radio';\nimport select from './select';\nimport tree from './tree';\nimport upload from './upload';\nimport group from './group';\n\n\nexport default [\n    checkbox,\n    frame,\n    radio,\n    select,\n    tree,\n    upload,\n    group\n]\n","import {BaseParser} from '@form-create/core';\n\nexport default class parser extends BaseParser {\n\n    render(children) {\n        return this.vNode.checkbox({\n            props: {\n                ctx: this.$render.inputVData(this, true).get(),\n                options: this.rule.options,\n                value: this.$handle.getFormData(this),\n                children\n            },\n            on: {\n                input: (n) => {\n                    this.$render.onInput(this, n);\n                }\n            }\n        });\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'checkbox';\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {timeStampToDate, $set} from '@form-create/utils';\n\nexport default class Parser extends BaseParser {\n    init() {\n        let props = this.rule.props;\n        if ((props.startDate))\n            $set(props, 'startDate', timeStampToDate(props.startDate));\n    }\n\n    isRange() {\n        return this.el.type.includes('range') || this.el.multiple;\n    }\n\n    _toValue(val) {\n        const value = this.el.formatDate(val || ''), {separator} = this.el,\n            isRange = this.isRange();\n        if (!value)\n            return isRange ? (this.el.multiple ? [] : ['', '']) : value;\n        else if (isRange)\n            return value.split(separator);\n        else\n            return value;\n    }\n\n    toValue(formValue) {\n        const el = this.$handle.vm.$refs[this.refName];\n        if (el) {\n            this.el = el;\n            return this._toValue(formValue);\n        }\n        return formValue;\n    }\n\n    toFormValue(value) {\n        let isArr = Array.isArray(value), props = this.rule.props, parseValue, type = props.type || 'date';\n        if (['daterange', 'datetimerange'].indexOf(type) !== -1) {\n            if (isArr) {\n                parseValue = value.map((time) => !time ? '' : timeStampToDate(time));\n            } else {\n                parseValue = ['', '']\n            }\n        } else if ('date' === type && props.multiple === true) {\n            parseValue = toString(value);\n        } else {\n            parseValue = isArr ? (value[0] || '') : value;\n            parseValue = !parseValue ? '' : timeStampToDate(parseValue);\n        }\n        return parseValue;\n    }\n\n    mounted() {\n        this.toFormValue = (val) => {\n            let v = this.el.parseDate(val);\n            return this.isRange() ? v : v[0];\n        };\n\n        this.toValue = this._toValue;\n    }\n}\n","import parser from './parser';\n\nconst name = 'datePicker';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        const data = this.$render.inputVData(this).props('field', this.field);\n\n        return this.vNode.frame(data, children);\n    }\n\n    closeModel() {\n        this.el.closeModel && this.el.closeModel();\n    }\n\n}\n","import parser from './parser';\n\nconst name = 'frame';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nconst name = 'hidden';\n\nclass parser extends BaseParser {\n    render() {\n        return [];\n    }\n}\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {$set} from '@form-create/utils';\n\n\nexport default class Parser extends BaseParser {\n    init() {\n        let {props} = this.rule;\n        if (props.autosize && props.autosize.minRows)\n            $set(props, 'rows', props.autosize.minRows || 2);\n    }\n}\n","import parser from './parser';\n\nconst name = 'input';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nexport default class Parser extends BaseParser {\n    toFormValue(value) {\n        return this.rule.options.filter((opt) => opt.value === value).reduce((initial, opt) => opt.label, '')\n    }\n\n    toValue(parseValue) {\n        return this.rule.options.filter((opt) => opt.label === parseValue).reduce((initial, opt) => opt.value, '')\n    }\n\n    render(children) {\n        return this.vNode.radio(this.$render.inputVData(this).props({\n            'options': this.rule.options\n        }), children);\n    }\n\n}","import parser from './parser';\n\nconst name = 'radio';\n\nexport default {parser, name};","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        return this.vNode.select(this.$render.inputVData(this).props('options', this.rule.options), children);\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'select';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n    toFormValue(value) {\n        let rule = this.rule, isArr = Array.isArray(value), props = rule.props, min = props.min || 0,\n            parseValue;\n        if (props.range === true) {\n            parseValue = isArr ? value : [min, (parseFloat(value) || min)];\n        } else {\n            parseValue = isArr ? (parseFloat(value[0]) || min) : parseFloat(value);\n        }\n        return parseValue;\n    }\n\n}\n","import parser from './parser';\n\nconst name = 'slider';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nexport default class parser extends BaseParser {\n    render(children) {\n        let rule = this.rule, slot = rule.props.slot || {};\n\n        return this.vNode.switch(this.$render.inputVData(this).scopedSlots({\n            open: () => slot.open,\n            close: () => slot.close\n        }).get(), children);\n    }\n}\n","import parser from './parser';\n\nconst name = 'switch';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        const data = this.$render.parserToData(this).get();\n        return this.vNode.tree({\n            props: {\n                ctx: data,\n                children,\n                value: this.$handle.getFormData(this),\n                type: data.props.type\n            },\n            ref: this.refName,\n            key: this.key,\n            on: {\n                input: (value) => {\n                    this.$render.onInput(this, value);\n                }\n            }\n        });\n    }\n}\n","import parser from './parser';\n\nconst name = 'tree';\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n\n        const ctx = this.$render.parserToData(this).get();\n        const {key, refName} = this;\n        delete ctx.props.defaultFileList;\n        const props = {\n            uploadType: ctx.props.uploadType,\n            maxLength: ctx.props.maxLength,\n            modalTitle: ctx.props.modalTitle,\n            handleIcon: ctx.props.handleIcon,\n            onHandle: ctx.props.onHandle,\n            allowRemove: ctx.props.allowRemove,\n            value: this.$handle.getFormData(this),\n            ctx,\n            children\n        };\n        return this.vNode.upload({\n            props,\n            key,\n            ref: refName,\n            on: {\n                input: (n) => {\n                    this.$render.onInput(this, n);\n                }\n            }\n        });\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'upload';\n\n\nexport default {parser, name};\n","import checkbox from './checkbox';\nimport datePicker from './datePicker';\nimport frame from './frame';\nimport hidden from './hidden';\nimport input from './input';\nimport radio from './radio';\nimport select from './select';\nimport slider from './slider';\nimport iswitch from './switch';\nimport tree from './tree';\nimport upload from './upload';\n\nexport default [\n    checkbox,\n    datePicker,\n    frame,\n    hidden,\n    input,\n    radio,\n    select,\n    slider,\n    iswitch,\n    tree,\n    upload\n]","export default {\n    modal: 'Modal',\n    button: 'i-button',\n    icon: 'Icon',\n    slider: 'Slider',\n    rate: 'Rate',\n    upload: 'fc-ivu-upload',\n    cascader: 'Cascader',\n    colorPicker: 'Color-Picker',\n    timePicker: 'Time-Picker',\n    datePicker: 'Date-Picker',\n    'switch': 'i-switch',\n    select: 'fc-ivu-select',\n    checkbox: 'fc-ivu-checkbox',\n    radio: 'fc-ivu-radio',\n    inputNumber: 'Input-Number',\n    input: 'i-input',\n    formItem: 'Form-Item',\n    form: 'i-form',\n    frame: 'fc-ivu-frame',\n    col: 'i-col',\n    row: 'row',\n    tree: 'fc-ivu-tree',\n    autoComplete: 'AutoComplete',\n    group: 'fc-ivu-group',\n}\n","import {isFunction, preventDefault} from '@form-create/utils';\nimport {BaseForm} from '@form-create/core';\nimport style from '../style/index.css';\nimport {iviewConfig} from './config';\n\nfunction isTooltip(info) {\n    return info.type === 'tooltip';\n}\n\nexport default class Form extends BaseForm {\n\n    inputVData(parser) {\n        if (!parser.rule.props.size && this.options.form.size)\n            parser.vData.props('size', this.options.form.size);\n    }\n\n    validate(call) {\n        this.getFormRef().validate((valid) => {\n            call && call(valid);\n        });\n    }\n\n    validateField(field, call) {\n        this.getFormRef().validateField(field, call);\n    }\n\n    resetField(parser) {\n        this.vm.$refs[parser.formItemRefName].resetField();\n    }\n\n    clearValidateState(parser) {\n        const fItem = this.vm.$refs[parser.formItemRefName];\n        if (fItem) {\n            fItem.validateMessage = '';\n            fItem.validateState = '';\n        }\n    }\n\n    beforeRender() {\n        this.propsData = this.vData.props(this.options.form).props({\n            model: this.$handle.formData,\n            rules: this.$handle.validate,\n            key: 'form' + this.unique\n        }).ref(this.refName).nativeOn({submit: preventDefault}).class(this.options.form.className).class('form-create', true).key(this.unique).get();\n    }\n\n    render(vn) {\n        if (vn.length > 0)\n            vn.push(this.makeFormBtn());\n\n        return this.vNode.form(this.propsData, [this.makeRow(vn)]);\n    }\n\n    makeRow(vn) {\n        return this.vNode.row({props: this.options.row || {}, key: 'fr' + this.unique}, vn)\n    }\n\n    container(child, parser) {\n        return this.makeFormItem(parser, child);\n    }\n\n    makeFormItem(parser, child) {\n        let fItemUnique = `fItem${parser.key}${this.unique}`,\n            {rule, field, formItemRefName} = parser,\n            col = this.getGetCol(parser),\n            labelWidth = (!col.labelWidth && !rule.title) ? 0 : col.labelWidth, {inline, col: _col} = this.propsData.props,\n            propsData = this.vData.props({\n                prop: field,\n                label: rule.title,\n                // labelFor: unique,\n                rules: rule.validate,\n                labelWidth: labelWidth,\n                required: rule.props.required\n            }).key(fItemUnique).ref(formItemRefName).class(rule.className).get(),\n            node = this.vNode.formItem(propsData, [child, this.makeFormPop(parser, fItemUnique)]);\n        return (inline === true || _col === false) ? node : this.makeCol(col, parser, fItemUnique, [node]);\n    }\n\n    makeFormPop({rule}, unique) {\n        if (rule.title) {\n            const info = this.options.info || {}, svn = [rule.title];\n            if (rule.info) {\n                svn.push(this.vNode.make(isTooltip(info) ? 'Tooltip' : 'Poptip', {\n                    props: {...info, content: rule.info},\n                    class: 'fc-pop' + iviewConfig._v,\n                    key: `pop${unique}`\n                }, [\n                    this.vNode.icon({props: {type: info.icon || iviewConfig.infoIcon, size: 16}})\n                ]));\n            }\n            return this.vNode.make('span', {slot: 'label'}, svn);\n        }\n    }\n\n    makeCol(col, parser, fItemUnique, VNodeFn) {\n        if (col.span === undefined)\n            col.span = 24;\n        return this.vNode.col({\n            props: col, 'class': {\n                [style.__fc_h]: !!parser.rule.hidden,\n                [style.__fc_v]: !!parser.rule.visibility\n            }, key: `${fItemUnique}col1`\n        }, VNodeFn);\n    }\n\n    makeFormBtn() {\n        let btn = [],\n            submitBtnShow = false !== this.vm.buttonProps && false !== this.vm.buttonProps.show,\n            resetBtnShow = false !== this.vm.resetProps && false !== this.vm.resetProps.show;\n        if (submitBtnShow)\n            btn.push(this.makeSubmitBtn(resetBtnShow ? 19 : 24));\n        if (resetBtnShow)\n            btn.push(this.makeResetBtn(4));\n\n        return this.propsData.props.inline === true\n            ? btn\n            : (btn.length ? this.vNode.col({\n                props: {span: 24},\n                key: `${this.unique}col2`\n            }, btn) : []);\n    }\n\n    makeResetBtn(span) {\n        const resetBtn = this.vm.resetProps,\n            props = resetBtn.col || {span: span, push: 1};\n\n        return this.vNode.col({props: props, key: `${this.unique}col3`}, [\n            this.vNode.button({\n                key: `frsbtn${this.unique}`, props: resetBtn, on: {\n                    'click': () => {\n                        const fApi = this.$handle.fCreateApi;\n                        isFunction(resetBtn.click)\n                            ? resetBtn.click(fApi)\n                            : fApi.resetFields();\n                    }\n                }\n            }, [resetBtn.innerText])\n        ]);\n    }\n\n    makeSubmitBtn(span) {\n        const submitBtn = this.vm.buttonProps,\n            props = submitBtn.col || {span: span};\n\n        return this.vNode.col({props: props, key: `${this.unique}col4`}, [\n            this.vNode.button({\n                key: `fbtn${this.unique}`, props: submitBtn, on: {\n                    'click': () => {\n                        const fApi = this.$handle.fCreateApi;\n                        isFunction(submitBtn.click)\n                            ? submitBtn.click(fApi)\n                            : fApi.submit();\n                    }\n                }\n            }, [submitBtn.innerText])\n        ]);\n    }\n}\n","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'datePicker';\n\nexport default ['date', 'dateRange', 'dateTime', 'dateTimeRange', 'year', 'month'].reduce((maker, type) => {\n    maker[type] = creatorTypeFactory(name, type.toLowerCase());\n    return maker;\n}, {});","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'frame';\n\nconst types = {\n    frameInputs: ['input', 0],\n    frameFiles: ['file', 0],\n    frameImages: ['image', 0],\n    frameInputOne: ['input', 1],\n    frameFileOne: ['file', 1],\n    frameImageOne: ['image', 1]\n};\n\nconst maker = Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, m => m.props({type: types[key][0], maxLength: types[key][1]}));\n    return maker\n}, {});\n\n\nmaker.frameInput = maker.frameInputs;\nmaker.frameFile = maker.frameFiles;\nmaker.frameImage = maker.frameImages;\n\nexport default maker;","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'input';\n\nconst maker = ['password', 'url', 'email', 'text', 'textarea'].reduce((maker, type) => {\n    maker[type] = creatorTypeFactory(name, type);\n    return maker;\n}, {});\n\nmaker.idate = creatorTypeFactory(name, 'date');\n\nexport default maker;","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'select';\n\nexport default {\n    selectMultiple: creatorTypeFactory(name, true, 'multiple'),\n    selectOne: creatorTypeFactory(name, false, 'multiple'),\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'slider';\n\nexport default {\n    sliderRange: creatorTypeFactory(name, true, 'range')\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'timePicker';\n\nexport default {\n    time: creatorTypeFactory(name, 'time'),\n    timeRange: creatorTypeFactory(name, 'timerange')\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'tree';\n\nconst types = {'treeSelected': 'selected', 'treeChecked': 'checked'};\n\nexport default Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, types[key]);\n    return maker;\n}, {});","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'upload';\n\nconst types = {\n    image: ['image', 0],\n    file: ['file', 0],\n    uploadFileOne: ['file', 1],\n    uploadImageOne: ['image', 1],\n};\n\nconst maker = Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, m => m.props({uploadType: types[key][0], maxLength: types[key][1]}));\n    return maker\n}, {});\n\nmaker.uploadImage = maker.image;\nmaker.uploadFile = maker.file;\n\nexport default maker;","import {creatorFactory} from '@form-create/core';\nimport datePicker from './datePicker';\nimport frame from './frame';\nimport input from './input';\nimport select from './select';\nimport slider from './slider';\nimport timePicker from './timePicker';\nimport tree from './tree';\nimport upload from './upload';\n\nconst maker = {...datePicker, ...frame, ...input, ...select, ...slider, ...timePicker, ...tree, ...upload},\n    names = ['autoComplete', 'cascader', 'colorPicker', 'datePicker', 'frame', 'inputNumber', 'radio', 'rate', 'timePicker', 'group'];\n\nnames.forEach(name => {\n    maker[name] = creatorFactory(name);\n});\n\nmaker.auto = maker.autoComplete;\nmaker.number = maker.inputNumber;\nmaker.color = maker.colorPicker;\nmaker.hidden = (field, value) => creatorFactory('hidden')('', field, value);\n\nexport default maker;\n","import components from '../components';\nimport parsers from '../parsers';\nimport getConfig from './config';\nimport nodes from './nodes';\nimport formRender from './form';\nimport createFormCreate, {Creator, VNode} from '@form-create/core';\nimport makers from '../makers';\nimport {isPlainObject, toString} from '@form-create/utils';\n\nVNode.use(nodes);\n\nexport const drive = {\n    ui: process.env.UI,\n    version: process.env.VERSION,\n    formRender,\n    components,\n    parsers,\n    makers,\n    getConfig,\n};\n\nconst {FormCreate, install} = createFormCreate(drive);\n\nCreator.prototype.event = function (key, value) {\n    let event;\n\n    if (!isPlainObject(key)) {\n        event = {[key]: value}\n    } else {\n        event = key;\n    }\n\n    Object.keys(event).forEach((eventName) => {\n        const name = toString(eventName).indexOf('on-') === 0 ? eventName : `on-${eventName}`;\n        this.on(name, event[eventName]);\n    });\n    return this;\n};\n\nif (typeof window !== 'undefined') {\n    window.formCreate = FormCreate;\n    if (window.Vue) {\n        install(window.Vue);\n    }\n}\n\nexport default FormCreate;\n","import FormCreate from './core/index';\n\n\nconst maker = FormCreate.maker;\n\nexport {maker}\n\nexport default FormCreate;\n"],"names":["_extends","Object","assign","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","apply","this","normalMerge","toArrayMerge","functionalMerge","mergeJsxProps","reduce","indexOf","Array","e","concat","f","g","h","i","mergeFn","$set","target","field","value","Vue","set","$del","delete","isValidChildren","children","isArray","_toString","toString","isUndef","v","val","_typeof","JSON","stringify","String","extend","to","_from","key","debounce","fn","wait","timeout","arg","clearTimeout","setTimeout","isType","type","isDate","isPlainObject","isFunction","isString","isBool","toLine","name","line","replace","toLowerCase","substr","toArray","isElement","nodeType","deepExtend","origin","isArr","clone","nst","undefined","deepExtendArgs","lst","forEach","id","uniqueId","toDefSlot","slot","$h","timeStampToDate","timeStamp","date","Date","preventDefault","hasSlot","slotName","some","child","data","errMsg","NAME","props","options","default","ctx","watch","update","trueValue","unique","methods","onInput","n","$emit","filter","opt","label","map","_this","option","created","render","_this2","index","chlidren","iview2","_v","resetBtnType","resetBtnIcon","submitBtnIcon","fileIcon","fileUpIcon","imgUpIcon","infoIcon","removeIcon","addIcon","iview3","iviewConfig","iview","version","split","getConfig","form","inline","labelPosition","labelWidth","showMessage","autocomplete","size","row","gutter","align","justify","className","info","trigger","placement","wordWrap","icon","submitBtn","shape","long","htmlType","disabled","innerText","loading","show","col","click","resetBtn","formCreateName","$FormCreate","FormCreate","components","componentName","rule","required","formData","buttonProps","resetProps","$f","isShow","formCreate","_buttonProps","_resetProps","_refresh","handle","reloadRule","beforeCreate","$options","propsData","api","mounted","beforeDestroy","$render","clearCacheAll","objects","initial","arrA","arrB","event","hook","fn1","fn2","defVData","on","VData","init","_data","classList","status","merge","class","keys","keyList","objList","obj","vdataField","baseRule","validate","control","emit","template","emitPrefix","native","creatorFactory","title","Creator","creatorTypeFactory","typeName","maker","keyAttrs","attr","objAttrs","arrAttrs","toJson","getRule","_isVue","__inject","__origin","__emit","parseJson","json","parse","k","eval","console","error","enumerable","configurable","copyRule","copyRules","rules","r","commonMaker","create","make","createTmp","vm","makerFactory","toMaker","ruleToMaker","defineProperties","find","findField","model","parseVData","domProps","innerHTML","get","getVNode","VNode","setVm","$createElement","nodeName","VNodeFn","Node","context","nodes","toLocaleLowerCase","use","fragment","BaseParser","vData","vNode","originType","isDef","el","refName","formItemRefName","root","ctrlRule","modelEvent","$handle","deleted","formValue","$de","Render","fc","$form","cache","renderList","parser","clear","cacheStatus","refresh","parent","clearCache","vnode","parsers","orgChildren","beforeRender","vn","sortList","renderParser","global","toData","compile","getInjectData","setTemplateProps","fCreateApi","$off","$on","setGlobalConfig","renderTemplate","setCache","isNoVal","defaultRender","renderChildren","container","getCache","custom","parserToData","ref","subForm","_this3","addSubForm","getFormData","inputVData","__fc__","_this4","removeField","vdata","fApi","$props","Api","tidyFields","fields","all","fieldList","getValue","setValue","changeValue","changeField","getParser","__origin__","splice","reload","destroy","$el","parentNode","removeChild","$destroy","append","after","isChild","prepend","hidden","hiddenStatus","visibility","visibilityStatus","trueData","component","customData","bind","properties","submitBtnProps","resetBtnProps","node","updateOptions","onSubmit","sync","hideForm","changeStatus","clearChangeStatus","updateRule","cover","updateRules","updateValidate","updateValidates","validates","method","Error","once","$once","off","args","callback","subLen","state","___this","valid","len","validFn","clearValidateState","sub","validateField","resetFields","resetField","refreshControl","submit","successFn","failFn","clearSub","_this5","clearSubValidateState","getSubForm","btn","closeModal","closeModel","Handle","watching","__init","drive","formRender","loadRule","initOrgChildren","modelList","modelEvents","_rule","parseOn","parseProps","createParser","parseRule","notField","setParser","bindParser","push","defineProperty","valueHandle","toValue","isChange","setFormData","toFormValue","valueChange","def","defRule","parseArray","parseInjectEvent","margeEmit","emitEvent","parseEmit","injectEvent","inject","self","_fn","unshift","emitKey","config","eventName","fieldKey","run","validateControl","writable","$watch","o","_this6","deep","immediate","controls","getControl","removeControl","_this7","_this8","addParserWitch","$refs","defaultValue","mountedParser","onReload","delParser","_this9","$nextTick","unWatch","__field__","functional","_vue","window","createFormCreate","globalConfig","_id","get$FormCreate","margeGlobal","_options","document","querySelector","body","bindAttr","ui","$vm","$data","$mount","params","$parent","_opt","appendChild","$formCreate","mount","remove","makers","install","_installedFormCreate","BaseForm","mCol","pCol","Modal","cb","modal","onClose","content","defaultOnHandle","src","footerHide","style","width","attrs","styleInject","css","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","styleSheet","cssText","createTextNode","helper","Boolean","Number","height","maxLength","okBtnText","closeBtnText","modalTitle","handleIcon","allowRemove","onOpen","Function","onOk","onCancel","onLoad","onBeforeRemove","onRemove","onHandle","srcKey","modalVm","fileList","showModel","_vm","path","contentWindow","close","log","button","makeInput","getSrc","readonly","clearable","makeGroup","makeBtn","makeItem","makeIcons","icons","makeHandleIcon","makeRemoveIcon","handleClick","handleRemove","makeFiles","makeImages","treeData","setStatus","tree","selected","checked","makeTree","updateTreeData","getSelectedNodes","getCheckedNodes","flatState","parseFile","file","url","getFileName","pop","uploadType","uploadList","showUploadList","defaultFileList","upload","every","isDisabled","makeDefaultBtn","makeProgress","percent","percentage","hideInfo","showProgress","makeUpload","display","initChildren","files","max","min","cacheRule","group$f","fieldRule","computed","formRule","total","addRule","removeRule","add$f","syncData","$delete","delIcon","makeIcon","checkbox","frame","radio","select","group","input","Parser","startDate","includes","multiple","formatDate","separator","isRange","_toValue","parseValue","time","parseDate","autosize","minRows","range","parseFloat","switch","scopedSlots","open","datePicker","slider","iswitch","rate","cascader","colorPicker","timePicker","inputNumber","formItem","autoComplete","isTooltip","Form","getFormRef","fItem","validateMessage","validateState","nativeOn","makeFormBtn","makeRow","makeFormItem","fItemUnique","getGetCol","_col","prop","makeFormPop","makeCol","svn","span","__fc_h","__fc_v","submitBtnShow","resetBtnShow","makeSubmitBtn","makeResetBtn","types","frameInputs","frameFiles","frameImages","frameInputOne","frameFileOne","frameImageOne","m","frameInput","frameFile","frameImage","idate","selectMultiple","selectOne","sliderRange","timeRange","image","uploadFileOne","uploadImageOne","uploadImage","uploadFile","names","auto","number","color","process"],"mappings":"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"}