{"version":3,"file":"form-create.min.js","sources":["../src/core/util.js","../src/factory/handler.js","../src/factory/vNode.js","../src/factory/vData.js","../src/factory/render.js","../src/factory/creator.js","../src/components/hidden.js","../src/components/input.js","../src/components/radio.js","../src/components/checkbox.js","../src/components/switch.js","../src/components/select.js","../src/components/datePicker.js","../src/components/timePicker.js","../src/components/inputNumber.js","../src/components/colorPicker.js","../src/components/upload.js","../src/components/cascader.js","../src/components/rate.js","../src/components/slider.js","../src/components/frame.js","../src/components/tree.js","../src/core/componentList.js","../src/components/autoComplete.js","../src/core/common.js","../src/components/form.js","../src/core/component.js","../src/core/maker.js","../src/core/formCreate.js","../src/index.js","../src/core/formCreateComponent.js"],"sourcesContent":["import Vue from 'vue';\n\nexport function $nt(fn) {\n    Vue.nextTick(fn);\n}\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n\n\nexport const _toString = Object.prototype.toString;\n\nexport function toRawType(value) {\n    return _toString.call(value).slice(8, -1)\n}\n\nexport function isUndef(v) {\n    return v === undefined || v === null\n}\n\nexport function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n\nexport function extend(to, _from) {\n    for (var key in _from) {\n        $set(to, key, _from[key]);\n    }\n    return to\n}\n\nexport function debounce(fn, wait) {\n    var timeout = null;\n    return function (...arg) {\n        if (timeout !== null)\n            clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...arg), wait);\n    }\n}\n\nexport function isDate(arg) {\n    return _toString.call(arg) === '[object Date]'\n}\n\nexport function isPlainObject(arg) {\n    return _toString.call(arg) === '[object Object]'\n}\n\nexport function isFunction(arg) {\n    return _toString.call(arg) === '[object Function]'\n}\n\nexport function isString(arg) {\n    return _toString.call(arg) === '[object String]'\n}\n\nexport function isBool(arg) {\n    return _toString.call(arg) === '[object Boolean]'\n}\n\nexport function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n\nexport function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n)\n}\n\nexport function toArray(a) {\n    return Array.isArray(a) ? a : [a]\n}\n\nexport function ATS(a) {\n    return Array.isArray(a) ? (a[0] || '') : a\n}\n\nexport function isElement(arg) {\n    return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !isPlainObject(arg)\n}\n\nexport function deepExtend(origin, target = {}) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || isPlainObject(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                deepExtend(origin[key], clone);\n            } else {\n                $set(origin, key, clone);\n            }\n        }\n    }\n    return origin\n}\n\nlet id = 0;\n\nexport function uniqueId() {\n    return ++id\n}\n\nexport function dateFormat(fmt, date = new Date) {\n    let o = {\n        \"M+\": date.getMonth() + 1,\n        \"d+\": date.getDate(),\n        \"h+\": date.getHours(),\n        \"m+\": date.getMinutes(),\n        \"s+\": date.getSeconds(),\n        \"q+\": Math.floor((date.getMonth() + 3) / 3),\n        \"S\": date.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (let k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1)\n                ? (o[k])\n                : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    return fmt\n}\n\nexport function errMsg() {\n\n    return '\\n\\x67\\x69\\x74\\x68\\x75\\x62\\x3a\\x68\\x74\\x74\\x70' +\n        '\\x73\\x3a\\x2f\\x2f\\x67\\x69\\x74\\x68\\x75\\x62\\x2e\\x63\\x6f' +\n        '\\x6d\\x2f\\x78\\x61\\x62\\x6f\\x79\\x2f\\x66\\x6f\\x72\\x6d\\x2d' +\n        '\\x63\\x72\\x65\\x61\\x74\\x65\\n\\x64\\x6f\\x63\\x75\\x6d\\x65' +\n        '\\x6e\\x74\\x3a\\x68\\x74\\x74\\x70\\x3a\\x2f\\x2f\\x77\\x77\\x77' +\n        '\\x2e\\x66\\x6f\\x72\\x6d\\x2d\\x63\\x72\\x65\\x61\\x74\\x65\\x2e' +\n        '\\x63\\x6f\\x6d';\n}\n","import {isNumeric, uniqueId, toLine, isUndef, extend, toString, deepExtend, errMsg, $set, isString} from \"../core/util\";\n\nexport default class Handler {\n\n    constructor(vm, _rule, Render, options, noValue) {\n\n        const rule = parseRule(_rule, vm, noValue);\n\n        this.rule = rule;\n        this.noValue = noValue;\n        this.type = toString(rule.type).toLowerCase();\n        this.isDef = true;\n        this.vm = vm;\n        this.el = {};\n        this.watch = [];\n        this.root = [];\n        this.origin = [];\n\n        if (!rule.field && noValue) {\n            this.field = 'tmp' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n\n        this.init();\n        this.refresh();\n        this.refName = '__' + this.field + this.id;\n\n        if (isUndef(rule.props.elementId))\n            $set(rule.props, 'elementId', this.unique);\n\n        this.render = new Render(vm, this, options);\n    }\n\n    refresh() {\n        const id = uniqueId();\n        this.id = id;\n        this.unique = 'fc_' + id;\n        this.key = 'key_' + id;\n        this.parseValue = this.toFormValue(this.rule.value);\n        return this;\n    }\n\n\n    init() {\n\n    }\n\n    toFormValue(value) {\n        return value;\n    }\n\n    toValue(parseValue) {\n        return parseValue;\n    }\n\n    setValue(value) {\n        this.rule.value = value;\n        this.vm._changeValue(this.field, value);\n    }\n\n    getValue() {\n        return this.vm._value(this.field);\n    }\n\n    watchValue(n) {\n        $set(this.rule, 'value', n);\n        this.vm._changeFormData(this.field, this.toFormValue(n));\n    }\n\n    watchFormValue(n) {\n    }\n\n    reset() {\n        this.vm._changeValue(this.field, this.defaultValue);\n    }\n\n    mounted() {\n        let refName = 'fItem' + this.refName, vm = this.vm, children = this.rule.children;\n        this.el = vm.$refs[this.refName];\n        this.defaultValue = this.toValue(vm.$refs[refName]\n            ? vm.$refs[refName].initialValue : deepExtend({}, {value: this.rule.value}).value);\n        if (Array.isArray(children) && children.length > 0)\n            children.forEach(child => !isString(child) && child.__handler__.mounted());\n    }\n}\n\nexport function defRule() {\n    return {\n        validate: [],\n        event: {},\n        col: {},\n        emit: [],\n        props: [],\n        on: {},\n        options: [],\n        title: '',\n        value: '',\n        field: '',\n        className: ''\n    }\n}\n\nexport function parseRule(rule, vm, noVal) {\n\n    const def = defRule();\n    Object.keys(def).forEach((k) => {\n        if (isUndef(rule[k]))\n            $set(rule, k, def[k]);\n    });\n\n    const parseRule = {\n        col: parseCol(rule.col),\n        props: parseProps(rule.props),\n        emitEvent: parseEmit(rule.field, rule.emitPrefix, rule.emit, vm),\n        validate: parseArray(rule.validate),\n        options: parseArray(rule.options)\n    };\n\n    parseRule.event = extend(parseEvent(rule.event), parseRule.emitEvent);\n    parseRule.on = parseOn(rule.on, parseRule.emitEvent);\n\n    Object.keys(parseRule).forEach((k) => {\n        $set(rule, k, parseRule[k]);\n    });\n\n    if (!rule.field && !noVal) {\n        console.error('规则的 field 字段不能空' + errMsg());\n    }\n\n    return rule\n}\n\nexport function parseOn(on, emitEvent) {\n    if (Object.keys(emitEvent).length > 0)\n        extend(on, emitEvent);\n    return on;\n}\n\nexport function parseArray(validate) {\n    return Array.isArray(validate) ? validate : []\n}\n\nexport function parseEmit(field, emitPrefix, emit, vm) {\n    let event = {};\n\n    if (!Array.isArray(emit)) return event;\n\n    emit.forEach((eventName) => {\n\n        const fieldKey = toLine(`${field}-${eventName}`).replace('_', '-');\n\n        const emitKey = emitPrefix ? ((`${emitPrefix}-`).toLowerCase() + toLine(eventName)) : emitPrefix;\n\n        event[`on-${eventName}`] = event[eventName] = (...arg) => {\n            vm.$emit(fieldKey, ...arg);\n            if (emitKey && fieldKey !== emitKey)\n                vm.$emit(emitKey, ...arg);\n        };\n    });\n\n    return event\n}\n\nexport function parseEvent(event) {\n    Object.keys(event).forEach(function (eventName) {\n        const _name = toString(eventName).indexOf('on-') === 0 ? eventName : `on-${eventName}`;\n\n        if (_name !== eventName) {\n            $set(event, _name, event[eventName]);\n        }\n    });\n\n    return event\n}\n\nexport function parseProps(props) {\n    if (isUndef(props.hidden))\n        $set(props, 'hidden', false);\n    if (isUndef(props.visibility))\n        $set(props, 'visibility', false);\n\n    return props\n}\n\nexport function parseCol(col) {\n    if (isNumeric(col)) {\n        return {span: col};\n    } else if (col.span === undefined)\n        $set(col, 'span', 24);\n\n    return col\n}\n","import {isFunction, isString} from '../core/util'\n\nexport function parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data\n}\n\nexport function getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || [])\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node\n    }\n}\n\nconst nodes = {\n    modal: 'Modal',\n    progress: 'i-progress',\n    button: 'i-button',\n    icon: 'Icon',\n    span: 'span',\n    slider: 'Slider',\n    rate: 'Rate',\n    upload: 'Upload',\n    cascader: 'Cascader',\n    colorPicker: 'Color-Picker',\n    timePicker: 'Time-Picker',\n    datePicker: 'Date-Picker',\n    'switch': 'i-switch',\n    option: 'i-option',\n    select: 'i-select',\n    checkbox: 'Checkbox',\n    checkboxGroup: 'Checkbox-Group',\n    radio: 'Radio',\n    radioGroup: 'Radio-Group',\n    inputNumber: 'Input-Number',\n    input: 'i-input',\n    formItem: 'Form-Item',\n    form: 'i-form',\n    col: 'i-col',\n    row: 'row',\n    tree: 'Tree',\n    AutoComplete: 'AutoComplete',\n};\n\nObject.keys(nodes).forEach((k) => {\n    VNode.prototype[k] = function (data, VNodeFn) {\n        return this.make(nodes[k], data, VNodeFn);\n    }\n});\n","import {isPlainObject, isUndef, toArray, extend, toString, $set} from '../core/util';\n\nexport function defVData() {\n    return {\n        class: {},\n        style: {},\n        attrs: {},\n        props: {},\n        domProps: {},\n        on: {},\n        nativeOn: {},\n        directives: [],\n        scopedSlots: {},\n        slot: undefined,\n        key: undefined,\n        ref: undefined\n    }\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            classList.forEach((cls) => {\n                $set(this._data.class, toString(cls), true);\n            })\n        } else if (isPlainObject(classList)) {\n            $set(this._data, 'class', extend(this._data.class, classList));\n        } else {\n            $set(this._data.class, toString(classList), status === undefined ? true : status);\n        }\n\n        return this\n    }\n\n    directives(directives) {\n        if (isUndef(directives)) return this;\n        $set(this._data, 'directives', this._data.directives.concat(toArray(directives)));\n        return this\n    }\n\n    init() {\n        this._data = defVData();\n        return this\n    }\n\n    get() {\n        this._prev = this._data;\n        this.init();\n        return this._prev\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        $set(this._data, key, val);\n        return this\n    }\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n\n        if (isPlainObject(obj)) {\n            $set(this._data, key, extend(this._data[key], obj));\n        } else {\n            $set(this._data[key], toString(obj), val);\n        }\n\n        return this\n    }\n});\n\n","import {$nt, errMsg, extend, isFunction, isString, isUndef, uniqueId} from '../core/util';\nimport VNode from \"./vNode\";\nimport VData from \"./vData\";\nimport Vue from 'vue';\n\nexport default class Render {\n\n    constructor(vm, handler, options = {}) {\n        this.vm = vm;\n        this.handler = handler;\n        this.options = options;\n        this.vNode = new VNode(vm);\n        this.vData = new VData;\n        this.cache = null;\n        this.$tickEvent = [];\n\n        this.init();\n    }\n\n    init() {\n\n    }\n\n    cacheParse(form, _super) {\n        let {noValue, noCache} = this.handler;\n        if (!this.cache || noValue === true || noCache === true)\n            this.cache = _super ? _super.parse.call(this, form) : this.parse(form);\n        let eventList = [...this.$tickEvent];\n        this.$tickEvent = [];\n        if (eventList.length)\n            $nt(() => {\n                eventList.forEach(event => event());\n            });\n        return this.cache\n    }\n\n    sync(event) {\n        if (isFunction(event))\n            this.$tickEvent.push(event);\n        this.clearCache();\n        this.vm._sync();\n    }\n\n    clearCache() {\n        this.cache = null;\n        let children = this.handler.rule.children;\n\n        if (Array.isArray(children) && children.length > 0)\n            children.forEach(child => !isString(child) && child.__handler__.render.clearCache());\n    }\n\n    parse(form) {\n        let {type, rule, refName, key, noValue, origin, root, vm} = this.handler;\n\n        if (rule.type === 'template') {\n            if (Vue.compile !== undefined) {\n                if (isUndef(rule.vm)) rule.vm = new Vue;\n\n                let vn = Vue.compile(rule.template, {}).render.call(rule.vm);\n                if (vn.data === undefined) vn.data = {};\n                extend(vn.data, rule);\n                vn.key = key;\n                return [vn];\n            } else {\n                console.error('使用的 Vue 版本不支持 compile' + errMsg());\n                return [];\n            }\n        } else if (!noValue) {\n\n            origin.forEach(_rule => {\n                if (root.indexOf(_rule) === -1) {\n                    vm._fComponent.removeField(_rule.__field__);\n                }\n            });\n            this.handler.origin = [...root];\n\n            return form.makeComponent(this.handler.render);\n        } else {\n            rule.ref = refName;\n            if (isUndef(rule.key))\n                rule.key = 'def' + uniqueId();\n            let vn = this.vNode.make(type, {...rule}, () => {\n                let vn = [], children = rule.children || [];\n                if (Array.isArray(children) && children.length > 0) {\n                    vn = children.map((child) => {\n                        if (isString(child))\n                            return [child];\n                        if (!child.__handler__)\n                            vm._fComponent.createHandler([child], true);\n                        return child.__handler__.render.cacheParse(form, this);\n                    });\n                }\n\n                return vn;\n            });\n\n            vn.key = key;\n            return [vn];\n        }\n\n    }\n\n    inputProps() {\n        let {refName, key, field, rule: {props, event}} = this.handler;\n        let data = this.vData\n            .props(props).props({value: this.vm._formData(field)})\n            .ref(refName).key(key + 'fc' + field).on(event).on('input', (value) => {\n                this.onInput(value)\n            });\n        if (isUndef(props.size))\n            data.props({size: this.options.form.size});\n\n        return data;\n    }\n\n    onInput(value) {\n        let handler = this.handler, {field, vm} = this.handler, trueValue = handler.toValue(value);\n        vm._changeFormData(field, value);\n        handler.setValue(trueValue);\n        vm._change(field, JSON.stringify(value));\n        handler.watchFormValue(value);\n    }\n\n}\n","import {$set, extend, isFunction, isPlainObject} from \"../core/util\";\nimport VData from \"./vData\";\n\nexport function baseRule() {\n    return {\n        event: {},\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        emit: [],\n        template: null,\n        emitPrefix: null\n    }\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props)\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type))\n            type(maker);\n        else\n            maker.props(typeName, type);\n        return maker\n    }\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n\n        this.rule = extend(baseRule(), {type, title, field, value});\n        this.props({hidden: false, visibility: false});\n        if (isPlainObject(props))\n            this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this\n    }\n\n    get() {\n        return this._data;\n    }\n\n    getRule() {\n        return extend(this.rule, this.get());\n    }\n\n    setValue(value) {\n        $set(this.rule, 'value', value);\n        return this\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'defaultSlot'];\n\nkeyAttrs.forEach((attr) => {\n    Creator.prototype[attr] = function (value) {\n        $set(this.rule, attr, value);\n        return this;\n    }\n});\n\nconst objAttrs = ['event', 'col'];\n\nobjAttrs.forEach((attr) => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this.rule, attr, extend(this.rule[attr], opt));\n        return this;\n    }\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit'];\n\narrAttrs.forEach((attr) => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this.rule, attr, this.rule[attr].concat(opt));\n        return this;\n    }\n});\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {creatorFactory} from \"../factory/creator\";\n\nconst name = \"hidden\";\n\nclass handler extends Handler {\n\n}\n\nclass render extends Render {\n    parse() {\n        return [];\n    }\n}\n\nconst maker = {\n    [name]: (field, value) => creatorFactory(name)('', field, value)\n};\n\nexport default {handler, render, name, maker};\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {creatorTypeFactory} from \"../factory/creator\";\nimport {$set, toString} from \"../core/util\";\n\nconst name = \"input\";\n\nexport class handler extends Handler {\n    init() {\n        let {props} = this.rule;\n        if (props.autosize && props.autosize.minRows)\n            $set(props, 'rows', props.autosize.minRows || 2);\n    }\n\n    toFormValue(v) {\n        return toString(v)\n    }\n}\n\nexport class render extends Render {\n    parse() {\n        return [this.vNode.input(this.inputProps().get())];\n    }\n\n\n}\n\nconst maker = ['password', 'url', 'email', 'text'].reduce((initial, type) => {\n    initial[type] = creatorTypeFactory(name, type);\n    return initial;\n}, {});\n\nmaker.idate = creatorTypeFactory(name, 'date');\n\nexport default {render, handler, name, maker}\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {extend} from \"../core/util\";\n\nconst name = \"radio\";\n\nclass handler extends Handler {\n    toFormValue(value) {\n        return this.rule.options.filter((opt) => opt.value === value).reduce((initial, opt) => opt.label, '')\n    }\n\n    toValue(parseValue) {\n        return this.rule.options.filter((opt) => opt.label === parseValue).reduce((initial, opt) => opt.value, '')\n    }\n\n}\n\nclass render extends Render {\n    parse() {\n        let {unique, rule: {options}} = this.handler;\n        return [this.vNode.radioGroup(this.inputProps().get(), () => options.map((option, index) => {\n            let clone = {...option};\n            delete clone.value;\n\n            return this.vNode.radio({\n                props: clone,\n                key: `ropt${index}${unique}`\n            })\n        }))]\n    }\n}\n\nexport default {handler, render, name}\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {extend} from \"../core/util\";\n\nconst name = \"checkbox\";\n\nclass handler extends Handler {\n    toFormValue(value) {\n        if (!value)\n            value = [];\n        else if (!Array.isArray(value))\n            value = [value];\n        return this.rule.options.filter((opt) => value.indexOf(opt.value) !== -1)\n            .map((option) => option.label);\n    }\n\n    toValue(parseValue) {\n        let value = this.rule.options.filter((opt) => parseValue.indexOf(opt.label) !== -1)\n            .map((opt) => opt.value);\n        if (this.rule.options.length === 1)\n            return value[0] === undefined ? '' : value[0];\n        else\n            return value;\n    }\n\n    watchFormValue(n) {\n        super.watchFormValue(n);\n        this.render.sync();\n    }\n}\n\nclass render extends Render {\n    parse() {\n        let {unique, rule: {options}, key} = this.handler;\n        return [this.vNode.checkboxGroup(this.inputProps().key(key).get(), () => options.map((option, index) => {\n            let clone = {...option};\n            delete clone.value;\n            return this.vNode.checkbox({\n                props: clone,\n                key: `copt${index}${unique}`\n            })\n        }))];\n    }\n}\n\nexport default {handler, render, name};\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {$set, isUndef} from \"../core/util\";\n\nconst name = \"switch\";\n\nclass handler extends Handler {\n    init() {\n        if (this.rule.slot === undefined) $set(this.rule, 'slot', {});\n    }\n}\n\nclass render extends Render {\n    parse() {\n        let rule = this.handler.rule, slot = isUndef(rule.props.slot) ? rule.slot : rule.props.slot;\n\n        return [this.vNode.switch(this.inputProps().scopedSlots({\n            open: () => slot.open,\n            close: () => slot.close\n        }).style({'margin': '4.5px 0px'}).get())]\n    }\n}\n\nexport default {handler, render, name};\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {creatorTypeFactory} from \"../factory/creator\";\nimport {toDefSlot} from \"../core/common\";\n\nconst name = \"select\";\n\nclass handler extends Handler {\n    toFormValue(value) {\n        let isArr = Array.isArray(value);\n        if (this.rule.props.multiple === true)\n            return isArr === true ? value : [value];\n        else\n            return isArr === true ? (value[0] || '') : value;\n    }\n\n    watchFormValue(n) {\n        super.watchFormValue(n);\n        this.render.sync();\n    }\n}\n\nclass render extends Render {\n    parse() {\n        let {unique, rule} = this.handler;\n        return [this.vNode.select(this.inputProps().get(), () => rule.options.map((option, index) => this.vNode.option({\n            props: option,\n            key: `sopt${index}${unique}`,\n        }, toDefSlot(option.slot, this.vm.$createElement, rule))))];\n    }\n}\n\nconst maker = {\n    selectMultiple: creatorTypeFactory(name, true, 'multiple'),\n    selectOne: creatorTypeFactory(name, false, 'multiple'),\n};\n\nexport default {handler, render, name, maker};\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {timeStampToDate, toDefSlot} from \"../core/common\";\nimport {creatorTypeFactory} from \"../factory/creator\";\nimport {$set, isUndef, toString} from \"../core/util\";\n\nconst name = \"datePicker\";\n\nclass handler extends Handler {\n    init() {\n        let props = this.rule.props;\n\n        $set(props, 'type', !props.type\n            ? 'date'\n            : toString(props.type).toLowerCase());\n\n        if (isUndef(props.startDate))\n            $set(props, 'startDate', timeStampToDate(props.startDate));\n    }\n\n    toFormValue(value) {\n        let isArr = Array.isArray(value), props = this.rule.props, parseValue;\n        if (['daterange', 'datetimerange'].indexOf(props.type) !== -1) {\n            if (isArr) {\n                parseValue = value.map((time) => !time ? '' : timeStampToDate(time));\n            } else {\n                parseValue = ['', '']\n            }\n        } else if ('date' === props.type && props.multiple === true) {\n            parseValue = toString(value);\n        } else {\n            parseValue = isArr ? (value[0] || '') : value;\n            parseValue = !parseValue ? '' : timeStampToDate(parseValue);\n        }\n        return parseValue;\n    }\n\n    toValue() {\n        return this.el.publicStringValue;\n    }\n\n    mounted() {\n        super.mounted();\n        this.rule.value = this.el.publicStringValue;\n        this.vm._changeFormData(this.field, this.toFormValue(this.el.publicStringValue));\n    }\n}\n\nclass render extends Render {\n    parse() {\n        let {key, rule, vm} = this.handler;\n        return [this.vNode.datePicker(this.inputProps().key(key).get(), toDefSlot(rule.defaultSlot, vm.$createElement, rule))];\n    }\n}\n\nconst maker = ['date', 'dateRange', 'dateTime', 'dateTimeRange', 'year', 'month'].reduce((initial, type) => {\n    initial[type] = creatorTypeFactory(name, type.toLowerCase());\n    return initial\n}, {});\n\nexport default {handler, render, name, maker};\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {$set, dateFormat, isDate, isUndef} from \"../core/util\";\nimport {timeStampToDate, toDefSlot} from \"../core/common\";\nimport {creatorTypeFactory} from \"../factory/creator\";\n\nconst name = 'timePicker';\n\nexport function getTime(date) {\n    return isDate(date)\n        ? dateFormat('hh:mm:ss', date)\n        : date;\n}\n\nclass handler extends Handler {\n\n    init() {\n        let props = this.rule.props;\n        if (!props.type) $set(props, 'type', 'time');\n        if (isUndef(props.confirm)) $set(props, 'confirm', true);\n    }\n\n    toFormValue(value) {\n        let parseValue, isArr = Array.isArray(value);\n        if ('timerange' === this.rule.props.type) {\n            if (isArr) {\n                parseValue = value.map((time) => !time ? '' : getTime(timeStampToDate(time)));\n            } else {\n                parseValue = ['', ''];\n            }\n        } else {\n            isArr && (value = value[0]);\n            parseValue = !value ? '' : getTime(timeStampToDate(value));\n        }\n        return parseValue;\n    }\n\n    mounted() {\n        super.mounted();\n        this.rule.value = this.el.publicStringValue;\n        this.vm._changeFormData(this.field, this.toFormValue(this.el.publicStringValue));\n    }\n}\n\nclass render extends Render {\n    parse() {\n\n        let {key, rule, vm} = this.handler;\n        return [this.vNode.timePicker(this.inputProps().key(key).get(), toDefSlot(rule.defaultSlot, vm.$createElement, rule))];\n    }\n}\n\nconst maker = {\n    time: creatorTypeFactory(name, 'time'),\n    timeRange: creatorTypeFactory(name, 'timerange')\n};\n\nexport default {handler, render, maker, name};\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {creatorFactory} from \"../factory/creator\";\n\nconst name = \"inputNumber\";\n\nclass handler extends Handler {\n    toFormValue(value) {\n        let parseValue = parseFloat(value);\n        if (Number.isNaN(parseValue)) parseValue = 0;\n        return parseValue\n    }\n\n}\n\n\nclass render extends Render {\n    parse() {\n        return [this.vNode.inputNumber(this.inputProps().get())]\n    }\n}\n\nconst maker = {\n    number: creatorFactory(name)\n};\n\nexport default {handler, render, name, maker}\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {creatorFactory} from \"../factory/creator\";\n\nconst name = \"colorPicker\";\n\nclass handler extends Handler {\n\n    watchFormValue(n) {\n        super.watchFormValue(n);\n        this.render.sync();\n    }\n}\n\nclass render extends Render {\n    parse() {\n        return [this.vNode.colorPicker(this.inputProps().key(this.handler.key).get())];\n    }\n}\n\nconst maker = {\n    color: creatorFactory(name)\n};\n\nexport default {handler, render, name, maker};\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {$set, extend, isUndef, toString, uniqueId} from \"../core/util\";\nimport {iviewConfig} from \"../core/common\";\nimport {creatorTypeFactory} from \"../factory/creator\";\n\nconst name = \"upload\";\n\nexport function getFileName(pic) {\n    return toString(pic).split('/').pop()\n}\n\nexport function parseValue(value) {\n    return Array.isArray(value)\n        ? value\n        : ((!value ? [] : [value])\n        );\n}\n\nclass handler extends Handler {\n    init() {\n        let props = this.rule.props;\n        $set(props, 'defaultFileList', []);\n        if (isUndef(props.showUploadList)) $set(props, 'showUploadList', false);\n        if (isUndef(props.uploadType)) $set(props, 'uploadType', 'file');\n\n        if (props.maxLength === undefined) $set(props, 'maxLength', 0);\n        if (props.action === undefined) $set(props, 'action', '');\n        if (props.uploadType === 'file' && props.handleIcon === undefined) $set(props, 'handleIcon', false);\n\n        $set(this.rule, 'value', parseValue(this.rule.value));\n\n        this.parseValue = [];\n\n    }\n\n    toFormValue(value) {\n        let files = parseValue(value);\n        this.parseValue.splice(0, this.parseValue.length);\n        files.forEach((file) => this.push(file));\n        $set(this.rule.props, 'defaultFileList', this.parseValue);\n        return this.parseValue;\n    }\n\n    mounted() {\n        super.mounted();\n        $set(this.rule.props, 'defaultFileList', this.parseValue);\n        this.changeParseValue(this.el.fileList);\n    }\n\n    push(file) {\n        this.parseValue.push({\n            url: file,\n            name: getFileName(file)\n        });\n    }\n\n    toValue(parseValue) {\n        if (isUndef(parseValue)) return [];\n        let files = parseValue.map((file) => file.url).filter((file) => file !== undefined);\n        return this.rule.props.maxLength === 1\n            ? (files[0] || '')\n            : files;\n    }\n\n    changeParseValue(parseValue) {\n        this.parseValue = parseValue;\n        this.vm._changeFormData(this.field, parseValue);\n    }\n\n    watchValue(n) {\n        let b = true;\n        this.rule.props.defaultFileList.forEach((pic) => {\n            b = b && (pic.percentage === undefined || pic.status === 'finished');\n        });\n        if (b)\n            super.watchValue(n);\n    }\n\n\n}\n\n\n//const propsEventType = ['beforeUpload','onProgress','onPreview','onRemove','onFormatError','onExceededSize','onError'];\n\nclass render extends Render {\n    init() {\n        let handler = this.handler;\n        this.uploadOptions = extend({...this.options.upload}, this.handler.rule.props);\n        this.issetIcon = this.uploadOptions.allowRemove || this.uploadOptions.handleIcon;\n        this.propsData = this.vData.props(this.uploadOptions)\n            .props('onSuccess', (...args) => this.onSuccess(...args))\n            .props('onRemove', (...args) => this.onRemove(...args))\n            .ref(handler.refName).key(`fip${handler.unique}`).get();\n    }\n\n    onRemove(...args) {\n        this.handler.changeParseValue(this.handler.el.fileList);\n        this.uploadOptions.onRemove && this.uploadOptions.onRemove(...args);\n        this.sync();\n    }\n\n    onSuccess(response, file, fileList) {\n        let url = this.uploadOptions.onSuccess.call(null, response, file, fileList);\n        if (!isUndef(url)) {\n            file.url = url;\n            file.showProgress = false;\n\n        } else {\n            let index = fileList.indexOf(file);\n            if (index !== -1)\n                fileList.splice(index, 1);\n        }\n        this.handler.changeParseValue(this.handler.el.fileList);\n    }\n\n    defaultOnHandle(src) {\n        this.vm.$Modal.remove();\n        setTimeout(() => {\n            this.vm.$Modal.info({\n                title: \"预览\",\n                render: (h) => {\n                    return h('img', {attrs: {src}, style: \"width: 100%\", key: 'ifmd' + uniqueId()});\n                },\n                showCancel: true,\n                closable: true,\n                scrollable: true\n            });\n        }, 301);\n    }\n\n    onHandle(src) {\n        let fn = this.uploadOptions.onHandle;\n        if (fn)\n            return fn(src);\n        else\n            this.defaultOnHandle(src);\n    }\n\n    parse() {\n        let {unique, field} = this.handler;\n        this.init();\n        if (this.uploadOptions.handleIcon === true) this.uploadOptions.handleIcon = 'ios-eye-outline';\n        let value = this.vm._formData(field),\n            render = this.uploadOptions.showUploadList ? [] : [...value.map((file, index) => {\n                if (file.showProgress) {\n                    return this.makeProgress(file, `uppg${index}${unique}`);\n                } else if (file.status === undefined || file.status === 'finished') {\n                    return this.makeUploadView(file.url, `upview${index}${unique}`, index)\n                }\n            })];\n        const isShow = (!this.uploadOptions.maxLength || this.uploadOptions.maxLength > value.length);\n        render.push(this.makeUploadBtn(unique, isShow));\n        return [this.vNode.make('div', {\n            key: `div4${unique}`,\n            class: {'fc-upload': true, 'fc-hide-btn': !isShow}\n        }, render)];\n    }\n\n    cacheParse(form) {\n        this.cache = null;\n        return super.cacheParse(form);\n    }\n\n    makeUploadView(src, key, index) {\n        return this.vNode.make('div', {key: `div1${key}`, class: {'fc-files': true}}, () => {\n            let container = [];\n            if (this.handler.rule.props.uploadType === 'image') {\n                container.push(this.vNode.make('img', {key: `img${key}`, attrs: {src}}));\n            } else {\n                container.push(this.vNode.icon({key: `file${key}`, props: {type: iviewConfig.fileIcon, size: 40}}))\n            }\n            if (this.issetIcon)\n                container.push(this.makeIcons(src, key, index));\n            return container;\n        });\n    }\n\n    makeIcons(src, key, index) {\n        return this.vNode.make('div', {key: `div2${key}`, class: {'fc-upload-cover': true}}, () => {\n            let icon = [];\n            if (!!this.uploadOptions.handleIcon)\n                icon.push(this.makeHandleIcon(src, key, index));\n            if (this.uploadOptions.allowRemove === true)\n                icon.push(this.makeRemoveIcon(src, key, index));\n            return icon;\n        });\n    }\n\n    makeProgress(file, unique) {\n        return this.vNode.make('div', {key: `div3${unique}`, class: {'fc-files': true}}, [\n            this.vNode.progress({\n                key: `upp${unique}`,\n                props: {percent: file.percentage, hideInfo: true},\n                style: {width: '90%'}\n            })\n        ]);\n    }\n\n    makeUploadBtn(unique, isShow) {\n        return this.vNode.upload(this.propsData,\n            isShow === true ? [\n                this.vNode.make('div', {key: `div5${unique}`, class: {'fc-upload-btn': true}}, [\n                    this.vNode.icon({\n                        key: `upi${unique}`,\n                        props: {\n                            type: this.handler.rule.props.uploadType === 'file' ? 'ios-cloud-upload-outline' : iviewConfig.imgUpIcon,\n                            size: 20\n                        }\n                    })\n                ])\n            ] : []);\n    }\n\n    makeRemoveIcon(src, key, index) {\n        return this.vNode.icon({\n            key: `upri${key}${index}`, props: {type: 'ios-trash-outline'}, nativeOn: {\n                'click': () => {\n                    let fileList = this.handler.el.fileList, file = fileList[index];\n                    fileList.splice(index, 1);\n                    this.onRemove(file, fileList);\n                }\n            }\n        });\n    }\n\n    makeHandleIcon(src, key, index) {\n        return this.vNode.icon({\n            key: `uphi${key}${index}`, props: {type: toString(this.uploadOptions.handleIcon)}, nativeOn: {\n                'click': () => {\n                    this.onHandle(src);\n                }\n            }\n        });\n    }\n}\n\nconst types = {\n    image: ['image', 0],\n    file: ['file', 0],\n    uploadFileOne: ['file', 1],\n    uploadImageOne: ['image', 1],\n};\n\nconst maker = Object.keys(types).reduce((initial, key) => {\n    initial[key] = creatorTypeFactory(name, m => m.props({uploadType: types[key][0], maxLength: types[key][1]}));\n    return initial\n}, {});\n\nmaker.uploadImage = maker.image;\nmaker.uploadFile = maker.file;\n\nexport default {handler, render, maker, name};\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {$set} from \"../core/util\";\n\nconst name = 'cascader';\n\nclass handler extends Handler {\n    init() {\n        let rule = this.rule;\n        if (!rule.props.data) $set(rule.props, 'data', []);\n        if (!Array.isArray(this.rule.value)) $set(rule, 'value', []);\n    }\n\n    toFormValue(value) {\n        return Array.isArray(value) ? value : []\n    }\n\n    mounted() {\n        super.mounted();\n        this.vm._changeFormData(this.field, this.toFormValue(this.el.value));\n    }\n}\n\nclass render extends Render {\n    parse() {\n        return [this.vNode.cascader(this.inputProps().get())]\n    }\n}\n\nexport default {handler, render, name};\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\n\nconst name = \"rate\";\n\nclass handler extends Handler {\n    toFormValue(value) {\n        let parseValue = parseFloat(value);\n        if (Number.isNaN(parseValue)) parseValue = 0;\n        return parseValue\n    }\n\n}\n\nclass render extends Render {\n    parse() {\n        return [this.vNode.rate(this.inputProps().get())]\n    }\n}\n\nexport default {handler, render, name};\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {creatorTypeFactory} from \"../factory/creator\";\nimport {$set} from \"../core/util\";\n\nconst name = \"slider\";\n\nclass handler extends Handler {\n    init() {\n        let rule = this.rule;\n        $set(rule.props, 'min', rule.props.min === undefined\n            ? 0\n            : (parseFloat(rule.props.min) || 0));\n    }\n\n    toFormValue(value) {\n        let rule = this.rule, isArr = Array.isArray(value), props = rule.props, min = props.min,\n            parseValue;\n        if (props.range === true) {\n            parseValue = isArr ? value : [min, (parseFloat(value) || min)];\n        } else {\n            parseValue = isArr ? (parseFloat(value[0]) || min) : parseFloat(value);\n        }\n        return parseValue;\n    }\n\n}\n\nclass render extends Render {\n    parse() {\n        return [this.vNode.slider(this.inputProps().get())];\n    }\n}\n\nconst maker = {\n    sliderRange: creatorTypeFactory(name, true, 'range')\n};\n\nexport default {handler, render, name, maker};\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {$set, errMsg, isUndef, uniqueId} from \"../core/util\";\nimport upload from '../components/upload';\nimport {iviewConfig} from \"../core/common\";\nimport {creatorTypeFactory} from \"../factory/creator\";\nimport iview from 'iview';\n\nconst name = \"frame\";\n\nexport function parseRule(rule) {\n    let props = rule.props;\n    if (!props.type) $set(props, 'type', 'input');\n    if (!props.icon) $set(props, 'icon', iviewConfig.fileUpIcon);\n    if (!props.width) $set(props, 'width', '500px');\n    if (!props.height) $set(props, 'height', '370px');\n    if (isUndef(props.spin)) $set(props, 'spin', true);\n    if (!props.title) $set(props, 'title', '请选择' + rule.title);\n    if (!props.maxLength) $set(props, 'maxLength', 0);\n\n    let handleIcon = props.handleIcon;\n    if (props.type === 'file' && props.handleIcon === undefined)\n        handleIcon = false;\n    else\n        handleIcon = props.handleIcon === true || props.handleIcon === undefined ? 'ios-eye-outline' : props.handleIcon;\n    $set(props, 'handleIcon', handleIcon);\n\n    if (props.allowRemove === undefined) $set(props, 'allowRemove', true);\n\n}\n\nclass handler extends Handler {\n    init() {\n        parseRule(this.rule);\n        this.multiple = this.rule.props.maxLength != 1;\n    }\n\n    toFormValue(value) {\n        let parseValue, oldValue = value, isArr = Array.isArray(oldValue);\n        if (oldValue === '')\n            parseValue = [];\n        else if (!isArr)\n            parseValue = [oldValue];\n        else\n            parseValue = oldValue;\n        this.parseValue = parseValue;\n        return parseValue;\n    }\n\n    toValue(parseValue) {\n        return this.multiple === true\n            ? parseValue\n            : (parseValue[0] === undefined\n                ? ''\n                : parseValue[0]);\n    }\n\n    watchValue(n) {\n        super.watchValue(n);\n        this.render.onChange(n);\n        this.render.sync();\n    }\n\n    watchFormValue(n) {\n        super.watchFormValue(n);\n        this.parseValue = n;\n        this.render.sync();\n\n    }\n}\n\nconst eventList = {onOpen: 'on-open', onChange: 'on-change', onCancel: 'on-cancel', onOk: 'on-ok'};\n\nclass render extends Render {\n    init() {\n        this._props = this.handler.rule.props;\n        this.issetIcon = this._props.handleIcon !== false || this._props.allowRemove === true;\n    }\n\n    parse() {\n        let type = this._props.type, vNode;\n        if (type === 'image')\n            vNode = this.makeGroup(this.makeImage());\n        else if (type === 'file')\n            vNode = this.makeGroup(this.makeFile());\n        else\n            vNode = this.makeInput();\n        return vNode;\n    }\n\n    makeInput(hidden) {\n        let unique = this.handler.unique, props = this.inputProps().props({\n            type: \"text\",\n            value: this.handler.parseValue.toString(),\n            icon: this._props.icon,\n            readonly: true,\n            clearable: true\n        }).on('on-click', () => {\n            this.showModel();\n        }).key('ifit' + unique).style({display: hidden === true ? 'none' : 'inline-block'}).get();\n        return [this.vNode.input(props)];\n    }\n\n    makeGroup(render) {\n        let unique = this.handler.unique, field = this.handler.field;\n        return [this.vNode.make('div', {\n            key: `ifgp1${unique}`,\n            class: {'fc-upload fc-frame': true},\n            ref: this.handler.refName,\n            props: {value: this.vm._formData(field)}\n        }, render),\n            this.makeInput(true)\n        ]\n    }\n\n    makeImage() {\n        let unique = this.handler.unique;\n        let vNode = this.handler.parseValue.map((src, index) => {\n            return this.vNode.make('div', {key: `ifid1${unique}${index}`, class: {'fc-files': true}}, [\n                this.vNode.make('img', {key: `ifim${unique}${index}`, attrs: {src}}),\n                this.makeIcons(src, unique, index)\n            ]);\n        });\n        vNode.push(this.makeBtn());\n        return vNode;\n    }\n\n    makeFile() {\n        let unique = this.handler.unique;\n        let vNode = this.handler.parseValue.map((src, index) => {\n            return this.vNode.make('div', {key: `iffd2${unique}${index}`, class: {'fc-files': true}}, [\n                this.vNode.icon({key: `iff${unique}${index}`, props: {type: iviewConfig.fileIcon, size: 40}}),\n                this.makeIcons(src, unique, index)\n            ]);\n        });\n        vNode.push(this.makeBtn());\n        return vNode;\n    }\n\n    makeBtn() {\n        let props = this.handler.rule.props;\n        if (props.maxLength > 0 && this.handler.parseValue.length >= props.maxLength) return;\n        let unique = this.handler.unique;\n        return this.vNode.make('div', {\n            key: `ifbd3${unique}`, class: {'fc-upload-btn': true}, on: {\n                click: () => {\n                    this.showModel();\n                }\n            }\n        }, [\n            this.vNode.icon({key: `ifbi3${unique}`, props: {type: this._props.icon, size: 20}})\n        ])\n    }\n\n    makeSpin() {\n        if (true !== this._props.spin) return;\n        let unique = this.handler.unique;\n        return this.vNode.make('Spin', {\n            props: {fix: true},\n            key: 'ifsp' + unique,\n            class: {\n                'fc-spin': true\n            }\n        }, [\n            this.vNode.icon({\n                props: {\n                    type: 'load-c',\n                    size: 18\n                },\n                class: {\n                    'fc-spin-icon-load': true\n                },\n                key: 'ifspi' + unique\n            }),\n            this.vNode.make('div', {\n                domProps: {\n                    innerHTML: '加载中...'\n                },\n                key: 'ifspd' + unique\n            })\n        ])\n    }\n\n    makeIcons(src, key, index) {\n        if (this.issetIcon === true)\n            return this.vNode.make('div', {key: `ifis${key}${index}`, class: {'fc-upload-cover': true}}, () => {\n                let icon = [];\n                if (this._props.handleIcon !== false)\n                    icon.push(this.makeHandleIcon(src, key, index));\n                if (this._props.allowRemove === true)\n                    icon.push(this.makeRemoveIcon(src, key, index));\n                return icon;\n            });\n    }\n\n    makeRemoveIcon(src, key, index) {\n        return this.vNode.icon({\n            key: `ifri${key}${index}`, props: {type: 'ios-trash-outline'}, nativeOn: {\n                'click': () => {\n                    if (this.onRemove(src) !== false) {\n                        this.handler.parseValue.splice(index, 1);\n                        this.sync();\n                    }\n                }\n            }\n        });\n    }\n\n    makeHandleIcon(src, key, index) {\n        let props = this._props;\n        return this.vNode.icon({\n            key: `ifhi${key}${index}`, props: {type: toString(props.handleIcon)}, nativeOn: {\n                'click': () => {\n                    this.onHandle(src);\n                }\n            }\n        });\n    }\n\n    onRemove(src) {\n        let fn = this.handler.rule.event['on-remove'];\n        if (fn)\n            return fn(src, this.handler.getValue());\n    }\n\n    onHandle(src) {\n        let fn = this.handler.rule.event['on-handle'];\n        if (fn)\n            return fn(src);\n        else\n            this.defaultOnHandle(src);\n    }\n\n    valid(field) {\n        if (field !== this.handler.field)\n            throw new Error('无效的表单字段' + errMsg());\n    }\n\n    showModel() {\n        let isShow = false !== this.onOpen(),\n            {width, height, src, title} = this._props;\n        if (!isShow) return;\n        this.vm.$Modal.remove();\n        setTimeout(() => {\n            this.vm.$Modal.confirm({\n                title: title,\n                render: () => [\n                    this.makeSpin()\n                    , this.vNode.make('iframe', {\n                        attrs: {\n                            src: src\n                        },\n                        style: {\n                            'height': height,\n                            'border': \"0 none\",\n                            'width': \"100%\",\n                        },\n                        on: {\n                            'load': (e) => {\n                                if (this._props.spin === true) {\n                                    let spin = document.getElementsByClassName('fc-spin')[0];\n                                    spin && spin.parentNode.removeChild(spin);\n                                }\n                                try {\n                                    if (this.options.iframeHelper === true) {\n                                        let iframe = e.path[0].contentWindow;\n\n                                        iframe[`${this.handler.field}_change`] = (val) => {\n                                            this.handler.setValue(val);\n                                        };\n\n\n                                        iframe[`form_create_helper`] = {\n                                            close: (field) => {\n                                                this.valid(field);\n                                                iview.Modal.remove()\n                                            },\n                                            set: (field, value) => {\n                                                this.valid(field);\n                                                iframe[`${field}_change`](value)\n\n                                            },\n                                            get: (field) => {\n                                                this.valid(field);\n                                                return this.handler.rule.value;\n                                            }\n                                        };\n\n                                    }\n                                } catch (e) {\n                                }\n                            }\n                        },\n                        key: 'ifmd' + uniqueId()\n                    })],\n                onOk: () => {\n                    return this.onOk();\n                },\n                onCancel: () => {\n                    return this.onCancel();\n                },\n                showCancel: true,\n                closable: true,\n                scrollable: true,\n                width: width\n            });\n        }, 301);\n    }\n}\n\nrender.prototype.defaultOnHandle = upload.render.prototype.defaultOnHandle;\nObject.keys(eventList).forEach(k => {\n    render.prototype[k] = function () {\n        let fn = this.handler.rule.event[eventList[k]];\n        if (fn)\n            return fn(this.handler.getValue());\n    }\n});\n\nconst types = {\n    frameInputs: ['input', 0],\n    frameFiles: ['file', 0],\n    frameImages: ['image', 0],\n    frameInputOne: ['input', 1],\n    frameFileOne: ['file', 1],\n    frameImageOne: ['image', 1]\n};\n\nconst maker = Object.keys(types).reduce((initial, key) => {\n    initial[key] = creatorTypeFactory(name, m => m.props({type: types[key][0], maxLength: types[key][1]}));\n    return initial\n}, {});\n\nmaker.frameInput = maker.frameInputs;\nmaker.frameFile = maker.frameFiles;\nmaker.frameImage = maker.frameImages;\n\nexport default {handler, render, name, maker};\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {$set, toArray} from \"../core/util\";\nimport {creatorTypeFactory} from \"../factory/creator\";\n\nconst name = 'tree';\n\nexport function parseRule(rule) {\n    let props = rule.props;\n    if (props.data === undefined) $set(props, 'data', []);\n    if (props.type === undefined) $set(props, 'type', 'checked');\n    if (props.multiple === undefined) $set(props, 'multiple', false);\n\n    // if (isMultiple(rule) && Array.isArray(rule.value))\n    //     rule.value = this.rule.value[0] || '';\n    // rule.value = toArray(rule.value);\n\n    return rule\n}\n\nexport function isMultiple(rule) {\n    return (!rule.props.multiple) && rule.props.type === 'selected'\n}\n\nclass handler extends Handler {\n    init() {\n        parseRule(this.rule);\n\n        this._data = {};\n        this.data(this.rule.props.data);\n\n        $set(this.rule, 'value', this._parseValue());\n    }\n\n    _parseValue() {\n        this.rule.value.forEach(this.rule.props.type === 'selected' ? (v) => this.selected(v) : (v) => this.checked(v));\n        let value = [], props = this.rule.props;\n        props.type === 'selected'\n            ? Object.keys(this._data).forEach((key) => {\n                let node = this._data[key];\n                if (node.selected === true)\n                    value.push(node.id);\n            })\n            : Object.keys(this._data).forEach((key) => {\n                let node = this._data[key];\n                if (node.checked === true)\n                    value.push(node.id);\n            });\n        return value;\n    }\n\n    toFormValue(value) {\n        value = toArray(value);\n        this.choose(value);\n        this.parseValue = value;\n        return value;\n    }\n\n    choose(value) {\n        let {rule, _data} = this;\n        rule.props.type === 'selected'\n            ? Object.keys(_data).forEach((key) => {\n                $set(_data[key], 'selected', value.indexOf(_data[key].id) !== -1);\n            })\n            : Object.keys(_data).forEach((key) => {\n                $set(_data[key], 'checked', value.indexOf(_data[key].id) !== -1);\n            });\n    }\n\n    checked(v) {\n        if (this._data[v] !== undefined) {\n            $set(this._data[v], 'checked', true);\n        }\n    }\n\n    selected(v) {\n        if (this._data[v] !== undefined) {\n            $set(this._data[v], 'selected', true);\n        }\n    }\n\n    toValue(parseValue) {\n        let value = parseValue;\n        return !isMultiple(this.rule) ? value : (value[0] || '');\n    }\n\n    watchFormValue(n) {\n        this.choose(n);\n    }\n\n    selectedValue(nodes) {\n        let value = [];\n        nodes.forEach((node) => {\n            if (node.selected === true)\n                value.push(node.id);\n        });\n        return value;\n    }\n\n    checkedValue(nodes) {\n        let value = [];\n        nodes.forEach((node) => {\n            if (node.checked === true)\n                value.push(node.id);\n        });\n        return value;\n    }\n\n    _toValue() {\n        return this.rule.props.type === 'selected'\n            ? this.selectedValue(this.el.getSelectedNodes())\n            : this.checkedValue(this.el.getCheckedNodes())\n    }\n\n    data(data) {\n        data.forEach((node) => {\n            this._data[node.id] = node;\n            if (node.children !== undefined && Array.isArray(node.children))\n                this.data(node.children)\n        });\n    }\n}\n\nconst event = {\n    s: 'on-select-change',\n    c: 'on-check-change'\n};\n\nclass render extends Render {\n    parse() {\n        let {rule, refName, field, unique} = this.handler, props = this.vData.on(rule.event).on({\n            [event.s]: (v) => {\n                this.vm._changeFormData(field, this.handler._toValue());\n                rule.event[event.s] && rule.event[event.s](v);\n            },\n            [event.c]: (v) => {\n                this.vm._changeFormData(field, this.handler._toValue());\n                rule.event[event.c] && rule.event[event.c](v);\n            },\n        }).props(rule.props).ref(refName).key(`fip${unique}`).get();\n\n        let inputProps = this.inputProps().props({\n            type: \"text\",\n            value: this.handler.parseValue.toString(),\n            disable: true\n        }).key('fipit' + unique).style({display: 'none'}).ref(`${refName}it`).get();\n        return [this.vNode.tree(props), this.vNode.input(inputProps)];\n    }\n}\n\nconst types = {'treeSelected': 'selected', 'treeChecked': 'checked'};\n\nconst maker = Object.keys(types).reduce((initial, key) => {\n    initial[key] = creatorTypeFactory(name, types[key]);\n    return initial;\n}, {});\n\nexport default {handler, render, name, maker};\n","import hiddenComponent from \"../components/hidden\";\nimport inputComponent from \"../components/input\";\nimport radioComponent from \"../components/radio\";\nimport checkboxComponent from \"../components/checkbox\";\nimport switchComponent from \"../components/switch\";\nimport selectComponent from \"../components/select\";\nimport datePickerComponent from \"../components/datePicker\";\nimport timePickerComponent from \"../components/timePicker\";\nimport inputNumberComponent from \"../components/inputNumber\";\nimport colorPickerComponent from \"../components/colorPicker\";\nimport uploadComponent from \"../components/upload\";\nimport cascaderComponent from \"../components/cascader\";\nimport rateComponent from \"../components/rate\";\nimport sliderComponent from \"../components/slider\";\nimport frameComponent from \"../components/frame\";\nimport treeComponent from \"../components/tree\";\nimport autoCompleteComponent from \"../components/autoComplete\";\n\n\nconst componentList = {\n    hidden: hiddenComponent,\n    input: inputComponent,\n    radio: radioComponent,\n    checkbox: checkboxComponent,\n    switch: switchComponent,\n    select: selectComponent,\n    datepicker: datePickerComponent,\n    timepicker: timePickerComponent,\n    inputnumber: inputNumberComponent,\n    colorpicker: colorPickerComponent,\n    upload: uploadComponent,\n    cascader: cascaderComponent,\n    rate: rateComponent,\n    slider: sliderComponent,\n    frame: frameComponent,\n    tree: treeComponent,\n    autocomplete: autoCompleteComponent,\n};\n\nexport default componentList\n","import Handler from \"../factory/handler\";\nimport Render from \"../factory/render\";\nimport {creatorFactory} from \"../factory/creator\";\nimport {$set} from \"../core/util\";\n\nconst name = 'autoComplete';\n\nexport class handler extends Handler {\n\n    init() {\n        let rule = this.rule;\n        if (!Array.isArray(rule.data))\n            $set(rule, 'data', [])\n    }\n}\n\nclass render extends Render {\n    parse() {\n        return [this.vNode.AutoComplete(this.inputProps().key(this.handler.key).get())];\n    }\n}\n\nconst maker = {\n    auto: creatorFactory(name)\n};\n\nexport default {handler, render, name, maker};\n","import {deepExtend, isFunction, isDate, toString, errMsg, $del, isUndef} from \"./util\";\nimport Handler from '../factory/handler';\nimport Render from '../factory/render';\nimport componentList from './componentList';\nimport iview from 'iview';\n\nexport const iview2 = {\n    _v: 2,\n    resetBtnType: 'ghost',\n    resetBtnIcon: 'refresh',\n    submitBtnIcon: 'ios-upload',\n    fileIcon: 'document-text',\n    fileUpIcon: 'folder',\n    imgUpIcon: 'image',\n};\n\nexport const iview3 = {\n    _v: 3,\n    resetBtnType: 'default',\n    resetBtnIcon: 'md-refresh',\n    submitBtnIcon: 'ios-share',\n    fileIcon: 'md-document',\n    fileUpIcon: 'ios-folder-open',\n    imgUpIcon: 'md-images',\n};\n\nexport const iviewConfig = (function () {\n    if (typeof iview === 'undefined') return iview2;\n    return (iview.version && iview.version.split('.')[0] == 3) ? iview3 : iview2;\n}());\n\nexport function getComponent(vm, rule, createOptions) {\n    let name = toString(rule.type).toLowerCase(), component = isComponent(name)\n        ? componentList[name] : getUdfComponent();\n\n    return new component.handler(vm, rule, component.render, createOptions, component.noValue);\n}\n\nexport function isComponent(type) {\n    return componentList[type] !== undefined;\n}\n\nexport function getUdfComponent() {\n    return {\n        handler: Handler,\n        render: Render,\n        noValue: true\n    }\n}\n\n\nexport function getConfig() {\n    return {\n        el: null,\n        iframeHelper: false,\n        switchMaker: true,\n        form: {\n            inline: false,\n            labelPosition: 'right',\n            labelWidth: 125,\n            showMessage: true,\n            autocomplete: 'off',\n            size: undefined,\n        },\n        row: {\n            gutter: 0,\n            type: undefined,\n            align: undefined,\n            justify: undefined,\n            className: undefined\n        },\n        upload: {\n            beforeUpload: () => {\n            },\n            onProgress: (event, file, fileList) => {\n            },\n            onSuccess: (response, file, fileList) => {\n            },\n            onError: (error, file, fileList) => {\n            },\n            onPreview: (file) => {\n            },\n            onRemove: (file, fileList) => {\n            },\n            onFormatError: (file, fileList) => {\n            },\n            onExceededSize: (file, fileList) => {\n            },\n            handleIcon: 'ios-eye-outline',\n            allowRemove: true\n        },\n        submitBtn: {\n            type: \"primary\",\n            size: \"large\",\n            shape: undefined,\n            long: true,\n            htmlType: \"button\",\n            disabled: false,\n            icon: iviewConfig.submitBtnIcon,\n            innerText: \"提交\",\n            loading: false,\n            show: true,\n            col: undefined,\n        },\n        resetBtn: {\n            type: iviewConfig.resetBtnType,\n            size: \"large\",\n            shape: undefined,\n            long: true,\n            htmlType: \"button\",\n            disabled: false,\n            icon: iviewConfig.resetBtnIcon,\n            innerText: \"重置\",\n            loading: false,\n            show: false,\n            col: undefined,\n        },\n        mounted: ($f) => {\n        },\n        onReload: ($f) => {\n        },\n        onSubmit: (formData) => {\n        },\n    };\n};\n\nexport const formCreateStyle = '.form-create{padding:25px;} .fc-upload-btn,.fc-files{display: inline-block;width: 58px;height: 58px;text-align: center;line-height: 58px;border: 1px solid #c0ccda;border-radius: 4px;overflow: hidden;background: #fff;position: relative;box-shadow: 2px 2px 5px rgba(0,0,0,.1);margin-right: 4px;box-sizing: border-box;}.__fc_h{display:none;}.__fc_v{visibility:hidden;}' +\n    ' .fc-files>.ivu-icon{vertical-align: middle;}' +\n    '.fc-files img{width:100%;height:100%;display:inline-block;vertical-align: top;}' +\n    '.fc-upload .ivu-upload{display: inline-block;}' +\n    '.fc-upload-btn{border: 1px dashed #c0ccda;}' +\n    '.fc-upload-btn>ivu-icon{vertical-align:sub;}' +\n    '.fc-upload .fc-upload-cover{opacity: 0; position: absolute; top: 0; bottom: 0; left: 0; right: 0; background: rgba(0,0,0,.6); transition: opacity .3s;}' +\n    '.fc-upload .fc-upload-cover i{ color: #fff; font-size: 20px; cursor: pointer; margin: 0 2px; }' +\n    '.fc-files:hover .fc-upload-cover{opacity: 1; }' +\n    '.fc-hide-btn .ivu-upload .ivu-upload{display:none;}' +\n    '.fc-upload .ivu-upload-list{margin-top: 0;}' +\n    '.fc-spin-icon-load{animation: ani-fc-spin 1s linear infinite;} @-webkit-keyframes ani-fc-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}50%{-webkit-transform:rotate(180deg);transform:rotate(180deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes ani-fc-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}50%{-webkit-transform:rotate(180deg);transform:rotate(180deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}';\n\nexport function toDefSlot(slot, $h, rule) {\n    return [slot && isFunction(slot) ? slot.call(rule, $h) : slot]\n}\n\nexport function getGlobalApi(fComponent) {\n    let vm = fComponent.vm;\n    return {\n        formData: () => {\n            return vm._formField().reduce((initial, key) => {\n                initial[key] = vm._value(key);\n                return initial;\n            }, {});\n        },\n        getValue: (field) => {\n            field = toString(field);\n            if (vm._formField(field) === undefined)\n                throw new Error(`${field} 字段不存在!` + errMsg());\n            else {\n                return vm._value(field);\n            }\n        },\n        changeValue: function (field, value) {\n            this.changeField(field, value);\n        },\n        changeField: (field, value) => {\n            field = toString(field);\n            let handler = fComponent.handlers[field];\n            if (handler === undefined)\n                throw new Error(`${field} 字段不存在!` + errMsg());\n            else {\n                if (isFunction(value))\n                    value(vm._trueData(field), (changeValue) => {\n                        this.changeField(field, changeValue);\n                    });\n                else {\n                    handler.setValue(value);\n                }\n\n            }\n        },\n        removeField: (field) => {\n            let handler = fComponent.handlers[field];\n            if (!handler)\n                throw new Error(`${field} 字段不存在` + errMsg());\n            let fields = handler.root.map(rule => rule.__field__), index = fields.indexOf(toString(field))\n            if (index === -1)\n                throw new Error(`${field} 字段不存在` + errMsg());\n            handler.root.splice(index, 1);\n            vm._refresh();\n        },\n        validate: (successFn, errorFn) => {\n            fComponent.getFormRef().validate((valid) => {\n                valid === true ? (successFn && successFn()) : (errorFn && errorFn());\n            });\n        },\n        validateField: (field, callback) => {\n            if (fComponent.notField(field))\n                throw new Error(`${field}字段不存在` + errMsg());\n            fComponent.getFormRef().validateField(field, callback);\n        },\n        resetFields: function () {\n            let handlers = fComponent.handlers;\n            vm._formField().forEach(key => {\n                handlers[key].reset();\n            });\n            this.refresh();\n\n        },\n        destroy: () => {\n            vm.$el.parentNode.removeChild(vm.$el);\n            vm.$destroy();\n        },\n        fields: () => vm._formField(),\n        append: (rule, after) => {\n            let fields = fComponent.fieldList, index = fields.indexOf(toString(after));\n            if (isUndef(after)) {\n                index = fields.length;\n            } else if (index === -1)\n                throw new Error(`${after} 字段不存在` + errMsg());\n            fComponent.rules.splice(index, 0, rule);\n\n        },\n        prepend: (rule, after) => {\n            let fields = fComponent.fieldList, index = fields.indexOf(toString(after));\n            if (isUndef(after)) {\n                index = 0;\n            } else if (index === -1)\n                throw new Error(`${after} 字段不存在` + errMsg());\n            else\n                index--;\n            fComponent.rules.splice(index, 0, rule);\n\n        },\n        submit(successFn, failFn) {\n            this.validate(() => {\n                let formData = this.formData();\n                if (isFunction(successFn))\n                    successFn(formData);\n                else\n                    fComponent.options.onSubmit && fComponent.options.onSubmit(formData);\n            }, () => failFn && failFn());\n        },\n        hidden(fields, hidden = true) {\n            if (!fields)\n                fields = this.fields();\n            else if (!Array.isArray(fields))\n                fields = [fields];\n            fields.forEach((field) => {\n                vm.$set(vm._trueData(field).rule.props, 'hidden', !!hidden);\n            })\n        },\n        visibility(fields, visibility = true) {\n            if (!fields)\n                fields = this.fields();\n            else if (!Array.isArray(fields))\n                fields = [fields];\n            fields.forEach((field) => {\n                vm.$set(vm._trueData(field).rule.props, 'visibility', !!visibility);\n            })\n        },\n        model(fields) {\n            let model = {}, _fields = this.fields();\n            if (!fields)\n                fields = _fields;\n            else if (!Array.isArray(fields))\n                fields = [fields];\n            fields.forEach((field) => {\n                if (_fields.indexOf(field) === -1)\n                    return console.error(`${field}字段不存在` + errMsg());\n                model[field] = vm._trueData(field);\n            });\n            return model;\n        },\n        component() {\n            return {...vm.components};\n        },\n        bind(fields) {\n            let bind = {}, properties = {}, _fields = this.fields();\n            if (!fields)\n                fields = _fields;\n            else if (!Array.isArray(fields))\n                fields = [fields];\n            fields.forEach((field) => {\n\n                if (_fields.indexOf(field) === -1)\n                    return console.error(`${field}字段不存在` + errMsg());\n\n                const rule = vm._trueData(field);\n                properties[field] = {\n                    get() {\n                        return rule.value;\n                    },\n                    set(value) {\n                        vm.$set(rule, 'value', value);\n                    },\n                    enumerable: true,\n                    configurable: true\n                };\n            });\n            Object.defineProperties(bind, properties);\n            return bind;\n        },\n        submitStatus: (props = {}) => {\n            vm._buttonProps(props);\n        },\n        resetStatus: (props = {}) => {\n            vm._resetProps(props);\n        },\n        btn: {\n            loading: (loading = true) => {\n                vm._buttonProps({loading: loading});\n            },\n            finish: function () {\n                this.loading(false);\n            },\n            disabled: (disabled = true) => {\n                vm._buttonProps({disabled: disabled});\n            }\n        },\n        resetBtn: {\n            loading: (loading = true) => {\n                vm._resetProps({loading: loading});\n            },\n            finish: function () {\n                this.loading(false);\n            },\n            disabled: (disabled = true) => {\n                vm._resetProps({disabled: disabled});\n            }\n        },\n        closeModal: () => {\n            vm.$Modal.remove();\n        },\n        set: (node, field, value) => {\n            vm.$set(node, field, value);\n        },\n        reload: (rules) => {\n            return fComponent.reload(rules)\n        },\n        options: (options) => {\n            deepExtend(fComponent.options, options);\n            vm._sync();\n        },\n        onSuccess(fn) {\n            this.onSubmit(fn);\n        },\n        onSubmit(fn) {\n            this.options({onSubmit: fn});\n        },\n        sync: (field, callback) => {\n            if (fComponent.handlers[field])\n                fComponent.handlers[field].render.sync(callback);\n            else\n                throw new Error(`${field}字段不存在` + errMsg());\n        },\n        refresh: () => {\n            vm._refresh();\n        },\n    };\n}\n\nexport function timeStampToDate(timeStamp) {\n    if (isDate(timeStamp))\n        return timeStamp;\n    else {\n        let date = new Date(timeStamp);\n        return date.toString() === 'Invalid Date' ? timeStamp : date;\n    }\n}\n\nexport const componentCommon = {\n    data: () => {\n        return {\n            rules: {},\n            components: {},\n            cptData: {},\n            buttonProps: {},\n            resetProps: {},\n            trueData: {},\n            jsonData: {},\n            $f: {},\n            isShow: true,\n            watchs: [],\n            unique: 1\n        }\n    },\n    methods: {\n        _formField() {\n            return Object.keys(this.trueData);\n        },\n        _changeFormData(field, value) {\n            if (Object.keys(this.cptData).indexOf(field) !== -1)\n                this.$set(this.cptData, field, value);\n        },\n        _changeValue(field, value) {\n            this.$set(this.trueData[field], 'value', value);\n        },\n        _value(field) {\n            return this.trueData[field] === undefined ? undefined : this.trueData[field].value;\n        },\n        _trueData(field) {\n            return this.trueData[field];\n        },\n        _formData(field) {\n            return this.cptData[field];\n        },\n        _removeField(field) {\n            $del(this.cptData, field);\n            $del(this.trueData, field);\n            $del(this.jsonData, field);\n\n            if (this.components[field] !== undefined)\n                $del(this.components, field);\n\n        },\n        _buttonProps(props) {\n            this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n        },\n        _resetProps(props) {\n            this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n        },\n        __init() {\n            const type = this._fComponent._type;\n            this[type].forEach((rule, index) => {\n                let unWatch = this.$watch(`${type}.${index}.value`, n => {\n                    if (this.trueData[rule.field] === undefined) return unWatch();\n                    this._changeValue(rule.field, n);\n                });\n                this.watchs.push(unWatch);\n            });\n\n        },\n        _unWatch() {\n            this.watchs.forEach(unWatch => unWatch());\n            this.watchs = [];\n        },\n        _refresh() {\n            this.unique += 1;\n        },\n        _sync() {\n            this.unique += 1;\n            this._fComponent.fRender.cacheUnique = this.unique;\n        },\n        _change(field, json) {\n            if (this.jsonData[field] !== json) {\n                this.jsonData[field] = json;\n                return true;\n            }\n            return false;\n        }\n    }\n};\n","import {deepExtend, extend, isUndef, toString, uniqueId} from \"../core/util\";\nimport VNode from \"../factory/vNode\";\nimport VData from \"../factory/vData\";\nimport {isComponent} from \"../core/common\";\n\nexport function preventDefault(e) {\n    e.preventDefault();\n}\n\nexport default class Form {\n\n    constructor({vm, options, fieldList, handlers, formData, validate, fCreateApi}) {\n        this.vm = vm;\n        this.options = options;\n        this.handlers = handlers;\n        this.renderSort = fieldList;\n        this.form = {\n            model: formData,\n            rules: validate,\n            key: 'form' + uniqueId()\n        };\n        this.fCreateApi = fCreateApi;\n        this.vNode = new VNode(vm);\n        this.vData = new VData();\n        this.unique = uniqueId();\n        this.refName = `cForm${this.unique}`;\n        this.cacheUnique = 0;\n    }\n\n    getRender(field) {\n        return this.handlers[field].render;\n    }\n\n    render(vm) {\n        this.vNode.setVm(vm);\n        if (!vm.isShow)\n            return;\n        if (this.cacheUnique !== vm.unique) {\n            this.renderSort.forEach((field) => {\n                this.getRender(field).clearCache();\n            });\n            this.cacheUnique = vm.unique;\n        }\n        this.propsData = this.vData.props(this.options.form).props(this.form)\n            .ref(this.refName).nativeOn({submit: preventDefault}).class('form-create', true).key(this.unique).get();\n        let unique = this.unique,\n            vn = this.renderSort.map((field) => {\n                let render = this.getRender(field);\n                if (render.handler.type === 'hidden') return;\n                return this.makeComponent(render);\n\n            });\n        if (vn.length > 0)\n            vn.push(this.makeFormBtn(unique));\n        return this.vNode.form(this.propsData, [this.vNode.row(extend({props: this.options.row || {}}, {key: 'row' + unique}), vn)]);\n    }\n\n    makeComponent(render) {\n        return this.makeFormItem(render.handler, render.cacheParse(this), `fItem${render.handler.key}${this.unique}`);\n    }\n\n    makeFormItem({type, rule, unique, field, refName}, VNodeFn, fItemUnique) {\n        let labelWidth = (!isComponent(type) && !rule.col.labelWidth && !rule.title) ? 1 : rule.col.labelWidth,\n            className = rule.className, propsData = this.vData.props({\n                prop: field,\n                label: rule.title,\n                labelFor: unique,\n                rules: rule.validate,\n                labelWidth: labelWidth,\n                required: rule.props.required\n            }).key(fItemUnique).ref('fItem' + refName).class(className).get(),\n            node = this.vNode.formItem(propsData, VNodeFn);\n        return this.propsData.props.inline === true ? [node] : this.makeCol(rule, fItemUnique, [node])\n    }\n\n    makeCol(rule, fItemUnique, VNodeFn) {\n        return this.vNode.col({\n            props: rule.col, 'class': {\n                '__fc_h': rule.props.hidden === true,\n                '__fc_v': rule.props.visibility === true\n            }, key: `${fItemUnique}col1`\n        }, VNodeFn);\n    }\n\n    makeFormBtn(unique) {\n        let btn = [],\n            submitBtnShow = false !== this.vm.buttonProps && false !== this.vm.buttonProps.show,\n            resetBtnShow = false !== this.vm.resetProps && false !== this.vm.resetProps.show;\n        if (submitBtnShow)\n            btn.push(this.makeSubmitBtn(unique, resetBtnShow ? 19 : 24));\n        if (resetBtnShow)\n            btn.push(this.makeResetBtn(unique, 4));\n\n        return this.vNode.col({props: {span: 24}, key: `${this.unique}col2`}, btn);\n    }\n\n    makeResetBtn(unique, span) {\n        const props = isUndef(this.options.resetBtn.col) ? {span: span, push: 1} : this.options.resetBtn.col;\n        return this.vNode.col({props: props, key: `${this.unique}col3`}, [\n            this.vNode.button({\n                key: `frsbtn${unique}`, props: this.vm.resetProps, on: {\n                    \"click\": () => {\n                        this.fCreateApi.resetFields();\n                    }\n                }\n            }, [this.vm.resetProps.innerText])\n        ]);\n    }\n\n    makeSubmitBtn(unique, span) {\n        const props = isUndef(this.options.submitBtn.col) ? {span: span} : this.options.submitBtn.col;\n        return this.vNode.col({props: props, key: `${this.unique}col4`}, [\n            this.vNode.button({\n                key: `fbtn${unique}`, props: this.vm.buttonProps, on: {\n                    \"click\": () => {\n                        this.fCreateApi.submit();\n                    }\n                }\n            }, [this.vm.buttonProps.innerText])\n        ]);\n    }\n\n}\n","import formCreate from './formCreate';\nimport {componentCommon} from './common';\n\nconst formCreateName = 'FormCreate';\n\nconst $FormCreate = () => ({\n    name: formCreateName,\n    props: {\n        rule: {\n            type: Array,\n            required: true,\n            default: () => {\n                return {}\n            }\n        },\n        option: {\n            type: Object,\n            default: () => {\n                return {}\n            },\n            required: false\n        },\n        value: Object\n    },\n    data: componentCommon.data,\n    methods: componentCommon.methods,\n    render() {\n        return this._fComponent.fRender.render(this._fComponent.vm);\n    },\n    created() {\n        this._fComponent = new formCreate(this.rule, this.option);\n        this._fComponent._type = 'rule';\n        this._fComponent.init(this);\n        this.$emit('input', this._fComponent.fCreateApi);\n    },\n    mounted() {\n        this._fComponent.mounted(this);\n        this.$f = this._fComponent.fCreateApi;\n        this.$watch('rule', n => {\n            this._fComponent.reload(n);\n            this.$emit('input', this.$f);\n        });\n        this.$emit('input', this.$f);\n        this.__init();\n    }\n});\n\nexport {\n    $FormCreate,\n    formCreateName\n};\n","import {creatorFactory} from \"../factory/creator\";\nimport componentList from './componentList';\nimport {extend, isUndef, uniqueId} from \"./util\";\n\nconst maker = (() => {\n\n    let _m = {};\n\n    Object.keys(componentList).forEach(key => {\n        const component = componentList[key];\n\n        const undef = isUndef(component.maker);\n\n        if (undef || component.maker[component.name] === undefined)\n            _m[component.name] = creatorFactory(component.name);\n\n        if (!undef)\n            extend(_m, component.maker);\n    });\n\n    const commonMaker = creatorFactory('');\n\n    extend(_m, {\n        create(type, field) {\n            let make = commonMaker('', field);\n            make.rule.type = type;\n            return make;\n        },\n        createTmp(template, vm, field) {\n            let make = commonMaker('', field);\n            make.rule.type = 'template';\n            make.rule.template = template;\n            make.rule.vm = vm;\n            return make;\n        }\n    });\n    _m.template = _m.createTmp;\n\n    return _m;\n})();\n\nexport default maker;\n","import {\n    $del,\n    $nt, $set,\n    debounce,\n    deepExtend,\n    errMsg,\n    isBool,\n    isElement,\n    isFunction, isString,\n    isUndef,\n    toString, uniqueId\n} from \"../core/util\";\nimport {formCreateStyle, getComponent, getConfig, getGlobalApi} from \"../core/common\";\nimport formRender from \"../components/form\";\nimport formCreateComponent from \"../core/formCreateComponent\";\nimport {$FormCreate, formCreateName} from \"../core/component\";\nimport maker from \"./maker\";\nimport Vue from 'vue';\n\nconst version = process.env.VERSION;\n\nconst formCreateStyleElId = 'form-create-style';\n\nexport function margeGlobal(_options) {\n    if (isBool(_options.sumbitBtn))\n        $set(_options, 'sumbitBtn', {show: _options.sumbitBtn});\n    if (isBool(_options.resetBtn))\n        $set(_options, 'resetBtn', {show: _options.resetBtn});\n    let options = deepExtend(getConfig(), _options);\n\n    $set(options, 'el', !options.el\n        ? window.document.body\n        : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n        ));\n\n    return options\n}\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport function bindHandler(rule, handler) {\n    Object.defineProperties(rule, {\n        __field__: {\n            value: handler.field,\n            enumerable: false,\n            configurable: false\n        },\n        __handler__: {\n            value: handler,\n            enumerable: false,\n            configurable: false\n        }\n    })\n}\n\nexport function initStyle() {\n    if (document.getElementById(formCreateStyleElId) !== null) return;\n    let style = document.createElement('style');\n    style.id = formCreateStyleElId;\n    style.innerText = formCreateStyle;\n    document.getElementsByTagName('head')[0].appendChild(style);\n}\n\nexport default class FormCreate {\n\n    constructor(rules, options = {}) {\n        this.options = margeGlobal(options);\n        this.rules = Array.isArray(rules) ? rules : [];\n        this.origin = [...this.rules];\n\n        this.handlers = {};\n        this.fRender = {};\n        this.formData = {};\n        this.validate = {};\n        this.trueData = {};\n        this.components = {};\n        this.fieldList = [];\n        this.switchMaker = this.options.switchMaker;\n        this.id = uniqueId();\n\n        initStyle();\n        this.$tick = debounce((fn) => fn(), 150);\n\n    }\n\n\n    static create(rules, _opt = {}, _vue = Vue) {\n        let opt = isElement(_opt) ? {el: _opt} : _opt;\n        let fComponent = new FormCreate(rules, opt),\n            $vm = fComponent.create(_vue);\n        return fComponent.fCreateApi;\n    };\n\n    static install(Vue) {\n        Vue.prototype.$formCreate = function (rules, opt = {}) {\n            return FormCreate.create(rules, opt, Vue)\n        };\n\n        Vue.prototype.$formCreate.version = version;\n        Vue.prototype.$formCreate.maker = maker;\n        Vue.component(formCreateName, Vue.extend($FormCreate()));\n    }\n\n    init(vm) {\n        this.vm = vm;\n        this.createHandler(this.rules);\n        vm.$set(vm, 'cptData', this.formData);\n        vm.$set(vm, 'trueData', this.trueData);\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'rules', this.rules);\n        vm.$set(vm, 'components', this.components);\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = getGlobalApi(this);\n        this.fCreateApi.rule = this.rules;\n\n        this.fRender = new formRender(this);\n    }\n\n\n    setHandler(handler) {\n        let rule = handler.rule, {field, isDef} = handler;\n        this.handlers[field] = handler;\n\n        if (handler.noValue === true) {\n            if (isDef === true)\n                $set(this.components, field, rule);\n            return;\n        }\n\n        $set(this.formData, field, handler.parseValue);\n        $set(this.validate, field, rule.validate);\n        $set(this.trueData, field, {\n            value: handler.rule.value,\n            rule: rule\n        });\n\n    }\n\n    notField(field) {\n        return this.handlers[field] === undefined;\n    }\n\n    createHandler(rules, child) {\n        rules.forEach((_rule, index) => {\n            if (child && isString(_rule)) return;\n\n            if (!_rule.type)\n                return console.error(`未定义生成规则的 type` + errMsg());\n\n            let rule = getRule(_rule),\n                handler = _rule.__handler__ ? _rule.__handler__.refresh() : getComponent(this.vm, rule, this.options),\n                children = handler.rule.children;\n\n            if (!this.notField(handler.field))\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            if (this.switchMaker) {\n                rules[index] = rule;\n                if (!child)\n                    this.origin[index] = rule;\n                _rule = rule;\n            }\n\n            this.setHandler(handler);\n\n            if (!_rule.__handler__) {\n                bindHandler(_rule, handler);\n            }\n\n            if (Array.isArray(children) && children.length > 0)\n                this.createHandler(children, true);\n\n            if (!child)\n                this.fieldList.push(handler.field);\n\n        });\n\n        rules.forEach((rule) => {\n            rule.__handler__.root = rules;\n            rule.__handler__.origin = [...rules];\n        });\n    }\n\n    create(Vue) {\n        let $fCreate = Vue.extend(this.component()), $vm = new $fCreate().$mount();\n        this.options.el.appendChild($vm.$el);\n        return $vm;\n    }\n\n    mounted(vm, first = true) {\n        this.vm = vm;\n        let {mounted, onReload} = this.options;\n        setTimeout(() => {\n            $nt(() => {\n                Object.keys(this.handlers).forEach((field) => {\n                    let handler = this.handlers[field];\n                    if (vm._formData(field) !== undefined)\n                        this.addHandlerWatch(handler);\n                    handler.mounted();\n                });\n                if (first)\n                    mounted && mounted(this.fCreateApi);\n                onReload && onReload(this.fCreateApi);\n            })\n        });\n    }\n\n    component() {\n        return formCreateComponent(this);\n    }\n\n    removeField(field) {\n        if (this.handlers[field] === undefined)\n            throw new Error(`${field}字段不存在` + errMsg());\n        let watch = this.handlers[field].watch, index = this.fieldList.indexOf(field);\n\n        $del(this.handlers, field);\n        $del(this.validate, field);\n\n        if (index !== -1) {\n            this.fieldList.splice(index, 1);\n        }\n\n        watch && watch.forEach((unWatch) => unWatch());\n        this.vm._removeField(field);\n\n    }\n\n    addHandlerWatch(handler) {\n        if (handler.noValue === true) return;\n        let field = handler.field, vm = this.vm;\n\n        let unWatch = vm.$watch(`cptData.${field}`, (n) => {\n            if (this.handlers[field] !== undefined) {\n                let trueValue = handler.toValue(n), json = JSON.stringify(trueValue);\n                if (vm._change(field, json)) {\n                    handler.setValue(trueValue);\n                    handler.watchFormValue(n);\n                }\n            } else\n                unWatch();\n        }, {deep: true});\n\n        let unWatch2 = vm.$watch(`trueData.${field}.value`, (n) => {\n            if (n === undefined) return;\n            if (this.handlers[field] !== undefined) {\n                let json = JSON.stringify(n);\n                if (vm._change(field, json)) {\n                    handler.watchValue(n);\n                    $nt(() => handler.render.sync());\n                }\n            } else\n                unWatch2();\n        }, {deep: true});\n\n        handler.watch.push(unWatch, unWatch2);\n\n        const bind = () => {\n            if (this.handlers[field] !== undefined)\n                this.$tick(() => handler.render.sync());\n        };\n\n        Object.keys(vm._trueData(field).rule).forEach((key) => {\n            if (key === 'value') return;\n            handler.watch.push(vm.$watch(`trueData.${field}.rule.${key}`, bind, {deep: true}));\n        });\n    }\n\n    isNotChange(rules) {\n        return rules.reduce((initial, rule, index) => initial && rule === this.origin[index], true)\n            && this.origin.reduce((initial, rule, index) => initial && rule === rules[index], true);\n\n    }\n\n    reload(rules) {\n        let vm = this.vm;\n        if (!rules) {\n            this.reload(this.rules);\n        } else {\n\n            if (this.isNotChange(rules)) {\n                this.fCreateApi.refresh();\n                return;\n            }\n\n            if (!this.origin.length)\n                this.fCreateApi.refresh();\n\n            this.origin = [...rules];\n            vm._unWatch();\n            Object.keys(this.handlers).forEach(field => this.removeField(field));\n            this.constructor(rules, this.options);\n            this.init(vm);\n            vm.__init();\n            $nt(() => {\n                this.mounted(vm, false);\n            });\n        }\n\n        vm.$f = this.fCreateApi;\n    }\n\n    getFormRef() {\n        return this.vm.$refs[this.fRender.refName]\n    }\n\n}\n\nFormCreate.maker = maker;\nFormCreate.version = version;\n","/**\n *\n * JS表单生成器\n * Author: xaboy\n * Github: https://github.com/xaboy/form-create\n */\n\nimport formCreate from './core/formCreate';\n\nexport function install(Vue) {\n    if (Vue._installedFormCreate === true) return;\n    Vue._installedFormCreate = true;\n    Vue.use(formCreate);\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    install(Vue);\n}\n\nexport default window.formCreate = formCreate;\n\n// module.exports.default = module.exports = formCreate;\n","import {formCreateName} from './component';\nimport {componentCommon} from \"./common\";\n\nexport default function formCreateComponent(fComponent) {\n    return {\n        name: `${formCreateName}Core`,\n        data: componentCommon.data,\n        render: () => {\n            return fComponent.fRender.render(fComponent.vm);\n        },\n        methods: componentCommon.methods,\n        created() {\n            this._fComponent = fComponent;\n            this._fComponent._type = 'rules';\n            fComponent.init(this);\n        },\n        mounted() {\n            fComponent.mounted(this);\n            this.$f = fComponent.fCreateApi;\n            this.__init();\n            this.$watch('rules', n => {\n                this._fComponent.reload(n);\n            })\n        }\n    }\n};\n"],"names":["$nt","fn","Vue","nextTick","$set","target","field","value","set","$del","delete","const","_toString","Object","prototype","toString","isUndef","v","val","JSON","stringify","String","extend","to","_from","key","isDate","arg","call","isPlainObject","isFunction","isString","isBool","toLine","name","line","replace","toLowerCase","indexOf","substr","toArray","a","Array","isArray","isElement","nodeType","deepExtend","origin","isArr","let","hasOwnProperty","clone","nst","undefined","id","uniqueId","Handler","constructor","vm","_rule","Render","options","noValue","rule","noVal","def","validate","event","col","emit","props","on","title","className","keys","forEach","k","parseRule","parseCol","parseProps","emitEvent","parseEmit","emitPrefix","parseArray","eventName","_name","length","console","error","type","isDef","el","watch","root","init","refresh","refName","this","elementId","unique","render","fieldKey","emitKey","$emit","hidden","visibility","n","isNaN","parseFloat","isFinite","span","parseValue","toFormValue","toValue","setValue","_changeValue","getValue","_value","watchValue","_changeFormData","watchFormValue","reset","defaultValue","mounted","children","$refs","initialValue","child","__handler__","VNode","setVm","$h","$createElement","make","nodeName","data","VNodeFn","Node","domProps","innerHTML","get","parseVData","context","nodes","modal","progress","button","icon","slider","rate","upload","cascader","colorPicker","timePicker","datePicker","option","select","checkbox","checkboxGroup","radio","radioGroup","inputNumber","input","formItem","form","row","tree","AutoComplete","VData","class","classList","status","cls","_data","directives","concat","style","attrs","nativeOn","scopedSlots","slot","ref","_prev","obj","handler","vNode","vData","cache","$tickEvent","creatorFactory","Creator","creatorTypeFactory","typeName","maker","cacheParse","_super","noCache","parse","eventList","sync","push","clearCache","_sync","compile","vn","template","map","_fComponent","createHandler","removeField","__field__","makeComponent","inputProps","_formData","onInput","size","trueValue","_change","getRule","attr","opt","autosize","minRows","reduce","initial","idate","filter","label","index","switch","open","close","multiple","toDefSlot","selectMultiple","selectOne","startDate","timeStampToDate","time","publicStringValue","defaultSlot","getTime","date","fmt","Date","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","RegExp","$1","getFullYear","dateFormat","confirm","timeRange","Number","number","color","showUploadList","uploadType","maxLength","action","handleIcon","files","splice","file","changeParseValue","fileList","pic","url","split","pop","b","defaultFileList","percentage","super","uploadOptions","issetIcon","allowRemove","propsData","onSuccess","args","onRemove","response","showProgress","defaultOnHandle","src","$Modal","remove","setTimeout","info","h","showCancel","closable","scrollable","onHandle","makeProgress","makeUploadView","isShow","makeUploadBtn","container","iviewConfig","fileIcon","makeIcons","makeHandleIcon","makeRemoveIcon","percent","hideInfo","width","imgUpIcon","types","image","uploadFileOne","uploadImageOne","m","uploadImage","uploadFile","min","range","sliderRange","fileUpIcon","height","spin","oldValue","onChange","onOpen","onCancel","onOk","_props","makeGroup","makeImage","makeFile","makeInput","readonly","clearable","showModel","display","makeBtn","click","makeSpin","fix","valid","Error","e","document","getElementsByClassName","parentNode","removeChild","iframeHelper","iframe","path","contentWindow","iview","Modal","frameInputs","frameFiles","frameImages","frameInputOne","frameFileOne","frameImageOne","frameInput","frameFile","frameImage","componentList","hiddenComponent","inputComponent","radioComponent","checkboxComponent","switchComponent","selectComponent","datepicker","datePickerComponent","timepicker","timePickerComponent","inputnumber","inputNumberComponent","colorpicker","colorPickerComponent","uploadComponent","cascaderComponent","rateComponent","sliderComponent","frame","_parseValue","selected","checked","node","choose","selectedValue","checkedValue","_toValue","getSelectedNodes","getCheckedNodes","disable","autocomplete","auto","iview2","_v","resetBtnType","resetBtnIcon","submitBtnIcon","iview3","version","getComponent","createOptions","component","isComponent","formCreateStyle","timeStamp","componentCommon","rules","components","cptData","buttonProps","resetProps","trueData","jsonData","$f","watchs","methods","_formField","_trueData","_removeField","_buttonProps","_resetProps","__init","_type","unWatch","$watch","_unWatch","_refresh","fRender","cacheUnique","json","preventDefault","Form","handlers","renderSort","fieldList","formData","fCreateApi","getRender","makeFormBtn","makeFormItem","fItemUnique","labelWidth","required","inline","makeCol","btn","submitBtnShow","show","resetBtnShow","makeSubmitBtn","makeResetBtn","resetBtn","resetFields","innerText","submitBtn","submit","formCreateName","_m","undef","commonMaker","create","createTmp","formCreateStyleElId","margeGlobal","_options","sumbitBtn","switchMaker","labelPosition","showMessage","gutter","align","justify","beforeUpload","onProgress","onError","onPreview","onFormatError","onExceededSize","shape","long","htmlType","disabled","loading","onReload","onSubmit","querySelector","window","body","FormCreate","wait","timeout","getElementById","createElement","getElementsByTagName","appendChild","$tick","clearTimeout","install","_installedFormCreate","use","formCreate","_opt","_vue","fComponent","$formCreate","process","default","created","reload","changeValue","changeField","successFn","errorFn","getFormRef","validateField","callback","notField","destroy","$el","$destroy","fields","append","after","prepend","failFn","model","_fields","bind","properties","enumerable","configurable","defineProperties","submitStatus","resetStatus","finish","closeModal","getGlobalApi","formRender","setHandler","bindHandler","$mount","$vm","first","addHandlerWatch","unWatch2","isNotChange"],"mappings":"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"}